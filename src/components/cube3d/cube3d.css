:host {
	--a: 7ch;  /* half cubie edge length */
	--b: -7ch;
}

:host * {
	transform-style: preserve-3d;
	transform-origin: var(--a) var(--a);
}

:host > div {
	display: flex;
    align-items: center;
    justify-content: center;
	width: 100%;
	height: 300px;
	perspective: 1000px;
	/* perspective-origin: 50% 50%; */
	/* background: #aaaa; */
}


@keyframes rotate {
	from { transform: rotateX(-.15turn) rotateY(0); }
	to { transform: rotateX(.85turn) rotateY(5turn); }
}


.cube {
	position: relative;
	top: var(--b);  /* move cube to the middle */
	left: var(--b);
	transform: rotateY(-30deg) rotateX(-20deg) rotateZ(9deg);
	/* animation: rotate 50s infinite linear; */
}



[data-o="0"] { --transform-o: rotate3d(1, -1, 1,   0deg); }
[data-o="1"] { --transform-o: rotate3d(1, -1, 1, 120deg); }
[data-o="2"] { --transform-o: rotate3d(1, -1, 1, 240deg); }

[data-p="0"] { --transform-p: rotateY(0); }
[data-p="1"] { --transform-p: rotateY(-90deg); }
[data-p="2"] { --transform-p: rotateY(90deg); }
[data-p="3"] { --transform-p: rotateY(180deg); }
[data-p="4"] { --transform-p: rotateX(180deg) rotateY(90deg); }
[data-p="5"] { --transform-p: rotateZ(180deg); }
[data-p="6"] { --transform-p: rotateX(180deg); }
[data-p="7"] { --transform-p: rotateX(180deg) rotateY(-90deg); }

[data-p][data-o] > div {
	transform: var(--transform-p) var(--transform-o) translate3d(var(--a), var(--b), var(--a));
}


[data-turn] [data-p] {
	transition: transform .6s cubic-bezier(0.445, 0.05, 0.55, 0.95);
}
[data-turn$="1"] { --turn-angle:  90deg; }
[data-turn$="2"] { --turn-angle: 180deg; }
[data-turn$="3"] { --turn-angle: -90deg; }

[data-turn^="U"] [data-p="0"],
[data-turn^="U"] [data-p="1"],
[data-turn^="U"] [data-p="2"],
[data-turn^="U"] [data-p="3"] { transform: rotate3d( 0, -1,  0, var(--turn-angle)); }

[data-turn^="R"] [data-p="0"],
[data-turn^="R"] [data-p="2"],
[data-turn^="R"] [data-p="4"],
[data-turn^="R"] [data-p="6"] { transform: rotate3d( 1,  0,  0, var(--turn-angle)); }

[data-turn^="F"] [data-p="0"],
[data-turn^="F"] [data-p="1"],
[data-turn^="F"] [data-p="4"],
[data-turn^="F"] [data-p="5"] { transform: rotate3d( 0,  0,  1, var(--turn-angle)); }

[data-turn^="L"] [data-p="1"],
[data-turn^="L"] [data-p="3"],
[data-turn^="L"] [data-p="5"],
[data-turn^="L"] [data-p="7"] { transform: rotate3d(-1,  0,  0, var(--turn-angle)); }

[data-turn^="B"] [data-p="2"],
[data-turn^="B"] [data-p="3"],
[data-turn^="B"] [data-p="6"],
[data-turn^="B"] [data-p="7"] { transform: rotate3d( 0,  0, -1, var(--turn-angle)); }

[data-turn^="D"] [data-p="4"],
[data-turn^="D"] [data-p="5"],
[data-turn^="D"] [data-p="6"],
[data-turn^="D"] [data-p="7"] { transform: rotate3d( 0,  1,  0, var(--turn-angle)); }

[data-turn^="x"] [data-p] { transform: rotate3d( 1,  0,  0, var(--turn-angle)); }
[data-turn^="y"] [data-p] { transform: rotate3d( 0, -1,  0, var(--turn-angle)); }
[data-turn^="z"] [data-p] { transform: rotate3d( 0,  0,  1, var(--turn-angle)); }



/* outer (main) side of each face */
.face {
	display: flex;
	align-items: center;
	justify-content: center;
	position: absolute;
	width: calc(2 * var(--a));
	height: calc(2 * var(--a));
	background-color: rgba(0,30,60,0.2);
	background-color: black;
	backface-visibility: hidden;
	border-radius: calc(.25 * var(--a));
}

/* inner side of each face */
.face::before {
	content: "";
	position: absolute;
	width: 100%;
	height: 100%;
	transform: rotateX(180deg);
	border-radius: inherit;
	background-color: inherit;
	backface-visibility: inherit;
}

.face:nth-child(1) { transform: rotateX(90deg)  translateZ(var(--a)); }
.face:nth-child(2) { transform: rotateY(90deg)  translateZ(var(--a)); }
.face:nth-child(3) { transform:                 translateZ(var(--a)); }
.face:nth-child(4) { transform: rotateY(-90deg) translateZ(var(--a)); }
.face:nth-child(5) { transform: rotateY(180deg) translateZ(var(--a)); }
.face:nth-child(6) { transform: rotateX(-90deg) translateZ(var(--a)); }


[data-sticker]::after {
	content: "";
	width: calc(1.7 * var(--a));
	height: calc(1.7 * var(--a));
	border-radius: calc(.2 * var(--a));
	opacity: 0.9;
	backface-visibility: inherit;
}
[data-sticker="U"]::after { background-color: yellow; }
[data-sticker="R"]::after { background-color: green; }
[data-sticker="F"]::after { background-color: red; }
[data-sticker="L"]::after { background-color: blue; }
[data-sticker="B"]::after { background-color: orange; }
[data-sticker="D"]::after { background-color: white; }




.cross-plane {
	position: absolute;
	width: calc(2 * var(--a));
	height: calc(2 * var(--a));
	background: black;
}
.cross-plane ~ .cross-plane { transform: rotateY(90deg); }
.cross-plane ~ .cross-plane ~ .cross-plane { transform: rotateX(90deg); }
