{"version":3,"sources":["../node_modules/@babel/runtime/helpers/classCallCheck.js","../node_modules/@babel/runtime/helpers/setPrototypeOf.js","../node_modules/@babel/runtime/helpers/inherits.js","../node_modules/@babel/runtime/helpers/typeof.js","../node_modules/@babel/runtime/helpers/assertThisInitialized.js","../node_modules/@babel/runtime/helpers/possibleConstructorReturn.js","../node_modules/@babel/runtime/helpers/getPrototypeOf.js","../node_modules/@babel/runtime/helpers/isNativeFunction.js","../node_modules/@babel/runtime/helpers/isNativeReflectConstruct.js","../node_modules/@babel/runtime/helpers/construct.js","../node_modules/@babel/runtime/helpers/wrapNativeSuper.js","../node_modules/@babel/runtime/helpers/createClass.js","components/cube-unfolded/cube-unfolded.js","components/button/button.js","components/color-pick/color-pick.js","components/setup-controls/setup-controls.js","components/dialog-message/dialog-message.js","components/page-setup/page-setup.js","../node_modules/@babel/runtime/helpers/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/iterableToArray.js","../node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","../node_modules/@babel/runtime/helpers/nonIterableSpread.js","../node_modules/@babel/runtime/helpers/toConsumableArray.js","../node_modules/@babel/runtime/helpers/asyncToGenerator.js","../node_modules/regenerator-runtime/runtime.js","../node_modules/@babel/runtime/regenerator/index.js","animate.js","components/cube3d/cube3d.js","components/solution-progress/solution-progress.js","components/solution-controls/solution-controls.js","components/page-solution/page-solution.js","transforms.js","cubestate.js","../tables/pdb-hash6.json","hashes.js","heuristics.js","searchstate.js","search.js","../node_modules/@babel/runtime/helpers/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/nonIterableRest.js","../node_modules/@babel/runtime/helpers/slicedToArray.js","moves-editor.js","solve.js","components/app/app.js","../node_modules/parcel-bundler/src/builtins/bundle-url.js","../node_modules/parcel-bundler/src/builtins/bundle-loader.js","../node_modules/parcel-bundler/src/builtins/loaders/browser/html-loader.js"],"names":["template","document","createElement","innerHTML","require","CubeUnfolded","attachShadow","mode","shadowRoot","appendChild","content","cloneNode","_stickerValues","split","_stickerElementsSorted","Array","from","querySelectorAll","sort","a","b","dataset","idx","_refresh","addEventListener","evt","target","isNaN","_getSelectedColor","stickerValues","i","length","val","callback","vals","HTMLElement","customElements","define","Button","ColorPick","SetupControls","forEach","x","removeAttribute","getAttribute","querySelector","setAttribute","dispatchEvent","CustomEvent","detail","_","DialogMessage","host","hidden","PageSetup","el_setupControls","_el_message","el_cubeUnfolded","prepend","getSelectedColor","selectedColor","setStickersToSolved","setStickersToEmpty","generateRandomPO","p","o","po2stickers","po","stickers2po","join","textContent","j","Math","random","s","r","validCubies","cubies","stickers","match","PO","k","re","RegExp","test","push","map","usedP","Set","has","add","animate","duration","updateFn","easing","resolve","t0","performance","now","requestAnimationFrame","_step","t","forceComplete","Promise","Cube3d","slot","cubie","el_turnLayer","turn","el_slots","append","style","setProperty","parentNode","children","remove","_updateCubies","el_cubies","el_cubie","slotIdx","turn2oAdd","turn2p","U1","U2","U3","R1","R2","R3","F1","F2","F3","L1","L2","L3","B1","B2","B3","D1","D2","D3","x1","x2","x3","y1","y2","y3","z1","z2","z3","SolutionProgress","_solution","_shouldAnimStop","sol","backgroundPositionX","_setTurns","_setIndexButtons","el","firstChild","removeChild","el_turn","el_btn","onclick","startIndex","step","hostStyle","p0","p1","turnDuration","slow","normal","fast","SolutionControls","_el_stepBackward","_el_play","_el_pause","_el_stepForward","_el_solutionProgress","_stepIndex","_prepareBuffer","_showButton","_buffer","turns","toIdx","_animateTurn","speed","direction","_animationActive","_animationRequestId","_animationFrameHandler","bind","cancelAnimationFrame","shift","updateProgress","slice","reverse","button","solution","fn","PageSolution","_el_cube3d","_el_solutionControls","animateTurn","transP","Uint8Array","transO","Uint16Array","pMatrix","oMatrix","moves","generatePTransforms","i0","i1","i2","i3","move","nextP","generateOTransforms","is","i4","i5","i6","nextO","pm","om","v","module","exports","transforms","CubeState","p2","ps0","toString","ps1","ps2","ps","os","pop","_isNormalized","move1","s1","generateNextState","move2","s2","getNormalizationMoves","state","generateState","startState","hashId","allowedValues","size","average","distribution","patternDB","hash5","hash6","hash7","hash8","hash9","hash","hashes","cubeState","expandMoves","SearchState","prevSearchState","lastMove","lastSide","isSolved","cubeSearch","maxDepth","startNode","search","node","depth","h","isGoal","getMoves","successors","expand","rt0","rt1","rt2","antiFaces","face2plane","removeCubeRotations","removeCubeRotationAt","addRandomCubeRotations","n","replaceWithContra","splice","replace2to1","filter","replace1to2","flat","indexOf","face","includes","per","ori","oi","normalize","console","time","solutionAfterNormalize","timeEnd","concat","App","_el","_el_pageSetup","_el_pageSolution","replaceChild","bundleURL","getBundleURLCached","getBundleURL","Error","err","matches","stack","getBaseURL","url","replace","loadBundlesLazy","bundles","isArray","id","code","LazyPromise","reject","loadBundles","then","all","loadBundle","bundleLoaders","registerBundleLoader","type","loader","load","register","bundle","substring","lastIndexOf","toLowerCase","bundleLoader","resolved","catch","e","executor","promise","prototype","onSuccess","onError","fetch","res","text"],"mappings":"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EAAE,EAAE,EAAE,GACjEC,GAAI,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAIC,GAAI,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAIC,GAAI,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACjEC,GAAI,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAIC,GAAI,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAIC,GAAI,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACjEC,GAAI,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAIC,GAAI,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAIC,GAAI,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACjEC,GAAI,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAIC,GAAI,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAIC,GAAI,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACjEC,GAAI,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAIC,GAAI,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAIC,GAAI,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACjEC,GAAI,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAIC,GAAI,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAIC,GAAI,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACjEC,GAAI,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAIC,GAAI,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAIC,GAAI,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAG5D5B,EAAY,CACjBE,GAAI,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAIC,GAAI,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAIC,GAAI,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACjEC,GAAI,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAIC,GAAI,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAIC,GAAI,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACjEC,GAAI,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAIC,GAAI,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAIC,GAAI,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACjEC,GAAI,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAIC,GAAI,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAIC,GAAI,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACjEC,GAAI,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAIC,GAAI,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAIC,GAAI,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACjEC,GAAI,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAIC,GAAI,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAIC,GAAI,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACjEC,GAAI,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAIC,GAAI,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAIC,GAAI,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACjEC,GAAI,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAIC,GAAI,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAIC,GAAI,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GACjEC,GAAI,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAIC,GAAI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","file":"app.5e276347.js","sourceRoot":"..\\..\\src","sourcesContent":["function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  module.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n  return _setPrototypeOf(o, p);\n}\n\nmodule.exports = _setPrototypeOf;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var setPrototypeOf = require(\"./setPrototypeOf.js\");\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}\n\nmodule.exports = _inherits;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    module.exports = _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n\n    module.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n  } else {\n    module.exports = _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n\n    module.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n  }\n\n  return _typeof(obj);\n}\n\nmodule.exports = _typeof;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nmodule.exports = _assertThisInitialized;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var _typeof = require(\"@babel/runtime/helpers/typeof\")[\"default\"];\n\nvar assertThisInitialized = require(\"./assertThisInitialized.js\");\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}\n\nmodule.exports = _possibleConstructorReturn;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _getPrototypeOf(o) {\n  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  module.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n  return _getPrototypeOf(o);\n}\n\nmodule.exports = _getPrototypeOf;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}\n\nmodule.exports = _isNativeFunction;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nmodule.exports = _isNativeReflectConstruct;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var setPrototypeOf = require(\"./setPrototypeOf.js\");\n\nvar isNativeReflectConstruct = require(\"./isNativeReflectConstruct.js\");\n\nfunction _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    module.exports = _construct = Reflect.construct;\n    module.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n  } else {\n    module.exports = _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n\n    module.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n  }\n\n  return _construct.apply(null, arguments);\n}\n\nmodule.exports = _construct;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var getPrototypeOf = require(\"./getPrototypeOf.js\");\n\nvar setPrototypeOf = require(\"./setPrototypeOf.js\");\n\nvar isNativeFunction = require(\"./isNativeFunction.js\");\n\nvar construct = require(\"./construct.js\");\n\nfunction _wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n\n  module.exports = _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !isNativeFunction(Class)) return Class;\n\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n\n      _cache.set(Class, Wrapper);\n    }\n\n    function Wrapper() {\n      return construct(Class, arguments, getPrototypeOf(this).constructor);\n    }\n\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return setPrototypeOf(Wrapper, Class);\n  };\n\n  module.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n  return _wrapNativeSuper(Class);\n}\n\nmodule.exports = _wrapNativeSuper;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nmodule.exports = _createClass;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","const template = document.createElement('template');\r\ntemplate.innerHTML = require('./cube-unfolded.html');\r\n\r\nexport default class CubeUnfolded extends HTMLElement {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.attachShadow({mode: 'open'});\r\n\t\tthis.shadowRoot.appendChild(template.content.cloneNode(true));\r\n\r\n\t\tthis._stickerValues = 'urfuflubrulbdfrdlfdrbdbl'.split('');\r\n\r\n\t\t// sort, just to be sure that this is independent from order in html,\r\n\t\t// that's why every sticker has data-idx\r\n\t\tthis._stickerElementsSorted = Array.from(this.shadowRoot.querySelectorAll('.sticker'))\r\n\t\t\t.sort((a, b) => a.dataset.idx - b.dataset.idx)\r\n\t\t;\r\n\r\n\t\tthis._refresh();\r\n\t\t\r\n\t\t// set click handler to react on click on sticker\r\n\t\tthis.shadowRoot.addEventListener('click', evt => {\r\n\t\t\tlet idx = evt.target.dataset.idx;\r\n\t\t\tif(isNaN(idx)) return;  // not clicked on sticker\r\n\t\t\tthis._stickerValues[idx] = this._getSelectedColor();\r\n\t\t\tthis._refresh();\r\n\t\t});\r\n\t}\r\n\r\n\t_refresh() {\r\n\t\tlet stickerValues = this._stickerValues;\r\n\t\tfor(let i=0; i<stickerValues.length; i++) {\r\n\t\t\tif(this._stickerElementsSorted[i].dataset.val != stickerValues[i]) {\r\n\t\t\t\tthis._stickerElementsSorted[i].dataset.val = stickerValues[i];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tset getSelectedColor(callback) {\r\n\t\tthis._getSelectedColor = callback;\r\n\t}\r\n\tget stickerValues() {\r\n\t\treturn this._stickerValues;\r\n\t}\r\n\tset stickerValues(vals) {\r\n\t\tthis._stickerValues = vals;\r\n\t\tthis._refresh();\r\n\t}\r\n\tsetStickersToSolved() {\r\n\t\tthis._stickerValues = 'urfuflubrulbdfrdlfdrbdbl'.split('');\r\n\t\tthis._refresh();\r\n\t}\r\n\tsetStickersToEmpty() {\r\n\t\tthis._stickerValues = '........................'.split('');\r\n\t\tthis._refresh();\r\n\t}\r\n}\r\n\r\ncustomElements.define('m-cube-unfolded', CubeUnfolded);\r\n","const template = document.createElement('template');\r\ntemplate.innerHTML = require('./button.html');\r\n\r\nexport class Button extends HTMLElement {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.attachShadow({mode: 'open'});\r\n\t\tthis.shadowRoot.appendChild(template.content.cloneNode(true));\r\n\t}\r\n}\r\n\r\ncustomElements.define('m-button', Button);\r\n","const template = document.createElement('template');\r\ntemplate.innerHTML = require('./color-pick.html');\r\n\r\nexport class ColorPick extends HTMLElement {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.attachShadow({mode: 'open'});\r\n\t\tthis.shadowRoot.appendChild(template.content.cloneNode(true));\r\n\t}\r\n}\r\n\r\ncustomElements.define('m-colorpick', ColorPick);\r\n","import '../button/button.js';\r\nimport '../color-pick/color-pick.js';\r\n\r\nconst template = document.createElement('template');\r\ntemplate.innerHTML = require('./setup-controls.html');\r\n\r\nexport class SetupControls extends HTMLElement {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.attachShadow({mode: 'open'});\r\n\t\tthis.shadowRoot.appendChild(template.content.cloneNode(true));\r\n\r\n\t\tfor(let el of this.shadowRoot.querySelectorAll('m-colorpick')) {\r\n\t\t\tel.addEventListener('click', evt => {\r\n\t\t\t\tthis.shadowRoot.querySelectorAll('m-colorpick').forEach(x => x.removeAttribute('selected'));\r\n\t\t\t\tlet val = evt.target.getAttribute('val');\r\n\t\t\t\tthis.shadowRoot.querySelector(`m-colorpick[val=\"${val}\"]`).setAttribute('selected', true);\r\n\t\t\t\tthis.dispatchEvent(new CustomEvent('pick-color', {detail: val}));\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tthis.shadowRoot.querySelector('#button-reset').addEventListener('click', _ => {\r\n\t\t\tthis.dispatchEvent(new CustomEvent('click-reset'));\r\n\t\t});\r\n\t\tthis.shadowRoot.querySelector('#button-empty').addEventListener('click', _ => {\r\n\t\t\tthis.dispatchEvent(new CustomEvent('click-empty'));\r\n\t\t});\r\n\t\tthis.shadowRoot.querySelector('#button-shuffle').addEventListener('click', _ => {\r\n\t\t\tthis.dispatchEvent(new CustomEvent('click-shuffle'));\r\n\t\t});\r\n\t\tthis.shadowRoot.querySelector('#button-solve').addEventListener('click', _ => {\r\n\t\t\tthis.dispatchEvent(new CustomEvent('click-solve'));\r\n\t\t});\r\n\t}\r\n\r\n\tget selectedColor() {\r\n\t\treturn this.shadowRoot.querySelector('m-colorpick[selected]').getAttribute('val');\r\n\t}\r\n}\r\n\r\ncustomElements.define('m-setup-controls', SetupControls);\r\n","const template = document.createElement('template');\r\ntemplate.innerHTML = require('./dialog-message.html');\r\n\r\n\r\nexport class DialogMessage extends HTMLElement {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.attachShadow({mode: 'open'});\r\n\t\tthis.shadowRoot.appendChild(template.content.cloneNode(true));\r\n\r\n\t\tthis.shadowRoot.host.addEventListener('click', evt => {\r\n\t\t\tthis.hidden = true;\r\n\t\t});\r\n\t}\r\n}\r\n\r\ncustomElements.define('m-dialog-message', DialogMessage);\r\n","import CubeUnfolded from '../cube-unfolded/cube-unfolded.js';\r\nimport '../setup-controls/setup-controls.js';\r\nimport '../dialog-message/dialog-message.js';\r\n\r\nconst template = document.createElement('template');\r\ntemplate.innerHTML = require('./page-setup.html');\r\n\r\n\r\nexport class PageSetup extends HTMLElement {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.attachShadow({mode: 'open'});\r\n\t\tthis.shadowRoot.appendChild(template.content.cloneNode(true));\r\n\r\n\t\tlet el_setupControls = this.shadowRoot.querySelector('m-setup-controls');\r\n\t\tthis._el_message = this.shadowRoot.querySelector('m-dialog-message');\r\n\t\tlet el_cubeUnfolded = new CubeUnfolded();  // create here, so its methods exist right away\r\n\t\t\r\n\t\tthis.shadowRoot.querySelector('div').prepend(el_cubeUnfolded);\r\n\t\t\r\n\t\t// prepare cubeUnfolded\r\n\t\tel_cubeUnfolded.getSelectedColor = _ => el_setupControls.selectedColor;\r\n\r\n\t\t// prepare controls\r\n\t\tel_setupControls.addEventListener('click-reset', _ => {\r\n\t\t\tel_cubeUnfolded.setStickersToSolved();\r\n\t\t});\r\n\t\tel_setupControls.addEventListener('click-empty', _ => {\r\n\t\t\tel_cubeUnfolded.setStickersToEmpty();\r\n\t\t});\r\n\t\tel_setupControls.addEventListener('click-shuffle', _ => {\r\n\t\t\tlet {p, o} = generateRandomPO();\r\n\t\t\tel_cubeUnfolded.stickerValues = po2stickers(p, o);\r\n\t\t});\r\n\t\tel_setupControls.addEventListener('click-solve', _ => {\r\n\t\t\tlet po = stickers2po(el_cubeUnfolded.stickerValues);\r\n\t\t\tif(!po) {\r\n\t\t\t\tthis._el_message.textContent = 'Invalid or ambiguous state!';\r\n\t\t\t\tthis._el_message.hidden = false;\r\n\t\t\t} else if(po.p.join('')=='01234567' && po.o.join('')=='00000000') {\r\n\t\t\t\tthis._el_message.textContent = 'Solved!';\r\n\t\t\t\tthis._el_message.hidden = false;\r\n\t\t\t} else this.dispatchEvent(new CustomEvent('solve', {detail: po}));\r\n\t\t});\r\n\t\tel_setupControls.addEventListener('pick-color', evt => {\r\n\t\t\tel_cubeUnfolded.selectedColor = evt.detail;\r\n\t\t});\r\n\r\n\t\t// // test for some 11-step solution\r\n\t\t// let el_test = document.createElement('button');\r\n\t\t// el_test.textContent = 'test';\r\n\t\t// el_test.onclick = _ => {\r\n\t\t// \tthis.dispatchEvent(new CustomEvent('solve', \r\n\t\t// \t\t{\r\n\t\t// \t\t\tdetail: {\r\n\t\t// \t\t\t\tp: [4,1,2,3,0,5,6,7],\r\n\t\t// \t\t\t\to: [0,0,0,0,0,0,0,0]\r\n\t\t// \t\t\t}\r\n\t\t// \t\t}\r\n\t\t// \t));\r\n\t\t// }\r\n\t\t// el_setupControls.parentNode.appendChild(el_test);\r\n\t\t// // test end\r\n\t}\r\n}\r\n\r\ncustomElements.define('m-page-setup', PageSetup);\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// TODO: function below put in some other file\r\n\r\nfunction generateRandomPO() {\r\n\t// generate p\r\n\tlet p = [0, 1, 2, 3, 4, 5, 6, 7];\r\n\tfor(let i=p.length-1; i>0; i--) {\r\n\t\tlet j = Math.random()*(i+1) | 0;\r\n\t\tlet b = p[i];\r\n\t\tp[i] = p[j];\r\n\t\tp[j] = b;\r\n\t}\r\n\r\n\t// generate o\r\n\tlet o = [];\r\n\tlet s = 0;\r\n\tfor(let i=0; i<7; i++) {\r\n\t\tlet r = Math.random()*3 | 0;\r\n\t\to[i] = r;\r\n\t\ts += r;\r\n\t}\r\n\to[7] = (30 - s) % 3;\r\n\r\n\r\n\treturn {p, o};\r\n}\r\n\r\n\r\nconst validCubies = [\r\n\t['urf', 'fur', 'rfu'],\r\n\t['ufl', 'luf', 'flu'],\r\n\t['ubr', 'rub', 'bru'],\r\n\t['ulb', 'bul', 'lbu'],\r\n\t['dfr', 'rdf', 'frd'],\r\n\t['dlf', 'fdl', 'lfd'],\r\n\t['drb', 'bdr', 'rbd'],\r\n\t['dbl', 'ldb', 'bld']\r\n];\r\n\r\n\r\nfunction po2stickers(p, o) {\r\n\tlet cubies = [];\r\n\tfor(let i=0; i<8; i++) {\r\n\t\tcubies[i] = validCubies[p[i]][o[i]];\r\n\t}\r\n\treturn cubies.join('').split('');\r\n}\r\n\r\nfunction stickers2po(stickers) {\r\n\tlet cubies = stickers.join('').match(/.{3}/g);\r\n\t\r\n\tlet PO = [[], [], [], [], [], [], [], []];\r\n\tfor(let k=0; k<8; k++) {\r\n\t\tlet re = RegExp(cubies[k]);\r\n\t\tfor(let i=0; i<8; i++) {\r\n\t\t\tfor(let j=0; j<3; j++) {\r\n\t\t\t\tif(re.test(validCubies[i][j])) {\r\n\t\t\t\t\tPO[k].push({p: i, o: j});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// validation: every position must contaion only one possible cubie\r\n\tfor(let po of PO) if(po.length != 1) return null;\r\n\r\n\t// get return arrays\r\n\tlet p = PO.map(x => x[0].p);\r\n\tlet o = PO.map(x => x[0].o);\r\n\r\n\t// validation: every cubie must be unique\r\n\tlet usedP = new Set();\r\n\tfor(let x of p) {\r\n\t\tif(usedP.has(x)) return null;\r\n\t\tusedP.add(x);\r\n\t}\r\n\r\n\t// validation: orientations must sum to 0 mod 3\r\n\tlet s = 0;\r\n\tfor(let x of o) s += x;\r\n\tif(s%3 != 0) return null;\r\n\r\n\treturn {p, o};\r\n}\r\n","function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\n\nmodule.exports = _arrayWithoutHoles;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableSpread;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var arrayWithoutHoles = require(\"./arrayWithoutHoles.js\");\n\nvar iterableToArray = require(\"./iterableToArray.js\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread.js\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nfunction _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}\n\nmodule.exports = _asyncToGenerator;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","module.exports = require(\"regenerator-runtime\");\n","// if updateFn returns true, animation will be completed immediately\r\n\r\nexport default function animate(duration, updateFn, easing = x => 3*x**2 - 2*x**3) {\r\n\tlet t0 = performance.now();\r\n\tlet resolve;\r\n\trequestAnimationFrame(_step);\r\n\treturn new Promise(r => { resolve = r });\r\n\r\n\tfunction _step() {\r\n\t\tlet t = performance.now() - t0;\r\n\r\n\t\tif(t < duration) {\r\n\t\t\tlet forceComplete = updateFn(easing(t / duration));\r\n\t\t\tif(forceComplete) resolve();\r\n\t\t\telse requestAnimationFrame(_step);\r\n\t\t} else {\r\n\t\t\tlet forceComplete = updateFn(1);\r\n\t\t\tif(forceComplete) resolve();\r\n\t\t\telse requestAnimationFrame(resolve);\r\n\t\t}\r\n\t}\r\n}\r\n","import animate from '../../animate.js';\r\n\r\nconst template = document.createElement('template');\r\ntemplate.innerHTML = require('./cube3d.html');\r\n\r\nexport default class Cube3d extends HTMLElement {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\t\r\n\t\tthis.attachShadow({mode: 'open'});\r\n\t\tthis.shadowRoot.appendChild(template.content.cloneNode(true));\r\n\t}\r\n\r\n\tset po({p, o}) {\r\n\t\tfor(let i=0; i<8; i++) {\r\n\t\t\tlet slot = this.shadowRoot.querySelector(`[data-slot|=\"${i}\"]`);\r\n\t\t\tlet cubie = this.shadowRoot.querySelector(`[data-p=\"${p[i]}\"]`);\r\n\t\t\tcubie.dataset.o = o[i];\r\n\t\t\tslot.appendChild(cubie);\r\n\t\t}\r\n\t}\r\n\r\n\tdisconnectedCallback() {\r\n\t\tlet el_turnLayer = this.shadowRoot.querySelector(`[data-turn]`);\r\n\t\tif(el_turnLayer) delete el_turnLayer.dataset.turn;\r\n\t}\r\n\r\n\tasync animateTurn(turn, duration) {\r\n\t\tlet el_slots = this.shadowRoot.querySelectorAll(`[data-slot*=\"${turn[0]}\"]`);\r\n\t\tlet el_turnLayer = document.createElement('div');\r\n\t\tel_turnLayer.dataset.turn = turn;\r\n\t\tel_turnLayer.append(...el_slots);\r\n\t\tthis.shadowRoot.querySelector('.cube').append(el_turnLayer);\r\n\r\n\t\tawait animate(duration,\r\n\t\t\tval => {\r\n\t\t\t\tif(el_turnLayer.dataset.turn) el_turnLayer.style.setProperty('--coef', val);\r\n\t\t\t\telse return true;\r\n\t\t\t}\r\n\t\t);\r\n\r\n\t\tel_turnLayer.parentNode.append(...el_turnLayer.children);\r\n\t\tel_turnLayer.remove();\r\n\t\tthis._updateCubies(turn);\r\n\t}\r\n\r\n\t_updateCubies(turn) {\r\n\t\tlet el_cubies = this.shadowRoot.querySelectorAll('[data-p][data-o]');\r\n\r\n\t\tfor(let el_cubie of el_cubies) {\r\n\t\t\tlet slotIdx = +el_cubie.parentNode.dataset.slot.split('-')[0];\r\n\t\t\tel_cubie.dataset.o = (el_cubie.dataset.o + turn2oAdd[turn][slotIdx]) % 3;\r\n\t\t\tlet el_newSlot = this.shadowRoot.querySelector(`[data-slot|=\"${turn2p[turn][slotIdx]}\"]`);\r\n\t\t\tel_newSlot.appendChild(el_cubie);\r\n\t\t}\r\n\t}\r\n}\r\n\r\ncustomElements.define('m-cube3d', Cube3d);\r\n\r\n\r\n\r\n\r\nconst turn2p = {\r\n\tU1: [1,3,0,2,4,5,6,7], U2: [3,2,1,0,4,5,6,7], U3: [2,0,3,1,4,5,6,7],\r\n\tR1: [2,1,6,3,0,5,4,7], R2: [6,1,4,3,2,5,0,7], R3: [4,1,0,3,6,5,2,7],\r\n\tF1: [4,0,2,3,5,1,6,7], F2: [5,4,2,3,1,0,6,7], F3: [1,5,2,3,0,4,6,7],\r\n\tL1: [0,5,2,1,4,7,6,3], L2: [0,7,2,5,4,3,6,1], L3: [0,3,2,7,4,1,6,5],\r\n\tB1: [0,1,3,7,4,5,2,6], B2: [0,1,7,6,4,5,3,2], B3: [0,1,6,2,4,5,7,3],\r\n\tD1: [0,1,2,3,6,4,7,5], D2: [0,1,2,3,7,6,5,4], D3: [0,1,2,3,5,7,4,6],\r\n\tx1: [2,3,6,7,0,1,4,5], x2: [6,7,4,5,2,3,0,1], x3: [4,5,0,1,6,7,2,3],\r\n\ty1: [1,3,0,2,5,7,4,6], y2: [3,2,1,0,7,6,5,4], y3: [2,0,3,1,6,4,7,5],\r\n\tz1: [4,0,6,2,5,1,7,3], z2: [5,4,7,6,1,0,3,2], z3: [1,5,3,7,0,4,2,6],\r\n};\r\n\r\nconst turn2oAdd = {\r\n\tU1: [0,0,0,0,0,0,0,0], U2: [0,0,0,0,0,0,0,0], U3: [0,0,0,0,0,0,0,0],\r\n\tR1: [1,0,2,0,2,0,1,0], R2: [0,0,0,0,0,0,0,0], R3: [1,0,2,0,2,0,1,0],\r\n\tF1: [2,1,0,0,1,2,0,0], F2: [0,0,0,0,0,0,0,0], F3: [2,1,0,0,1,2,0,0],\r\n\tL1: [0,2,0,1,0,1,0,2], L2: [0,0,0,0,0,0,0,0], L3: [0,2,0,1,0,1,0,2],\r\n\tB1: [0,0,1,2,0,0,2,1], B2: [0,0,0,0,0,0,0,0], B3: [0,0,1,2,0,0,2,1],\r\n\tD1: [0,0,0,0,0,0,0,0], D2: [0,0,0,0,0,0,0,0], D3: [0,0,0,0,0,0,0,0],\r\n\tx1: [1,2,2,1,2,1,1,2], x2: [0,0,0,0,0,0,0,0], x3: [1,2,2,1,2,1,1,2],\r\n\ty1: [0,0,0,0,0,0,0,0], y2: [0,0,0,0,0,0,0,0], y3: [0,0,0,0,0,0,0,0],\r\n\tz1: [2,1,1,2,1,2,2,1], z2: [0,0,0,0,0,0,0,0], z3: [2,1,1,2,1,2,2,1],\r\n};\r\n","import animate from '../../animate.js';\r\n\r\nconst template = document.createElement('template');\r\ntemplate.innerHTML = require('./solution-progress.html');\r\n\r\n\r\nexport default class SolutionProgress extends HTMLElement {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\t\r\n\t\tthis.attachShadow({mode: 'open'});\r\n\t\tthis.shadowRoot.appendChild(template.content.cloneNode(true));\r\n\r\n\t\tthis._solution = null;\r\n\t\tthis._shouldAnimStop = null;\r\n\t}\r\n\r\n\tset solution(sol) {\r\n\t\tthis._solution = sol;\r\n\r\n\t\tthis.shadowRoot.host.style.backgroundPositionX = 0;\r\n\r\n\t\tthis._setTurns();\r\n\t\tthis._setIndexButtons();\r\n\t}\r\n\r\n\t_setTurns() {\r\n\t\tlet el = this.shadowRoot.querySelector('#turns');\r\n\r\n\t\t// remove all children\r\n\t\twhile(el.firstChild) el.removeChild(el.firstChild);\r\n\r\n\t\tfor(let i=0; i<this._solution.length; i++) {\r\n\t\t\tlet turn = this._solution[i];\r\n\r\n\t\t\tlet el_turn = document.createElement('div');\r\n\t\t\tel_turn.textContent = turn[0] + [, '', '2', \"'\"][turn[1]];\r\n\t\t\tel.appendChild(el_turn);\r\n\t\t}\r\n\t}\r\n\r\n\t_setIndexButtons() {\r\n\t\tlet el = this.shadowRoot.querySelector('#buttons');\r\n\r\n\t\t// remove all children\r\n\t\twhile(el.firstChild) el.removeChild(el.firstChild);\r\n\r\n\t\tfor(let i=0; i<=this._solution.length; i++) {\r\n\t\t\tlet el_btn = document.createElement('div');\r\n\t\t\tel_btn.onclick = evt => {\r\n\t\t\t\tthis.dispatchEvent(new CustomEvent('set-index', {detail: i}));\r\n\t\t\t};\r\n\t\t\tel.appendChild(el_btn);\r\n\t\t}\r\n\t}\r\n\r\n\tconnectedCallback() {\r\n\t\tthis._shouldAnimStop = false;\r\n\t}\r\n\tdisconnectedCallback() {\r\n\t\tthis._shouldAnimStop = true;\r\n\t}\r\n\r\n\tupdateProgress(startIndex, step, duration) {\r\n\t\tlet hostStyle = this.shadowRoot.host.style;\r\n\t\tlet p0 = startIndex / this._solution.length * 100;\r\n\t\tlet p1 = (startIndex + step) / this._solution.length * 100;\r\n\r\n\t\tanimate(duration,\r\n\t\t\tt => {\r\n\t\t\t\thostStyle.backgroundPositionX = (p0 + (p1-p0) * t) + '%';\r\n\t\t\t\treturn this._shouldAnimStop;\r\n\t\t\t},\r\n\t\t\tx => x\r\n\t\t);\r\n\t}\r\n}\r\n\r\ncustomElements.define('m-solution-progress', SolutionProgress);\r\n","import '../button/button.js';\r\nimport '../solution-progress/solution-progress.js';\r\n\r\nconst template = document.createElement('template');\r\ntemplate.innerHTML = require('./solution-controls.html');\r\n\r\nconst turnDuration = {\r\n\tslow:   [750, 500],  // half-turn, quarter-turn\r\n\tnormal: [600, 400],\r\n\tfast:   [150, 100]\r\n};\r\n\r\nexport default class SolutionControls extends HTMLElement {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\t\r\n\t\tthis.attachShadow({mode: 'open'});\r\n\t\tthis.shadowRoot.appendChild(template.content.cloneNode(true));\r\n\r\n\t\tthis._el_stepBackward     = this.shadowRoot.querySelector('#button-stepbackward');\r\n\t\tthis._el_play             = this.shadowRoot.querySelector('#button-play');\r\n\t\tthis._el_pause            = this.shadowRoot.querySelector('#button-pause');\r\n\t\tthis._el_stepForward      = this.shadowRoot.querySelector('#button-stepforward');\r\n\t\tthis._el_solutionProgress = this.shadowRoot.querySelector('m-solution-progress');\r\n\r\n\t\tthis._el_stepBackward.addEventListener('click', _ => {\r\n\t\t\tif(this._stepIndex == 0) return;\r\n\t\t\tthis._prepareBuffer(this._stepIndex - 1, 'slow');\r\n\t\t\tthis._showButton('play');\r\n\t\t});\r\n\t\tthis._el_play.addEventListener('click', _ => {\r\n\t\t\tif(this._stepIndex == this._solution.length) return;\r\n\t\t\tthis._prepareBuffer(this._solution.length, 'normal');\r\n\t\t\tthis._showButton('pause');\r\n\t\t});\r\n\t\tthis._el_pause.addEventListener('click', _ => {\r\n\t\t\tthis._buffer.turns = [];\r\n\t\t\tthis._showButton('play');\r\n\t\t});\r\n\t\tthis._el_stepForward.addEventListener('click', _ => {\r\n\t\t\tif(this._stepIndex == this._solution.length) return;\r\n\t\t\tthis._prepareBuffer(this._stepIndex + 1, 'slow');\r\n\t\t\tthis._showButton('play');\r\n\t\t});\r\n\t\tthis._el_solutionProgress.addEventListener('set-index', evt => {\r\n\t\t\tlet toIdx = evt.detail;\r\n\t\t\tif(this._stepIndex == toIdx) return;\r\n\t\t\tthis._prepareBuffer(toIdx, 'fast');\r\n\t\t\tthis._showButton('pause');\r\n\t\t});\r\n\r\n\r\n\t\tthis._solution = null;\r\n\t\tthis._stepIndex = 0;\r\n\t\tthis._animateTurn = _ => _;\r\n\r\n\t\tthis._buffer = {\r\n\t\t\tturns: [],\r\n\t\t\tspeed: null,\r\n\t\t\tdirection: 0\r\n\t\t};\r\n\r\n\t\tthis._animationActive = false;\r\n\t\tthis._animationRequestId = null;\r\n\t\tthis._animationFrameHandler = this._animationFrameHandler.bind(this);\r\n\t}\r\n\r\n\tconnectedCallback() {\r\n\t\tthis._showButton('play');\r\n\t\tthis._animationRequestId = requestAnimationFrame(this._animationFrameHandler);\r\n\t}\r\n\r\n\tdisconnectedCallback() {\r\n\t\tcancelAnimationFrame(this._animationRequestId);\r\n\t\tthis._animationActive = false;\r\n\t\tthis._buffer.turns = [];\r\n\t}\r\n\r\n\tasync _animationFrameHandler() {\r\n\t\tthis._animationRequestId = requestAnimationFrame(this._animationFrameHandler);\r\n\t\tif(this._animationActive || this._buffer.turns.length == 0) return;\r\n\t\tthis._animationActive = true;\r\n\t\twhile(this._buffer.turns.length > 0) {\r\n\t\t\tif(!this._animationActive) break;  // this can happen because async\r\n\t\t\tlet turn = this._buffer.turns.shift();\r\n\t\t\tlet duration = turnDuration[this._buffer.speed][turn[1]%2];\r\n\t\t\tthis._el_solutionProgress.updateProgress(this._stepIndex, this._buffer.direction, duration);\r\n\t\t\tthis._stepIndex += this._buffer.direction;\r\n\t\t\tawait this._animateTurn(turn, duration);\r\n\t\t}\r\n\t\tthis._animationActive = false;\r\n\t\tthis._showButton('play');\r\n\t}\r\n\r\n\t_prepareBuffer(toIdx, speed) {\r\n\t\tthis._buffer.speed = speed;\r\n\r\n\t\tif(toIdx >= this._stepIndex) {  // forward\r\n\t\t\tthis._buffer.direction = 1;\r\n\t\t\tthis._buffer.turns = this._solution.slice(this._stepIndex, toIdx);\r\n\t\t}\r\n\t\tif(toIdx < this._stepIndex) {  // backward\r\n\t\t\tthis._buffer.direction = -1;\r\n\t\t\tthis._buffer.turns = this._solution.slice(toIdx, this._stepIndex).reverse().map(t => t[0] + (4-t[1]));\r\n\t\t}\r\n\t}\r\n\r\n\t_showButton(button) {\r\n\t\tif(button == 'play') {\r\n\t\t\tthis._el_play.hidden = false;\r\n\t\t\tthis._el_pause.hidden = true;\r\n\t\t}\r\n\t\tif(button == 'pause') {\r\n\t\t\tthis._el_play.hidden = true;\r\n\t\t\tthis._el_pause.hidden = false;\r\n\t\t}\r\n\t}\r\n\r\n\tset solution(sol) {\r\n\t\tthis._solution = sol;\r\n\t\tthis._el_solutionProgress.solution = sol;\r\n\t\tthis._stepIndex = 0;\r\n\t}\r\n\r\n\tset animateTurn(fn) {\r\n\t\tthis._animateTurn = fn;\r\n\t}\r\n}\r\n\r\ncustomElements.define('m-solution-controls', SolutionControls);\r\n","import '../button/button.js';\r\nimport Cube3d from '../cube3d/cube3d.js';\r\nimport SolutionControls from '../solution-controls/solution-controls.js';\r\n\r\nconst template = document.createElement('template');\r\ntemplate.innerHTML = require('./page-solution.html');\r\n\r\n\r\nclass PageSolution extends HTMLElement {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.attachShadow({mode: 'open'});\r\n\t\tthis.shadowRoot.appendChild(template.content.cloneNode(true));\r\n\r\n\t\tthis.shadowRoot.querySelector('.button-back').addEventListener('click', _ => {\r\n\t\t\tthis.dispatchEvent(new CustomEvent('back'));\r\n\t\t});\r\n\r\n\t\tthis._el_cube3d = new Cube3d();\r\n\t\tthis._el_solutionControls = new SolutionControls();\r\n\r\n\t\tthis.shadowRoot.querySelector('.container').append(this._el_cube3d);\r\n\t\tthis.shadowRoot.querySelector('.container').append(this._el_solutionControls);\r\n\r\n\t\tthis._el_solutionControls.animateTurn = this._el_cube3d.animateTurn.bind(this._el_cube3d);\r\n\t}\r\n\r\n\tset solution(sol) {\r\n\t\tthis._el_solutionControls.solution = sol;\r\n\t}\r\n\r\n\tset po({p, o}) {\r\n\t\tthis._el_cube3d.po = {p, o};\r\n\t}\r\n}\r\n\r\ncustomElements.define('m-page-solution', PageSolution);\r\n","/** \r\nThis file defines transformations for each move as a look-up table,\r\nrather than a function. To boost performance. Because I'm Batman!\r\nThis is to be used for each move in the search algorithm.\r\n\r\nExample:\r\nIf (p2, p1, p0, o) defines a state of a pocket cube, \r\nand we want to perform move U3, the new state will be \r\n(transP.U3[p2], transP.U3[p1], transP.U3[p0], transO.U3[o]).\r\n*/\r\n\r\n'use strict';\r\n\r\nconst transP = {\r\n\tU1: new Uint8Array(241), U2: new Uint8Array(241), U3: new Uint8Array(241),\r\n\tF1: new Uint8Array(241), F2: new Uint8Array(241), F3: new Uint8Array(241),\r\n\tR1: new Uint8Array(241), R2: new Uint8Array(241), R3: new Uint8Array(241),\r\n\tx1: new Uint8Array(241), x2: new Uint8Array(241), x3: new Uint8Array(241),\r\n\ty1: new Uint8Array(241), y2: new Uint8Array(241), y3: new Uint8Array(241),\r\n\tz1: new Uint8Array(241), z2: new Uint8Array(241), z3: new Uint8Array(241)\r\n};\r\n\r\nconst transO = {\r\n\tU1: new Uint16Array(65536), U2: new Uint16Array(65536), U3: new Uint16Array(65536),\r\n\tF1: new Uint16Array(65536), F2: new Uint16Array(65536), F3: new Uint16Array(65536),\r\n\tR1: new Uint16Array(65536), R2: new Uint16Array(65536), R3: new Uint16Array(65536),\r\n\tx1: new Uint16Array(65536), x2: new Uint16Array(65536), x3: new Uint16Array(65536),\r\n\ty1: new Uint16Array(65536), y2: new Uint16Array(65536), y3: new Uint16Array(65536),\r\n\tz1: new Uint16Array(65536), z2: new Uint16Array(65536), z3: new Uint16Array(65536)\r\n};\r\n\r\nconst pMatrix = {\r\n\tU1: [2,0,3,1,4,5,6,7], U2: [3,2,1,0,4,5,6,7], U3: [1,3,0,2,4,5,6,7],\r\n\tF1: [1,5,2,3,0,4,6,7], F2: [5,4,2,3,1,0,6,7], F3: [4,0,2,3,5,1,6,7],\r\n\tR1: [4,1,0,3,6,5,2,7], R2: [6,1,4,3,2,5,0,7], R3: [2,1,6,3,0,5,4,7],\r\n\tx1: [4,5,0,1,6,7,2,3], x2: [6,7,4,5,2,3,0,1], x3: [2,3,6,7,0,1,4,5],\r\n\ty1: [2,0,3,1,6,4,7,5], y2: [3,2,1,0,7,6,5,4], y3: [1,3,0,2,5,7,4,6],\r\n\tz1: [1,5,3,7,0,4,2,6], z2: [5,4,7,6,1,0,3,2], z3: [4,0,6,2,5,1,7,3]\r\n};\r\n\r\nconst oMatrix = {\r\n\tU1: [0,0,0,0,0,0,0,0], U2: [0,0,0,0,0,0,0,0], U3: [0,0,0,0,0,0,0,0],\r\n\tF1: [1,2,0,0,2,1,0,0], F2: [0,0,0,0,0,0,0,0], F3: [1,2,0,0,2,1,0,0],\r\n\tR1: [2,0,1,0,1,0,2,0], R2: [0,0,0,0,0,0,0,0], R3: [2,0,1,0,1,0,2,0],\r\n\tx1: [2,1,1,2,1,2,2,1], x2: [0,0,0,0,0,0,0,0], x3: [2,1,1,2,1,2,2,1],\r\n\ty1: [0,0,0,0,0,0,0,0], y2: [0,0,0,0,0,0,0,0], y3: [0,0,0,0,0,0,0,0],\r\n\tz1: [1,2,2,1,2,1,1,2], z2: [0,0,0,0,0,0,0,0], z3: [1,2,2,1,2,1,1,2]\r\n};\r\n\r\nconst moves = [\r\n\t'U1', 'U2', 'U3', 'F1', 'F2', 'F3', 'R1', 'R2', 'R3',\r\n\t'x1', 'x2', 'x3', 'y1', 'y2', 'y3', 'z1', 'z2', 'z3'\r\n];\r\n\r\n\r\nfunction generatePTransforms() {\r\n\tfor(var i0=0; i0<5; i0++) {\r\n\t\tfor(var i1=i0+1; i1<6; i1++) {\r\n\t\t\tfor(var i2=i1+1; i2<7; i2++) {\r\n\t\t\t\tfor(var i3=i2+1; i3<8; i3++) {\r\n\t\t\t\t\tvar p = 1<<i0 | 1<<i1 | 1<<i2 | 1<<i3;\r\n\t\t\t\t\t\r\n\t\t\t\t\tfor(var move of moves) {\r\n\t\t\t\t\t\tvar nextP = p;\r\n\t\t\t\t\t\tfor(var i=0; i<8; i++) {\r\n\t\t\t\t\t\t\tif(1<<pMatrix[move][i] & p) nextP|=1<<i; else nextP&=~(1<<i);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\ttransP[move][p] = nextP;\t\t\t\t\t\t\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\n// it would be more elegant to write this in recursive way, \r\n// but who cares, this is easier, faster and less error-prone \r\nfunction generateOTransforms() {\r\n\tvar is = [0,1,2];\r\n\tfor(var i0 of is) {\r\n\t\tfor(var i1 of is) {\r\n\t\t\tfor(var i2 of is) {\r\n\t\t\t\tfor(var i3 of is) {\r\n\t\t\t\t\tfor(var i4 of is) {\r\n\t\t\t\t\t\tfor(var i5 of is) {\r\n\t\t\t\t\t\t\tfor(var i6 of is) {\r\n\t\t\t\t\t\t\t\tvar i7 = (30-i0-i1-i2-i3-i4-i5-i6) % 3;\r\n\t\t\t\t\t\t\t\tvar o = i0*3>>1<<0 | i1*3>>1<<2  | i2*3>>1<<4  | i3*3>>1<<6 |\r\n\t\t\t\t\t\t\t\t        i4*3>>1<<8 | i5*3>>1<<10 | i6*3>>1<<12 | i7*3>>1<<14;\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\tfor(var move of moves) {\r\n\t\t\t\t\t\t\t\t\tvar nextO = 0;\r\n\t\t\t\t\t\t\t\t\tvar pm = pMatrix[move];\r\n\t\t\t\t\t\t\t\t\tvar om = oMatrix[move];\r\n\t\t\t\t\t\t\t\t\tfor(var i=0; i<8; i++) {\r\n\t\t\t\t\t\t\t\t\t\tvar v = o>>pm[i]*2 & 0b11;\r\n\t\t\t\t\t\t\t\t\t\tvar step = om[i];\r\n\t\t\t\t\t\t\t\t\t\tif(step==1) v = 5*v+2>>1&3;\r\n\t\t\t\t\t\t\t\t\t\telse if(step==2) v = v+7>>1&3;\r\n\t\t\t\t\t\t\t\t\t\tnextO += v<<i*2;\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\ttransO[move][o] = nextO;\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n\r\ngeneratePTransforms();\r\ngenerateOTransforms();\r\n\r\nmodule.exports = {p: transP, o: transO};\r\n","/**  _.-'-._\r\n _.-'-._3_.-'-._      U - up\r\n|-._ _.-U-._ _.-|     F - front\r\n| 1 |-._ _.-| 2 |     R - right\r\n|-._F   0   R_.-|     L - left\r\n| 5 |-._|_.-| 6 |     B - back\r\n'-._|   |   |_.-'     D - down\r\n    '-._4_.-'\r\n\r\nExample:\r\ncubie positions:  7, 6, 5, 4, 3, 2, 1, 0\r\n\r\npermutation:      3, 7, 4, 2, 6, 0, 5, 1\r\n         p2 = 0b  0  1  1  0  1  0  1  0\r\n         p1 = 0b  1  1  0  1  1  0  0  0\r\n         p0 = 0b  1  1  0  0  0  0  1  1\r\n\r\norientation:      1, 0, 2, 2, 0, 1, 1, 2\r\n         o  = 0b 01 00 11 11 00 01 01 11\r\n\t\t \r\nOrientation 1 (01) means that cubie is oriented 1 step clockwise from solved.\r\nOrientation 2 (11) means that cubie is oriented 1 step counterclockwise from solved.\r\nCodes for orientations 0,1,2 are 00,01,11. The reason is to be able to determine \r\nis cubie correctly oriented only by looking at one bit, the right one.\r\n*/\r\n\r\nconst transforms = require('./transforms.js');\r\nlet transP = transforms.p;\r\nlet transO = transforms.o;\r\n\r\nexport default class CubeState {\r\n\tconstructor(p2, p1, p0, o) {\r\n\t\tthis.p2 = p2 || 0b11110000;\r\n\t\tthis.p1 = p1 || 0b11001100;\r\n\t\tthis.p0 = p0 || 0b10101010;\r\n\t\tthis.o = o || 0b0000000000000000;\r\n\t}\r\n\t\r\n\t/** Generates new CubeState instance\r\n\t*/\r\n\tgenerateNextState(move) {\r\n\t\tlet t = transP[move];\r\n\t\treturn new CubeState(t[this.p2], t[this.p1], t[this.p0], transO[move][this.o]);\r\n\t}\r\n\t\r\n\tstatic generateState(moves, startState) {\r\n\t\tif(typeof moves == 'string') {\r\n\t\t\tmoves = moves.split(' ').map(x => {\r\n\t\t\t\tif(x.length==1) return x+'1';\r\n\t\t\t\tif(x[1]==\"'\") return x[0]+'3';\r\n\t\t\t\treturn x;\r\n\t\t\t});\r\n\t\t}\r\n\t\tlet s = startState ? startState : new CubeState();\r\n\t\tmoves.forEach(move => {s = s.generateNextState(move)});\r\n\t\treturn s;\r\n\t}\r\n\t\r\n\ttoString() {\r\n\t\tlet ps0 = ('0000000' + this.p0.toString(2)).split('').reverse().slice(0,8).map(x => +x);\r\n\t\tlet ps1 = ('0000000' + this.p1.toString(2)).split('').reverse().slice(0,8).map(x => +x);\r\n\t\tlet ps2 = ('0000000' + this.p2.toString(2)).split('').reverse().slice(0,8).map(x => +x);\r\n\t\t\r\n\t\tlet ps = [];\r\n\t\tfor(let i=0; i<8; i++) ps.push(ps0[i] + ps1[i]*2 + ps2[i]*4);\r\n\t\t\r\n\t\tlet os = (131072+this.o).toString(2).match(/.{1,2}/g).reverse().map(x => x=='00' ? 0 : x=='01' ? 1 : 2);\r\n\t\tos.pop();\r\n\t\t\r\n\t\treturn '[' + ps + '] [' + os + ']';\r\n\t}\r\n\t\r\n\t// works only for normalized state\r\n\tisSolved() {\r\n\t\treturn this.o==0b0000000000000000 && this.p2==0b11110000 && this.p1==0b11001100 && this.p0==0b10101010;\r\n\t}\r\n\t\r\n\t_isNormalized() {\r\n\t\treturn (this.p2&this.p1&this.p0) == 0b10000000 && (this.o&0b1100000000000000) == 0;\r\n\t}\r\n\t\r\n\t// Get moves needed to rotate cube so cubie 7 is in its right place and orientation.\r\n\tgetNormalizationMoves() {\r\n\t\tif(this._isNormalized()) return [];\r\n\t\tlet moves = ['x1', 'x2', 'x3', 'y1', 'y2', 'y3', 'z1', 'z2', 'z3'];\r\n\t\t\r\n\t\t// one move\r\n\t\tfor(let move1 of moves) {\r\n\t\t\tlet s1 = this.generateNextState(move1);\r\n\t\t\tif(s1._isNormalized()) return [move1];\r\n\t\t}\r\n\t\t\r\n\t\t// two moves\r\n\t\tfor(let move1 of moves) {\r\n\t\t\tlet s1 = this.generateNextState(move1);\r\n\t\t\tfor(let move2 of moves) {\r\n\t\t\t\tif(move2[0] == move1[0]) continue;  // same axis of rotation\r\n\t\t\t\tlet s2 = s1.generateNextState(move2);\r\n\t\t\t\tif(s2._isNormalized()) return [move1, move2];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\t// Rotate cube so cubie 7 is in its right place and orientation\r\n\tnormalize() {\r\n\t\tlet moves = this.getNormalizationMoves();\r\n\t\tlet state = CubeState.generateState(moves, this);\r\n\t\tthis.p2 = state.p2;\r\n\t\tthis.p1 = state.p1;\r\n\t\tthis.p0 = state.p0;\r\n\t\tthis.o = state.o;\r\n\t\treturn moves;\r\n\t}\r\n\t\r\n}\r\n","module.exports={hashId:\"hash6\",allowedValues:[0,1,2,3,4,5,6,7,8,9,10,11],size:32768,average:6.288299560546875,distribution:{0:1,1:9,2:52,3:290,4:1531,5:5905,6:11103,7:9069,8:3994,9:770,10:44,11:0},patternDB:[4,6,7,6,7,6,6,7,7,6,7,5,6,6,6,5,7,7,7,6,8,7,7,6,7,5,4,6,6,6,5,6,8,6,7,5,6,5,4,5,6,7,7,5,6,5,5,4,6,5,5,4,5,6,5,5,6,5,6,5,6,6,5,5,3,6,7,7,7,7,7,7,7,7,7,5,5,7,6,6,6,7,7,6,7,7,5,5,7,5,5,6,6,6,6,6,7,8,6,6,6,6,6,5,6,5,6,5,5,5,4,4,7,6,6,5,4,5,5,6,6,6,6,5,6,5,6,5,7,8,6,7,8,7,7,8,7,6,7,6,7,6,5,6,8,7,8,7,6,7,6,6,7,5,6,6,6,6,6,6,6,7,7,5,7,6,5,5,8,6,7,5,7,6,6,5,5,7,6,6,6,5,6,6,7,7,6,6,7,6,7,4,5,6,7,7,8,5,8,6,7,7,7,6,7,7,7,7,7,7,7,7,7,6,7,7,7,6,6,5,6,6,7,7,7,7,7,7,7,6,7,7,7,7,5,7,6,4,6,5,7,7,7,7,7,6,6,5,6,6,6,6,7,6,7,6,7,7,7,7,7,7,7,7,7,7,5,6,6,6,7,6,7,7,6,6,5,7,7,7,6,6,7,4,6,6,6,6,7,6,5,5,5,5,6,6,6,6,6,5,6,4,5,5,6,6,5,6,5,4,3,6,7,6,6,5,6,5,5,4,5,7,6,7,6,7,6,5,6,6,6,6,7,5,6,6,5,6,7,6,6,5,5,6,6,4,6,6,5,6,5,5,7,5,4,6,6,6,5,5,7,4,6,5,6,6,6,5,5,5,5,5,6,6,6,5,4,5,6,5,5,4,5,4,6,8,8,7,6,8,8,6,8,7,7,6,7,7,5,6,9,7,8,7,7,5,7,6,6,7,6,6,6,6,7,6,7,7,8,7,7,6,6,5,7,8,6,7,7,6,7,6,7,5,7,6,4,6,6,6,6,7,6,5,7,5,6,5,5,7,8,7,6,8,8,7,8,7,8,8,7,8,8,7,8,4,7,7,7,7,7,6,6,7,7,5,7,5,6,7,8,7,7,7,7,6,6,8,8,7,6,6,4,6,5,5,7,6,6,7,7,7,7,6,7,5,6,7,6,6,6,5,7,7,6,6,7,6,6,6,7,7,6,7,6,6,7,6,6,7,6,5,7,7,6,6,7,5,7,5,6,6,4,6,6,7,6,5,6,6,4,4,7,6,5,6,7,5,6,4,5,6,6,6,6,5,6,5,5,5,5,5,5,5,6,4,7,7,5,6,7,8,7,6,7,6,6,6,5,6,6,6,6,6,6,5,7,6,6,7,4,5,5,5,7,6,7,6,7,7,7,6,7,6,6,5,6,6,6,6,5,5,6,6,6,7,6,6,6,6,6,6,5,6,6,3,5,5,5,5,3,7,6,7,7,6,6,7,8,5,7,6,7,6,5,5,8,6,8,6,6,6,7,4,7,6,6,6,6,6,7,5,7,7,4,6,6,7,5,6,7,6,5,5,6,5,4,5,6,5,7,4,4,5,4,5,6,4,7,6,5,5,5,5,6,4,8,8,8,6,6,7,8,7,7,7,6,6,7,6,8,8,6,6,7,8,6,7,7,6,7,6,7,6,7,6,8,6,7,7,6,6,7,7,7,5,7,7,4,5,7,7,7,6,6,7,7,7,4,6,7,7,7,5,6,6,6,5,3,6,6,6,8,6,7,6,6,6,6,5,7,5,6,6,7,7,6,6,6,6,6,5,6,5,6,4,6,5,6,6,6,6,6,6,4,5,6,5,7,5,5,6,5,3,5,5,4,6,6,6,6,5,5,5,5,5,2,4,6,5,3,5,3,8,9,9,7,7,7,7,7,7,7,7,8,7,5,6,8,7,7,8,7,7,7,6,7,5,6,6,7,7,7,7,9,8,9,6,6,7,7,5,8,7,8,7,7,6,7,7,7,6,7,7,6,7,6,6,6,6,6,6,6,5,6,6,6,4,7,6,7,7,6,5,8,7,7,6,7,6,7,6,7,6,6,6,6,4,5,6,7,5,6,5,7,5,6,6,7,6,6,6,6,6,6,6,7,5,7,5,7,6,5,5,6,6,6,6,4,6,5,5,6,7,6,6,5,5,4,5,9,9,9,7,8,7,8,6,9,6,7,8,9,8,8,9,7,8,8,8,8,7,8,8,8,8,9,7,8,7,7,8,9,8,8,8,8,7,7,8,9,8,8,8,8,7,7,7,8,7,7,7,7,7,8,7,8,8,8,7,5,7,7,7,5,7,7,6,6,6,6,6,6,6,7,5,6,5,7,6,7,7,5,6,6,6,6,6,6,5,6,5,6,7,6,6,7,6,5,6,5,6,5,4,6,6,6,5,6,4,2,3,7,5,7,5,6,6,5,5,6,5,5,5,6,5,7,5,5,6,6,6,6,6,7,5,7,6,6,5,6,5,5,6,5,6,5,5,6,5,7,5,6,6,6,5,6,6,6,6,7,7,5,4,5,5,5,4,6,7,6,6,5,5,6,4,5,6,6,4,6,6,4,6,6,4,5,5,6,4,5,5,5,6,5,7,6,6,6,6,6,5,7,6,5,6,4,5,7,5,8,6,5,6,5,6,7,5,6,6,7,5,6,5,6,6,6,5,6,6,5,6,7,5,5,5,4,5,5,5,6,7,6,4,6,5,4,5,5,6,7,5,6,3,4,5,6,6,7,6,6,6,7,7,8,6,6,7,7,5,6,6,8,7,6,7,6,7,6,6,6,6,7,6,6,6,7,6,7,5,6,6,3,6,6,6,7,6,6,4,6,3,6,5,6,6,6,6,5,4,5,6,7,6,6,4,6,5,6,5,6,7,7,7,8,7,8,7,8,7,6,5,8,7,8,6,7,5,5,7,7,6,6,6,5,6,5,6,6,5,5,5,7,6,7,7,6,5,6,6,7,7,5,6,6,7,7,5,6,5,6,6,6,6,4,6,5,6,6,4,5,5,5,4,6,8,8,6,9,7,7,6,8,8,5,8,8,7,7,7,7,6,7,7,4,7,7,7,7,8,7,6,8,6,6,7,8,7,6,6,8,7,7,5,8,6,7,6,8,7,7,5,8,7,6,5,7,7,6,6,7,6,6,5,6,6,7,6,4,8,8,7,8,8,8,6,8,8,8,8,7,6,7,7,8,7,7,7,6,7,7,4,7,8,7,6,7,5,7,5,8,8,8,6,8,7,8,5,7,5,8,7,7,7,7,6,8,8,7,6,7,6,7,6,8,6,5,6,4,6,6,6,7,7,8,8,8,8,7,8,9,8,8,8,7,8,6,7,8,5,7,8,6,6,8,7,8,7,7,6,8,7,8,6,7,7,7,8,7,8,8,7,9,8,8,7,6,7,6,7,8,8,8,6,6,7,8,6,8,8,8,6,8,4,6,6,4,8,6,6,7,6,6,6,7,6,7,4,5,6,5,6,7,6,7,6,6,5,6,6,6,4,6,5,6,7,5,6,7,5,5,4,6,6,6,5,6,6,7,5,6,5,6,4,6,6,5,5,5,5,6,5,5,5,5,5,6,5,5,5,7,8,6,6,7,6,6,6,6,5,6,5,6,6,6,5,6,6,7,6,6,7,6,7,5,5,4,6,6,5,6,6,6,6,7,4,5,4,6,4,6,6,6,4,5,5,5,5,6,6,6,6,5,6,6,6,7,6,7,4,5,5,6,5,4,7,4,5,8,5,6,5,6,6,6,6,7,5,4,3,7,6,7,5,5,6,5,6,7,4,6,5,5,6,5,6,6,4,7,4,5,5,6,4,7,5,5,5,5,4,5,4,6,6,6,4,4,4,6,5,6,6,5,5,6,4,4,5,2,6,7,7,7,7,7,6,7,4,7,6,6,6,6,6,8,7,6,6,6,6,6,5,7,6,6,6,7,6,6,5,6,6,6,6,6,6,7,5,7,5,6,6,3,6,6,4,7,7,6,5,3,6,6,6,7,6,4,5,6,4,5,5,6,6,5,7,7,6,7,6,7,7,5,5,7,6,6,5,7,7,6,6,6,5,7,6,6,4,5,5,6,6,5,4,6,6,6,6,7,6,6,5,7,6,5,4,6,4,6,6,6,6,6,5,4,5,5,5,4,6,5,4,5,3,6,4,4,5,8,6,8,8,7,6,7,6,7,6,7,6,6,6,7,7,5,5,5,6,6,6,7,6,7,6,5,5,6,5,6,6,7,4,6,6,6,5,8,5,6,6,6,5,6,6,5,6,6,5,7,5,5,5,4,7,4,4,6,5,6,4,5,7,6,6,7,7,7,6,7,6,7,7,7,6,6,6,6,7,6,5,6,5,6,5,6,6,6,6,5,5,6,6,7,5,7,5,7,6,6,6,7,6,7,5,7,5,7,5,7,7,6,4,6,6,6,6,5,6,7,6,6,3,6,5,10,9,8,8,9,8,8,8,8,9,9,8,8,8,9,8,8,8,7,7,7,7,8,7,9,7,8,7,8,7,8,7,6,8,9,8,8,8,7,7,8,7,8,6,8,6,7,8,8,8,9,7,9,8,8,8,8,8,7,7,8,6,8,5,3,7,8,7,7,6,8,7,8,8,8,4,7,6,6,7,7,6,8,7,6,6,7,7,7,4,6,6,7,7,7,6,8,5,6,7,7,6,6,6,8,7,8,6,7,4,6,5,5,5,6,6,6,7,6,6,6,6,6,6,7,6,6,6,6,7,7,7,5,6,6,7,7,7,7,6,7,6,7,5,7,7,6,7,6,6,7,7,4,6,6,5,7,6,7,6,7,7,6,6,7,5,6,6,7,6,6,5,7,6,5,4,5,5,6,6,6,5,6,6,6,4,5,4,4,5,6,5,6,7,7,6,5,5,7,6,8,4,6,6,7,6,6,5,7,6,6,7,7,5,7,6,6,6,7,6,5,5,5,5,7,7,6,4,5,6,5,5,7,6,6,6,7,3,5,6,7,6,7,5,3,5,5,5,6,6,7,6,5,5,5,5,4,7,7,5,5,7,6,6,7,6,8,6,6,6,5,6,7,6,7,6,5,6,6,5,8,6,5,7,5,6,6,6,5,6,7,5,7,6,6,6,7,5,5,6,4,6,6,5,8,5,7,5,3,5,5,5,7,6,6,6,6,3,6,5,6,7,7,7,7,6,6,6,6,7,7,6,7,5,5,6,6,6,6,5,5,4,6,5,6,6,6,5,5,5,6,6,6,6,4,6,7,6,6,6,6,4,5,5,5,6,6,6,7,5,5,6,4,5,5,6,5,4,5,4,6,4,4,5,3,7,7,6,7,7,6,6,6,6,7,6,6,6,6,7,6,6,7,7,6,6,5,4,4,5,7,5,4,6,6,5,5,5,5,4,6,6,6,6,6,4,6,5,7,5,4,5,6,5,6,6,6,6,5,5,4,6,5,5,6,3,6,5,5,5,8,7,7,7,7,7,8,7,6,7,6,4,5,6,8,7,8,6,7,7,7,5,5,7,7,6,7,6,6,6,7,5,5,5,7,5,7,6,8,7,6,5,7,6,5,5,6,5,6,5,6,6,7,7,7,6,5,6,6,3,6,5,5,8,7,6,7,7,7,7,9,8,6,7,8,7,6,6,8,7,6,6,7,7,7,7,5,8,7,7,7,7,7,8,8,8,7,8,7,7,7,7,7,7,8,7,7,7,7,6,6,7,7,7,7,6,4,6,7,7,8,7,7,5,5,6,7,7,6,7,7,7,7,7,7,8,5,5,5,7,6,6,8,6,8,7,7,7,7,7,7,6,6,6,7,7,6,5,8,5,6,7,5,6,6,5,6,6,6,6,5,6,5,6,7,6,6,4,7,6,6,5,7,6,7,4,5,5,6,6,5,7,7,5,6,6,6,5,7,6,7,6,6,6,5,6,7,6,6,6,7,6,4,6,5,6,6,6,5,4,5,6,7,6,6,4,7,6,4,4,6,6,5,5,5,5,5,5,6,5,5,4,5,5,5,5,5,2,6,4,5,5,5,5,6,5,6,6,6,7,6,6,7,7,6,6,5,5,5,5,7,5,7,5,5,5,5,6,6,4,5,6,5,6,6,4,6,6,6,6,5,6,6,5,6,6,4,6,5,6,5,5,7,6,7,5,6,6,5,5,6,6,5,5,6,2,4,4,7,5,5,7,8,6,6,6,5,6,7,6,6,5,7,5,8,8,6,6,6,6,5,6,6,5,7,6,6,6,6,5,7,6,5,7,6,5,6,6,6,6,6,5,6,5,6,5,3,6,6,6,6,5,5,5,7,5,6,5,4,5,6,5,5,7,7,5,7,6,6,7,7,5,5,5,7,5,7,5,5,5,6,6,5,5,6,5,6,3,4,5,5,6,6,6,6,5,5,5,7,6,6,4,7,5,5,4,6,4,6,5,6,5,5,6,4,3,4,6,5,5,4,5,5,4,4,5,8,7,7,6,7,7,6,7,7,6,8,7,7,6,6,6,8,7,5,6,7,7,7,7,7,5,7,6,7,7,5,6,7,4,7,5,5,6,6,6,7,5,7,4,7,6,6,4,6,7,6,6,6,6,5,5,6,4,6,5,5,4,6,6,4,5,6,6,6,6,5,6,7,5,6,6,5,6,6,6,6,7,6,5,6,6,6,4,6,4,5,6,6,6,5,5,7,4,6,6,6,6,6,5,7,5,6,5,6,6,5,6,6,5,6,5,5,4,6,5,5,5,5,5,5,4,4,4,5,8,8,7,9,7,6,7,9,8,8,8,8,7,8,7,8,7,8,7,7,6,4,6,8,8,7,6,7,8,8,8,8,8,8,8,6,7,8,6,8,7,8,7,5,8,7,7,8,8,8,8,7,8,8,7,7,7,6,6,8,6,5,6,7,8,7,6,8,8,7,8,7,8,7,6,5,7,6,5,7,7,7,7,7,7,7,7,7,7,7,6,7,7,6,6,7,8,5,6,7,7,5,6,6,6,7,6,7,7,5,6,5,7,5,6,8,6,5,6,8,5,6,4,6,7,7,5,6,7,5,6,6,8,6,6,8,5,8,5,6,5,7,6,6,7,7,7,5,5,7,7,6,5,6,7,5,6,7,6,5,7,8,7,8,7,5,5,6,4,6,5,7,6,6,6,6,5,6,5,6,5,5,6,4,5,6,5,5,5,6,6,8,7,6,7,8,7,8,7,8,7,6,6,8,7,6,6,8,8,7,7,8,7,7,7,8,7,7,7,6,6,7,5,8,7,7,7,7,8,6,6,7,6,7,7,7,6,6,5,8,7,7,8,7,5,5,6,7,7,7,6,6,6,7,5,6,7,7,6,6,6,6,5,8,6,8,6,6,4,7,6,7,6,5,5,7,7,5,7,6,5,7,6,6,6,6,6,6,5,6,6,7,5,6,6,8,5,5,6,4,4,7,4,7,7,7,5,4,7,6,5,6,6,6,5,6,5,5,4,8,7,8,7,9,8,8,8,8,7,8,6,8,7,7,7,7,8,7,6,6,7,8,7,7,6,7,6,8,7,6,6,8,7,6,7,8,7,7,6,7,7,7,6,8,5,7,7,7,6,7,7,6,5,5,7,7,7,7,6,7,6,6,5,9,6,8,9,9,9,8,9,9,9,10,7,7,8,8,8,10,8,9,8,8,7,8,7,8,7,7,6,7,8,8,7,9,8,7,9,8,7,8,6,9,7,9,7,9,8,7,7,8,8,7,6,6,7,8,7,8,6,8,7,8,6,5,6,6,8,8,8,9,8,7,7,9,7,6,7,7,6,7,6,8,7,7,7,8,6,6,7,7,6,7,7,6,6,7,7,8,8,7,6,7,7,7,5,7,6,7,6,7,5,7,5,7,7,6,5,3,6,5,5,7,5,7,6,6,6,6,6,9,8,9,8,8,8,8,8,8,9,8,8,8,7,8,8,8,8,8,6,5,9,7,8,8,7,8,7,8,6,7,6,7,7,9,8,8,7,5,6,8,8,8,7,8,6,8,6,8,7,5,8,8,7,7,8,8,6,8,6,5,6,7,6,4,7,7,7,7,5,7,6,7,7,7,7,7,5,6,5,7,6,6,7,5,7,7,6,7,5,6,4,7,7,6,6,7,5,7,5,5,5,6,6,7,6,6,6,7,5,4,5,7,7,6,6,7,6,6,6,6,6,5,5,6,6,5,5,4,7,6,7,6,6,7,7,6,7,6,6,6,4,5,6,7,5,5,5,6,5,7,5,5,5,6,5,6,5,6,6,7,7,6,5,6,5,5,5,6,5,6,5,4,4,5,5,6,5,6,5,4,5,5,6,6,5,5,4,4,4,6,6,5,6,6,6,6,6,6,6,7,4,7,5,7,6,5,5,6,6,6,6,6,6,6,6,7,5,5,5,5,4,5,5,7,6,6,5,7,5,6,5,6,6,6,4,7,1,6,4,5,6,5,6,5,5,6,4,6,5,6,6,5,5,4,4,7,7,8,6,7,7,6,7,8,7,7,5,7,6,6,6,7,7,6,7,6,6,6,7,7,7,7,7,6,6,6,7,8,6,6,7,7,6,6,7,7,7,6,6,7,6,6,5,6,6,6,6,6,7,7,6,7,5,7,6,5,5,7,5,5,7,7,6,7,7,6,7,9,6,7,7,7,6,7,7,7,7,7,6,8,6,6,6,4,6,6,6,5,6,7,6,8,7,6,6,7,5,7,6,7,6,5,6,7,6,7,6,6,6,6,7,6,5,6,5,7,4,4,5,5,6,6,6,6,5,6,6,8,7,6,5,7,5,7,6,6,5,6,7,7,5,6,7,6,6,6,6,6,3,6,6,6,6,6,5,5,5,6,6,7,5,5,5,7,5,5,6,6,6,7,6,5,5,7,5,5,6,5,5,4,4,6,4,5,3,6,5,6,8,5,6,7,7,6,6,7,7,7,7,6,7,7,7,8,5,7,5,6,6,5,6,6,7,7,6,6,5,6,6,7,5,6,6,8,5,6,4,7,7,6,6,5,6,7,7,7,6,6,6,4,5,6,5,7,4,6,5,5,3,6,5,9,8,9,9,8,8,9,8,9,9,8,7,9,8,8,7,7,9,8,8,7,8,8,7,9,7,8,7,7,7,8,8,9,8,7,6,8,8,7,7,8,8,6,8,8,7,7,7,7,7,8,7,9,8,7,7,8,7,7,7,7,7,8,6,5,7,7,6,5,6,7,6,7,7,6,5,6,6,6,6,6,7,6,6,5,7,7,7,5,4,6,6,7,5,6,6,7,7,7,5,7,6,6,5,6,6,6,6,6,4,6,4,5,5,6,5,6,6,6,6,5,6,5,4,6,4,6,5,6,6,6,7,7,6,6,7,7,6,5,5,6,5,5,6,7,6,6,7,7,5,7,7,6,6,3,5,6,5,6,5,7,6,6,5,6,5,4,5,5,6,6,5,5,6,5,4,6,5,5,4,5,6,4,6,6,6,5,5,5,5,6,4,4,6,6,7,7,8,7,6,7,8,7,4,6,6,6,5,8,6,8,7,7,6,6,5,7,5,6,6,7,6,7,6,6,5,7,7,7,7,8,5,8,6,6,5,6,5,6,5,7,7,6,7,4,6,6,7,6,6,6,6,7,3,5,6,4,7,8,7,5,7,7,6,7,5,8,6,8,6,6,6,7,6,7,6,7,6,7,4,7,7,6,6,7,5,4,6,8,6,6,5,4,6,7,6,8,5,6,6,6,6,6,5,7,7,7,6,7,6,6,5,7,6,6,6,4,5,6,6,6,6,6,6,7,7,6,7,7,6,6,5,5,4,6,6,6,7,5,6,6,7,6,6,7,4,6,4,6,5,6,6,6,6,5,5,6,6,6,6,7,7,6,5,5,5,6,5,5,6,6,5,6,6,5,5,6,4,6,4,6,5,4,4,5,7,6,6,5,7,7,6,7,6,6,5,7,4,4,6,7,6,4,5,4,5,7,6,5,5,6,5,6,6,6,5,6,7,4,5,4,6,5,5,6,6,4,5,6,5,6,6,6,5,6,5,5,6,4,5,5,5,4,5,6,4,5,4,6,7,7,7,8,7,7,6,6,7,7,7,7,5,5,6,8,7,8,7,7,6,7,7,7,3,8,7,6,7,7,6,7,7,6,7,6,7,6,6,8,6,6,5,6,6,7,6,7,5,7,5,6,4,6,5,5,6,7,5,6,5,4,6,7,7,6,7,7,7,7,7,8,7,8,7,7,8,7,6,7,8,7,7,7,6,5,7,7,6,6,7,6,6,6,6,6,8,7,6,6,7,7,6,8,7,7,6,5,6,7,5,8,8,8,7,6,4,6,6,7,7,6,6,6,4,7,6,5,7,7,6,7,6,6,6,7,7,5,5,6,4,5,6,5,7,6,6,7,6,6,6,5,5,4,6,6,6,6,6,6,7,4,5,6,6,5,5,6,5,4,5,6,5,3,5,5,5,5,5,6,5,6,5,4,5,4,5,5,4,5,4,4,6,5,6,7,7,6,6,7,6,7,6,6,4,6,6,8,7,6,6,7,6,5,6,6,4,5,6,5,5,6,6,6,6,5,6,5,6,5,6,6,6,5,5,5,6,6,5,5,6,6,5,5,5,5,6,4,3,5,3,5,5,5,4,6,6,5,6,6,7,6,6,6,6,5,5,4,6,5,5,7,5,6,5,6,6,6,5,6,5,5,5,5,6,5,5,6,6,5,5,4,6,6,4,6,5,4,5,4,4,5,5,6,6,5,5,5,5,6,5,6,6,6,5,6,4,5,4,8,6,8,7,8,7,7,6,6,6,8,6,6,5,7,7,7,7,8,6,7,6,6,7,8,7,6,7,6,5,5,6,7,7,6,5,7,7,6,6,8,6,7,6,7,6,6,5,4,7,6,6,5,6,5,6,7,7,7,6,6,5,6,5,4,7,5,6,7,6,6,6,6,6,5,5,6,5,6,5,6,6,6,5,6,5,6,4,6,5,5,5,4,5,4,5,6,5,6,5,5,5,6,5,6,4,5,5,4,5,5,4,6,5,5,5,4,5,5,6,6,5,3,4,5,5,3,4,3,6,8,7,8,8,6,7,7,7,7,4,5,7,6,5,8,6,7,6,7,6,7,5,6,5,5,5,6,5,6,6,7,5,6,4,7,5,7,5,6,6,6,5,6,5,5,6,6,6,6,5,4,6,6,6,6,6,5,6,5,3,5,6,5,6,5,6,6,5,7,7,7,6,7,6,5,5,3,5,7,6,6,6,6,5,6,6,5,5,5,6,5,6,6,6,7,6,6,6,6,5,5,5,7,6,6,4,5,4,6,6,6,6,5,5,5,6,5,6,6,5,3,5,6,4,3,5,9,8,9,5,7,7,9,7,8,8,8,8,9,7,7,7,8,7,8,8,8,8,8,8,7,9,7,7,6,7,7,7,9,8,8,8,8,8,8,7,8,8,8,8,8,7,8,7,9,6,7,6,7,8,7,8,9,7,8,8,7,7,7,5,5,8,4,6,6,7,7,5,7,7,6,6,6,5,6,6,6,6,6,6,6,6,6,7,6,5,6,6,6,5,6,6,7,7,6,5,6,6,6,5,5,6,6,5,6,5,6,5,6,6,5,6,6,5,6,6,5,6,7,3,6,5,6,3,5,6,6,6,5,6,7,6,7,4,6,6,5,5,5,5,6,6,6,6,6,6,5,5,6,6,6,5,6,6,5,6,6,5,6,4,7,6,5,6,6,5,5,6,5,6,3,3,6,6,6,5,6,6,4,5,4,5,5,5,6,5,5,5,5,7,7,7,5,6,6,5,7,6,6,5,6,5,4,6,8,5,6,6,7,6,5,6,6,4,6,5,7,6,6,5,7,5,5,3,3,5,5,5,6,4,4,6,4,2,5,4,6,7,5,5,5,6,5,5,6,5,6,5,6,5,4,4,8,5,6,7,6,7,7,6,6,5,7,6,6,5,6,5,7,6,7,6,5,7,4,6,7,5,6,6,5,6,5,6,8,5,7,5,5,6,6,5,7,6,6,5,5,5,7,6,6,6,7,5,6,6,6,4,6,6,6,6,6,4,6,5,5,8,7,7,8,8,6,8,8,8,6,7,8,7,7,7,8,8,7,6,7,8,6,7,8,6,7,7,7,6,7,6,7,7,7,6,6,7,8,7,7,8,6,6,7,7,7,7,8,7,7,7,4,5,7,5,6,7,6,5,7,6,6,5,3,8,7,8,9,8,7,7,8,7,7,5,9,6,7,7,6,6,7,7,8,7,7,5,7,6,5,6,7,6,5,6,8,7,7,6,8,6,8,5,7,6,7,6,8,6,6,6,8,7,7,7,6,7,6,7,7,5,7,5,7,7,6,5,10,8,9,7,7,9,9,8,9,9,8,8,7,8,8,8,8,9,8,8,8,7,8,8,8,8,9,7,8,6,7,7,9,6,9,8,8,5,8,7,8,8,9,7,8,8,7,7,9,9,8,7,8,8,6,6,8,7,6,6,7,7,6,7,10,7,8,8,10,9,7,9,9,7,8,7,7,7,8,8,10,8,8,7,8,9,7,8,8,7,8,7,7,8,8,8,10,8,8,9,8,7,7,7,9,7,9,7,8,9,8,7,8,7,6,8,6,8,8,8,8,8,8,7,7,7,8,7,4,4,5,5,7,7,6,5,7,5,6,6,6,6,6,6,6,6,6,6,6,7,7,6,7,3,5,6,6,6,6,6,6,6,6,4,5,7,6,4,6,6,6,6,5,4,5,3,5,6,6,6,6,4,6,5,5,6,5,6,6,5,5,5,3,6,6,6,6,6,6,6,6,6,7,6,6,3,4,6,6,7,5,6,7,6,6,6,6,5,6,5,6,6,6,6,6,5,5,5,5,5,5,6,7,4,6,4,3,5,5,5,6,6,6,6,5,6,6,5,6,4,5,4,5,6,5,5,3,6,6,6,7,6,6,6,7,5,7,3,6,6,5,6,6,5,7,6,5,6,5,5,6,3,6,4,6,5,5,5,6,6,6,4,6,5,6,5,7,5,6,5,6,5,4,4,6,6,6,6,5,5,5,4,6,6,5,6,6,3,4,5,5,7,8,6,7,6,7,6,7,6,6,6,5,6,6,6,7,6,6,6,6,5,6,7,7,6,6,6,6,5,7,6,6,8,7,7,6,5,6,6,6,7,5,5,5,5,6,5,7,6,5,6,3,5,5,6,7,6,6,5,6,4,6,6,8,8,7,6,7,7,7,5,7,8,7,6,7,7,7,7,7,5,7,7,7,7,6,6,6,6,6,6,6,6,5,6,7,5,7,6,5,6,5,5,7,6,7,6,7,6,7,6,6,6,7,4,6,7,5,4,6,6,7,5,6,6,5,3,7,4,8,6,7,8,7,6,7,6,7,7,7,7,7,7,8,6,7,6,6,6,6,7,6,7,6,6,6,6,7,7,6,7,7,3,7,6,6,4,8,5,7,6,6,5,6,7,6,7,7,5,6,6,5,5,5,6,6,5,6,4,6,5,6,6,7,5,7,7,5,7,7,6,7,7,7,7,7,6,6,6,6,6,6,6,6,6,6,3,6,6,6,6,5,4,7,5,7,6,6,6,5,5,6,6,6,7,6,6,5,5,6,6,6,6,5,5,4,5,6,7,5,5,5,3,5,5,7,7,8,7,9,7,8,7,8,8,7,7,8,8,6,7,8,8,6,6,8,8,8,8,4,7,7,4,7,7,7,6,8,8,7,7,8,7,6,7,8,8,8,7,6,7,7,6,6,7,8,8,7,7,5,6,6,6,7,6,7,5,7,5,6,5,8,6,7,7,6,7,8,7,8,7,6,7,5,7,6,7,8,7,6,7,7,6,8,7,6,6,7,7,6,7,8,7,6,5,7,6,7,6,6,5,6,6,7,7,5,5,7,6,7,7,5,5,6,6,7,5,7,4,6,6,4,6,6,8,7,6,7,7,7,7,8,7,6,6,7,6,6,6,8,6,6,6,7,6,7,7,6,6,7,6,6,6,6,7,7,6,7,7,6,6,6,5,7,7,6,6,7,3,6,6,6,6,7,6,5,5,5,6,5,6,6,6,7,5,6,5,5,7,7,7,6,7,6,7,7,6,7,6,5,5,6,6,7,6,6,7,5,6,6,6,6,6,4,7,6,6,6,5,5,6,6,6,7,5,5,6,7,5,6,6,5,6,5,5,6,6,6,5,6,5,6,6,6,6,7,6,5,2,6,5,2,7,6,7,8,5,7,6,8,5,6,5,7,6,6,5,8,7,6,7,5,7,6,6,6,5,7,6,4,5,6,6,7,7,5,5,7,6,6,6,7,6,6,6,6,4,6,4,6,7,6,5,2,5,6,5,7,5,6,6,5,5,6,4,4,7,7,7,8,7,6,6,6,5,7,7,7,7,5,6,5,5,7,5,6,5,6,5,5,4,6,6,6,5,6,5,5,5,7,7,6,6,6,5,6,3,6,5,6,6,5,5,5,6,6,6,6,6,5,6,3,6,6,5,5,4,4,5,6,8,8,6,6,7,6,6,7,6,5,7,5,6,5,6,7,6,7,6,5,7,6,6,6,6,7,5,6,5,5,6,6,6,7,4,7,6,6,6,7,5,6,5,6,6,6,6,7,5,6,5,6,6,6,5,7,4,6,5,6,4,5,5,6,7,6,7,8,7,6,6,7,7,8,7,5,5,6,6,6,7,6,7,7,6,6,6,6,5,6,7,5,5,6,5,8,6,6,6,7,6,6,5,7,7,7,5,6,5,6,6,7,4,6,6,5,7,6,5,7,7,4,6,6,6,6,4,5,7,6,7,7,9,8,6,7,8,8,6,7,6,4,6,8,5,8,7,6,7,7,7,7,7,7,6,7,7,8,5,7,8,7,8,7,6,6,6,7,6,8,6,6,7,6,6,7,7,6,7,7,6,5,7,8,7,7,6,6,6,7,6,6,8,5,6,6,7,7,7,7,8,4,6,7,6,6,6,8,5,7,7,7,7,7,6,6,4,6,7,5,7,7,6,7,6,6,6,6,5,6,5,7,7,7,5,5,6,6,6,6,5,6,6,5,6,5,6,7,5,6,4,7,4,7,6,4,6,6,7,7,6,7,6,6,6,7,6,5,4,6,6,5,5,6,5,6,6,6,6,5,5,6,5,5,5,6,6,7,5,7,6,5,5,4,5,6,6,6,5,5,5,6,5,4,4,6,6,6,6,5,5,5,3,4,3,4,5,5,5,4,7,7,7,7,7,7,6,7,7,6,6,5,6,6,6,8,6,7,6,7,6,5,5,7,6,6,6,6,6,6,5,6,6,6,4,6,6,5,5,6,6,5,5,6,6,6,5,7,6,6,4,7,5,6,5,6,5,7,5,5,4,5,4,6,7,6,6,8,7,7,6,7,5,6,7,7,5,6,6,7,7,7,7,7,6,6,7,5,5,4,6,6,5,7,6,6,6,6,6,7,5,6,5,6,5,5,6,6,6,6,5,5,5,7,5,5,6,6,5,3,6,6,5,5,4,6,4,3,5,7,7,7,6,6,6,6,4,7,6,6,4,5,5,7,6,7,6,6,5,6,6,6,3,5,4,6,5,6,5,6,5,5,6,7,6,7,5,6,6,5,5,6,5,6,5,4,6,6,5,3,5,6,5,4,4,5,5,5,5,4,5,7,6,7,7,8,7,7,7,7,6,7,5,7,6,6,6,5,8,6,7,6,6,7,8,6,5,6,6,6,7,6,6,7,6,6,5,6,6,5,6,7,6,7,6,5,6,5,5,7,7,6,6,5,6,7,6,7,5,7,4,6,6,6,5,6,6,6,6,7,7,7,7,8,6,6,5,6,5,6,6,7,7,6,5,6,5,6,7,7,2,6,5,5,6,6,6,7,5,7,6,6,6,6,4,6,6,7,6,6,2,6,5,5,6,6,5,5,3,5,6,5,5,5,6,6,4,5,5,6,7,7,6,7,7,7,7,7,7,8,8,7,7,8,6,7,5,8,7,7,8,8,7,8,8,7,7,6,4,7,8,7,8,8,7,7,6,6,7,8,7,7,7,5,4,7,6,7,8,8,6,7,4,6,6,7,5,7,5,4,7,8,5,8,8,7,8,9,6,7,7,7,7,8,6,8,8,6,6,5,7,6,7,7,6,7,7,8,8,7,7,6,7,7,7,8,8,7,5,7,7,6,7,8,8,6,7,6,6,7,5,8,8,6,8,6,7,8,6,7,7,7,6,7,7,7,6,6,8,7,7,8,7,7,6,7,6,7,6,6,4,7,6,8,8,7,6,8,7,7,7,6,6,5,6,6,7,5,6,7,5,6,8,6,5,7,7,7,7,7,7,6,4,7,7,8,7,7,6,6,7,7,6,6,6,7,6,8,5,6,6,8,8,7,7,7,7,7,7,8,8,6,7,8,6,6,7,9,8,7,8,7,7,8,6,8,8,7,7,6,7,6,6,8,8,6,5,7,7,7,7,7,7,7,7,7,7,6,7,6,7,8,7,6,6,7,5,7,7,7,7,6,6,7,5,6,4,8,6,8,6,8,7,8,6,8,7,5,4,7,5,8,8,7,7,6,6,6,7,6,6,6,7,6,6,7,7,8,8,6,8,7,6,7,5,8,8,6,5,7,4,5,7,7,6,7,5,6,6,6,6,7,6,7,7,6,3,6,5,6,7,8,8,9,9,8,8,9,8,8,7,7,7,8,7,7,8,7,7,8,7,7,7,3,8,7,7,8,7,7,7,7,7,7,7,8,4,8,7,7,8,5,7,8,6,8,5,5,5,7,8,8,6,7,7,7,5,8,8,5,6,7,6,8,8,9,9,9,8,7,8,8,8,9,8,8,8,9,8,7,7,8,8,8,8,8,7,7,6,8,8,8,6,7,5,9,5,9,8,9,8,8,6,8,7,8,7,8,7,8,7,4,5,9,7,8,8,6,6,7,6,6,8,6,7,7,7,10,9,7,9,8,8,7,7,8,9,10,8,8,7,9,8,9,8,7,8,9,7,7,6,8,8,8,8,7,8,8,7,8,7,8,7,8,8,8,7,9,8,8,7,8,8,7,6,8,8,8,7,7,6,8,7,8,7,8,7,7,6,7,7,10,9,9,8,8,8,8,8,9,7,9,7,8,8,8,8,8,8,8,7,9,9,7,7,8,7,8,7,7,8,7,6,9,7,8,8,8,7,8,7,8,8,8,8,9,6,8,7,8,8,6,8,7,8,7,7,9,6,8,7,7,7,7,6,7,7,9,5,5,7,7,8,8,8,7,6,8,7,6,7,8,8,6,8,6,7,7,8,8,5,7,5,7,7,6,7,8,7,8,6,8,8,7,6,8,7,8,6,6,5,6,7,7,7,7,7,8,7,7,6,7,7,6,4,6,6,6,6,4,7,7,7,8,7,7,6,7,5,7,6,7,6,6,6,7,7,6,6,7,6,5,6,5,4,6,6,7,6,5,5,7,4,6,6,4,5,6,4,5,4,7,5,4,5,7,5,6,7,5,6,7,5,6,6,6,5,5,4,5,5,6,5,7,8,7,7,8,7,7,6,7,7,7,6,6,8,5,4,8,6,8,7,6,7,7,5,7,6,7,6,7,7,6,6,6,5,6,7,6,6,6,5,6,6,6,5,6,6,6,6,5,6,7,7,5,5,6,6,6,5,6,5,7,3,6,4,6,9,5,6,8,5,8,7,7,6,6,6,7,7,8,7,6,8,7,6,8,6,7,7,4,6,4,6,8,6,6,6,7,7,6,6,7,7,7,7,7,7,5,6,8,7,5,5,7,6,7,7,5,7,7,7,7,7,7,7,7,6,6,4,5,9,7,8,9,7,8,8,8,9,8,8,8,7,7,6,9,8,7,8,8,7,7,7,9,8,7,6,8,6,7,7,8,7,8,7,8,6,7,5,7,7,8,6,8,7,8,7,8,8,7,6,5,7,7,5,7,6,5,7,6,5,6,6,7,9,8,6,7,6,8,5,8,7,7,7,7,8,6,7,7,7,7,7,8,5,7,6,8,5,6,6,5,5,7,6,8,6,6,6,8,6,7,7,7,8,6,6,6,8,7,7,6,7,7,8,6,5,6,6,7,6,6,4,6,7,7,6,8,4,9,8,9,7,8,6,8,8,6,6,7,8,7,6,8,7,8,7,6,5,8,7,7,6,7,7,6,6,7,7,8,8,7,7,7,6,7,7,6,6,7,7,8,6,7,6,7,7,7,6,7,6,7,6,6,7,7,7,6,2,6,6,10,8,8,9,9,9,8,8,9,9,8,7,8,7,8,7,8,8,8,8,9,8,7,8,8,8,8,7,8,6,8,7,8,8,6,8,8,7,8,8,9,8,8,6,8,7,8,7,8,8,5,8,7,7,7,7,8,6,8,7,7,7,7,6,4,8,6,6,7,7,7,6,7,6,6,6,7,6,5,5,7,6,7,6,7,6,7,7,6,5,6,5,5,6,6,6,7,5,7,4,5,6,6,5,8,5,6,6,6,6,5,5,7,5,6,5,6,5,6,5,6,6,6,5,6,5,5,5,4,5,7,7,7,7,6,6,6,4,6,6,7,4,6,6,7,5,6,6,6,6,6,4,6,5,5,4,6,6,6,5,6,5,6,5,5,5,6,6,7,5,6,6,5,2,5,3,5,5,5,4,6,6,6,6,5,4,3,5,5,4,5,4,7,8,7,7,8,7,6,6,7,6,6,7,7,6,7,5,8,8,7,5,6,6,5,6,7,4,7,6,6,4,5,6,6,6,6,5,7,6,6,6,7,5,6,4,6,5,5,4,7,7,7,6,6,5,6,6,7,6,6,5,5,6,5,5,4,7,6,7,7,8,7,6,8,5,6,7,6,5,5,5,6,6,8,7,7,7,6,6,6,6,5,7,6,7,5,5,7,6,7,7,7,6,5,5,6,5,7,6,8,7,6,6,5,6,5,6,5,7,5,6,5,6,7,6,6,4,5,5,3,7,6,6,6,7,7,7,6,5,6,6,6,5,5,5,6,6,5,5,6,5,6,5,5,4,4,6,6,5,6,6,6,6,6,6,5,6,6,6,5,6,5,4,5,5,5,5,4,6,6,6,5,6,5,4,6,6,5,4,6,4,5,4,5,7,7,6,7,6,6,5,7,6,6,5,4,6,6,6,7,5,6,6,6,5,5,6,6,5,5,5,6,6,6,6,6,6,5,3,6,5,5,6,7,5,5,6,6,6,4,6,7,5,6,6,3,5,6,5,6,5,6,4,7,5,5,4,5,5,6,7,7,6,7,6,8,6,6,6,5,6,7,6,6,7,6,6,7,5,7,6,6,6,6,6,6,7,7,6,8,5,6,6,6,5,6,6,7,6,7,6,5,5,6,5,6,6,5,5,5,4,4,5,6,6,6,6,5,5,5,5,9,9,8,7,8,8,6,7,8,8,7,7,8,8,6,7,8,8,8,7,7,7,7,7,8,7,7,7,7,7,7,7,7,7,7,6,6,8,7,6,7,7,7,7,8,7,7,7,8,7,7,6,8,6,7,6,7,7,7,6,6,7,7,6,6,7,7,6,8,7,7,6,6,6,5,5,6,6,7,6,7,7,7,5,6,6,6,7,6,4,6,6,7,7,6,6,7,6,4,6,7,6,6,6,8,7,6,6,6,6,4,6,4,6,6,5,5,6,5,6,6,6,6,6,6,4,6,6,7,6,7,7,8,7,8,7,8,7,7,6,7,6,8,7,7,7,7,8,6,7,6,7,8,6,8,4,7,5,7,7,8,7,6,6,6,6,6,7,8,6,7,7,7,4,5,7,5,7,6,5,6,7,3,6,8,6,7,5,7,5,7,6,5,5,7,7,8,6,7,6,6,6,6,5,4,5,6,5,6,7,6,6,6,5,5,6,7,5,5,5,7,4,5,6,6,6,5,4,4,6,6,5,6,6,6,5,4,4,5,4,6,6,6,5,3,6,6,5,7,6,6,4,5,5,4,4,9,9,9,7,8,9,9,8,9,7,8,8,9,7,8,7,8,8,7,7,7,7,8,7,7,8,8,8,7,7,8,7,7,9,8,9,9,7,8,6,9,7,8,6,8,7,7,8,8,8,8,7,7,6,6,7,6,8,8,7,7,5,6,7,2,7,6,6,7,7,5,7,6,6,7,5,7,5,5,5,6,5,7,6,6,7,6,5,7,5,5,6,6,6,6,6,6,6,5,7,7,6,6,5,7,5,5,6,7,4,5,5,4,5,6,5,5,5,5,5,4,3,5,5,5,6,4,5,7,8,8,6,8,8,7,8,8,8,8,6,7,7,7,7,7,8,8,8,9,8,6,7,7,7,7,7,6,8,5,7,9,7,6,6,8,7,6,7,6,6,7,5,6,7,7,5,5,7,5,5,6,6,6,5,7,7,7,4,7,6,6,7,6,7,6,6,8,6,5,7,7,7,8,6,5,6,6,5,5,6,6,5,6,6,5,6,6,4,7,4,6,6,4,6,7,6,6,6,7,6,5,4,7,7,6,5,6,3,5,5,6,5,6,6,5,5,5,4,7,5,6,6,6,5,5,3,9,8,6,7,9,8,8,8,8,9,8,8,8,8,8,6,9,9,8,7,8,8,6,7,9,7,8,6,7,7,8,6,9,8,9,8,7,9,5,7,8,9,8,7,8,6,8,5,7,7,5,8,7,8,6,7,8,7,8,6,7,6,7,6,3,7,6,5,7,5,5,7,6,5,6,6,4,5,6,6,6,6,6,6,7,6,7,6,6,5,5,6,6,6,5,7,6,5,4,4,5,5,6,6,7,7,4,5,5,5,3,4,6,4,6,4,6,5,6,6,5,5,3,4,6,4,5,5,5,7,7,5,6,6,7,6,6,3,6,5,6,3,5,3,6,5,5,4,6,5,6,6,6,4,4,5,5,5,5,6,7,4,5,5,5,6,5,5,5,5,5,4,5,2,5,3,5,5,6,4,5,4,4,5,5,4,4,5,6,5,5,5,2,6,6,6,6,6,7,5,7,3,7,6,5,6,5,4,7,6,6,7,6,6,6,4,6,6,5,6,5,6,5,6,6,5,5,5,4,5,5,4,6,5,5,4,4,3,6,4,6,6,6,5,5,5,6,4,6,5,6,5,6,5,5,4,5,7,4,6,7,4,6,5,6,5,6,6,5,6,6,5,6,7,5,6,5,5,5,6,5,5,4,6,6,6,6,6,6,5,6,3,5,6,6,6,6,6,4,5,5,5,5,4,5,6,6,4,3,5,6,5,6,6,5,6,5,3,5,4,5,5,7,6,7,6,7,6,7,5,6,6,7,6,6,6,7,6,7,5,5,5,5,5,5,5,5,4,7,5,6,5,6,5,7,5,6,6,5,6,7,4,6,5,6,4,4,5,4,6,6,5,6,6,5,4,4,6,5,4,6,3,5,4,6,8,6,7,7,7,6,7,8,7,5,7,7,7,6,6,7,8,7,5,7,6,6,5,6,4,6,6,6,4,6,6,8,6,7,5,7,6,7,5,7,6,7,5,7,6,7,6,6,6,6,5,6,6,6,6,6,6,5,5,5,4,5,6,5,6,8,6,8,7,8,6,8,7,7,6,7,7,8,6,7,6,5,6,5,5,6,7,7,7,7,5,7,6,6,7,8,7,7,7,7,5,7,6,7,6,7,5,6,7,6,6,6,6,6,6,7,7,7,6,6,6,4,6,6,5,6,6,7,8,6,8,8,7,8,7,9,9,8,8,7,9,7,5,9,8,8,8,7,7,8,6,8,8,6,7,7,8,8,6,8,6,7,7,8,5,6,6,9,8,8,6,8,7,7,6,7,7,7,7,6,5,7,6,7,7,6,7,7,5,7,5,4,7,6,5,7,8,7,6,7,6,5,5,7,4,4,6,8,7,6,6,6,6,7,6,5,5,5,6,6,6,7,6,7,5,4,5,4,6,5,4,7,6,7,5,6,4,5,4,5,6,5,6,5,5,6,6,6,6,3,5,5,5,5,5,5,7,4,6,7,7,7,6,7,6,7,7,7,5,7,5,7,6,5,7,6,6,5,6,6,5,5,5,6,6,6,5,7,6,6,6,6,6,3,6,7,5,6,6,6,6,6,5,5,5,6,6,5,6,4,6,6,3,6,5,5,4,6,4,3,6,7,6,7,6,6,6,7,6,7,6,6,5,5,5,7,6,7,7,4,5,6,6,7,5,6,6,6,5,5,6,7,5,6,5,7,5,6,5,6,6,6,5,6,4,6,4,6,6,5,6,6,6,5,5,6,4,6,5,6,5,5,5,5,7,8,6,7,8,6,5,6,5,8,6,7,6,4,7,7,6,7,7,7,5,5,6,7,7,7,6,7,6,6,6,8,6,6,6,7,6,6,5,5,6,6,5,6,5,5,4,6,6,7,5,5,6,5,5,6,6,5,6,6,5,5,5,4,7,7,6,8,6,7,6,7,5,4,6,6,5,6,6,6,6,7,6,5,5,6,5,4,5,5,6,6,4,6,6,6,5,5,4,6,5,5,6,7,5,4,6,5,4,7,5,4,6,5,4,3,6,5,5,4,6,6,5,6,3,4,4,4,6,8,7,7,6,7,6,7,8,7,6,7,6,6,7,8,6,4,6,4,6,6,7,7,5,7,5,6,6,7,6,7,7,5,6,7,6,7,6,7,4,7,7,5,7,7,6,6,7,6,6,6,6,5,6,7,6,5,4,6,5,6,5,6,6,7,5,8,7,7,7,8,8,7,6,7,7,7,6,7,7,7,4,7,7,6,5,6,3,7,6,7,6,6,4,7,6,6,6,6,6,6,6,7,7,7,4,6,3,6,6,6,6,5,6,5,6,6,6,7,6,6,5,5,4,6,5,5,8,8,8,9,8,9,6,9,9,7,7,8,6,8,7,8,7,5,7,8,7,8,6,4,8,6,8,7,7,8,6,8,8,7,7,8,4,8,6,7,9,6,7,7,7,8,6,6,7,7,7,8,6,7,7,6,7,8,7,7,6,7,6,5,6,7,6,7,7,7,7,8,7,5,6,6,5,6,5,8,7,6,7,8,6,7,6,4,5,5,5,5,6,6,6,7,4,5,5,6,5,6,6,6,7,7,5,7,3,5,3,5,5,6,4,5,7,7,6,6,5,6,5,5,4,5,5,3,6,7,7,7,6,6,6,6,4,6,6,6,5,5,5,7,6,7,6,7,6,6,6,4,3,5,6,6,6,6,6,6,5,7,4,4,6,5,5,6,4,6,6,5,5,4,4,5,6,5,5,5,6,4,5,3,5,4,5,5,5,5,5,5,7,7,6,8,6,7,5,6,5,7,6,6,5,5,5,7,6,6,7,4,6,5,6,7,4,6,5,6,5,6,6,7,5,6,6,5,6,6,6,6,4,7,5,6,5,6,5,6,6,7,5,6,5,6,5,5,4,5,5,5,4,4,4,7,6,7,6,7,7,7,6,7,7,5,5,5,4,6,5,7,6,8,6,5,6,6,6,5,6,6,6,6,6,6,5,6,4,6,6,6,5,6,5,7,6,7,6,6,5,6,4,6,6,6,6,6,4,6,6,7,6,5,5,5,3,6,5,4,7,7,4,7,6,6,6,5,5,6,6,6,4,4,5,7,7,6,6,7,6,5,6,5,6,6,5,5,5,6,6,7,5,5,3,6,4,6,5,6,5,6,5,6,5,6,5,3,5,6,5,4,4,5,5,6,3,3,5,5,4,4,5,2,6,7,6,5,6,5,5,6,7,5,6,5,6,6,6,6,6,6,5,5,4,6,4,5,5,6,6,5,5,6,5,6,6,5,5,5,5,6,5,6,5,5,5,3,5,5,6,6,5,6,5,5,5,5,4,5,6,6,5,5,3,6,4,6,5,6,5,5,6,6,5,8,6,7,6,5,5,5,5,7,6,5,6,6,3,5,5,6,5,6,6,5,4,6,5,7,6,6,6,5,4,6,5,6,6,6,5,6,6,5,5,6,6,5,4,5,4,6,6,6,6,5,5,5,4,5,4,5,7,6,5,5,6,7,6,7,7,7,7,7,5,7,6,7,3,5,5,7,7,7,6,4,7,6,5,6,6,7,5,7,7,6,6,7,5,5,6,7,7,6,6,3,6,6,5,7,6,6,6,6,4,4,6,6,4,4,6,4,4,6,5,5,6,6,7,8,7,8,6,7,5,4,5,4,6,6,6,7,7,6,6,6,7,6,7,6,5,5,6,6,6,6,6,7,4,4,5,5,7,6,5,6,6,5,5,5,4,6,6,6,6,5,6,5,6,6,5,6,6,5,5,6,4,5,4,5,6,7,6,7,6,7,6,6,8,7,6,7,7,7,7,7,8,5,6,6,6,7,6,5,6,6,7,7,7,7,6,7,7,6,7,7,5,6,5,6,4,7,6,4,6,7,6,7,6,7,5,7,5,6,5,6,6,6,5,5,5,5,5,4,7,7,6,8,6,6,6,7,6,5,5,5,6,6,6,5,6,7,7,6,6,6,5,5,3,6,6,6,6,6,5,5,6,6,5,5,6,5,6,6,5,5,6,4,2,3,5,5,6,4,5,6,5,5,6,4,5,5,6,6,5,5,4,6,7,8,6,8,7,7,7,7,7,7,6,7,5,6,7,7,7,5,6,5,6,7,6,7,6,7,6,7,6,6,7,7,7,5,4,7,7,6,6,7,6,6,6,6,5,7,6,7,6,5,6,2,6,6,6,6,6,7,6,6,5,6,5,5,6,6,6,6,6,6,7,6,5,6,6,6,5,6,5,6,6,6,5,5,5,6,5,6,4,5,5,6,4,5,5,6,6,4,5,6,6,6,5,6,5,5,5,5,5,6,4,4,5,6,5,6,6,5,5,6,5,4,4,6,4,4,5,2,7,7,6,6,6,6,6,7,6,7,7,7,5,6,6,7,6,4,6,7,6,6,6,7,4,7,6,7,6,6,6,7,5,6,5,6,6,6,6,8,5,6,5,7,5,5,6,6,6,7,5,5,6,4,5,6,5,6,5,6,5,6,5,5,6,7,5,7,6,4,6,7,6,7,5,6,7,3,6,6,6,7,7,7,6,6,5,7,6,5,6,7,6,6,5,8,6,5,6,7,6,5,6,7,6,6,6,7,5,5,5,6,5,6,5,5,5,5,6,4,6,6,5,5,5,3,6,6,7,7,6,7,6,6,5,9,6,7,6,7,8,7,6,8,6,6,6,6,5,4,7,6,6,6,7,8,7,8,7,7,7,8,8,6,7,8,6,7,7,7,7,5,7,6,7,7,8,6,7,6,6,7,6,7,6,7,6,6,5,6,7,4,7,5,7,8,7,7,6,7,7,5,5,5,6,6,6,7,7,7,6,6,6,7,6,6,4,5,5,6,7,6,6,6,7,5,5,6,6,6,5,6,7,4,5,4,4,6,5,6,6,6,5,6,5,6,6,6,5,5,5,6,4,6,5,4,5,6,6,6,6,6,6,6,4,7,6,6,4,5,5,7,7,5,6,7,5,6,7,6,5,3,5,5,5,6,6,7,4,6,4,5,4,5,5,7,5,5,5,6,5,5,5,4,5,6,5,6,6,7,6,6,4,4,4,5,5,5,4,5,6,7,7,5,6,6,6,7,6,6,5,5,4,7,6,6,4,6,5,6,6,5,7,6,6,6,6,6,6,6,6,5,5,6,3,5,5,6,5,6,4,5,5,3,4,5,5,7,6,6,5,4,5,5,5,7,5,6,5,5,4,5,5,3,7,8,4,6,6,6,5,7,6,6,6,7,5,6,5,6,5,6,5,6,7,5,5,6,6,6,6,5,5,5,5,6,5,6,5,4,5,6,5,7,6,6,5,5,6,6,5,7,6,6,5,6,5,6,4,6,6,6,5,6,4,7,5,5,6,8,7,8,7,8,7,8,7,6,5,7,7,6,6,6,5,7,6,8,7,7,7,4,6,6,6,6,5,6,6,7,6,6,7,7,6,7,6,7,7,6,6,7,6,6,5,4,5,5,5,6,5,6,6,5,5,6,5,6,6,6,5,6,7,6,7,6,7,7,6,8,8,6,6,8,6,5,7,8,5,6,6,3,5,6,6,5,7,6,6,5,5,6,5,8,4,8,6,6,6,7,6,7,5,6,6,6,6,7,5,5,6,6,6,6,6,6,6,6,4,7,4,6,3,5,5,5,7,7,7,7,7,6,7,6,6,7,6,7,7,6,6,7,6,7,7,6,7,6,7,5,2,6,6,5,6,6,5,8,4,7,6,6,6,6,5,7,6,6,6,5,5,7,5,7,6,6,5,6,5,5,5,6,5,6,6,5,2,6,4,6,7,7,7,8,7,6,7,8,8,8,7,8,8,5,6,8,5,7,5,5,6,7,7,8,7,8,5,7,7,6,5,7,7,7,7,8,8,6,6,8,7,8,6,7,6,6,5,7,7,6,5,7,6,7,6,8,6,7,6,4,5,6,6,6,7,7,7,7,7,6,6,8,6,7,6,7,7,5,6,8,7,7,6,7,7,7,7,7,6,6,5,6,6,7,6,7,5,6,5,6,7,6,6,7,7,6,6,6,4,5,5,5,7,6,5,5,6,6,5,7,6,6,4,6,5,4,5,6,7,6,6,7,7,6,4,7,6,8,6,7,6,5,6,7,7,6,6,7,7,4,5,7,6,7,6,7,6,5,5,7,7,6,7,7,6,5,5,5,6,7,6,6,6,6,5,5,6,5,6,5,5,5,6,5,7,6,3,7,6,6,6,4,7,6,6,7,7,7,6,6,4,6,5,6,5,5,6,5,7,5,5,6,5,6,5,5,5,5,5,5,5,5,6,5,6,5,6,5,6,5,5,7,4,7,5,6,6,6,4,5,6,6,6,6,5,5,6,6,5,6,6,6,5,4,3,1,7,4,7,7,7,6,6,6,6,7,7,7,6,7,5,7,7,7,7,5,6,4,5,8,5,7,7,7,7,6,6,7,7,5,6,6,7,4,6,7,6,7,6,6,6,6,5,4,6,5,6,5,6,6,5,6,4,5,6,6,6,6,4,5,6,8,7,8,7,7,7,7,6,7,5,7,6,7,6,8,7,6,7,5,6,6,6,5,5,6,6,6,6,5,6,6,6,5,7,6,6,6,6,7,6,7,6,6,6,4,5,3,6,5,6,6,6,6,6,5,6,5,6,5,4,6,5,6,5,7,6,8,8,7,6,8,6,6,6,6,7,6,6,7,7,7,6,5,6,7,6,7,7,7,5,6,6,6,7,6,7,6,4,7,6,6,5,8,6,7,5,7,5,6,7,5,7,7,6,2,7,4,6,5,5,7,5,6,4,6,5,6,6,6,6,8,8,6,7,8,7,8,6,6,7,6,6,7,6,6,5,5,6,4,7,7,6,6,5,6,6,7,6,8,6,6,6,7,6,8,6,6,6,6,6,6,6,6,6,6,7,6,5,5,7,7,5,7,5,4,6,6,4,5,6,9,7,7,7,8,7,7,7,7,8,7,7,8,7,7,7,8,7,7,8,7,8,7,7,8,7,8,6,7,7,7,6,7,7,8,6,7,7,7,6,8,7,7,6,7,6,7,7,8,7,7,6,8,6,5,6,8,7,7,6,6,7,7,6,8,8,6,5,8,8,7,7,8,8,7,6,5,7,7,5,7,7,7,6,7,7,5,7,6,5,7,7,7,7,6,5,7,6,7,6,6,6,5,5,7,7,6,6,6,6,6,5,7,5,6,6,7,5,6,4,5,6,7,5,6,6,6,5,6,6,6,6,6,6,6,7,8,5,5,5,7,6,6,6,7,7,7,5,6,6,4,5,6,6,7,5,5,6,6,6,6,6,6,5,7,6,4,6,5,5,6,6,5,6,5,4,6,6,5,5,5,6,3,5,4,6,4,5,6,5,5,5,4,7,7,6,7,5,5,6,6,6,5,4,6,6,6,6,6,6,6,5,6,6,4,5,7,4,5,6,6,6,5,6,7,5,7,4,7,4,6,5,7,6,6,5,5,2,5,3,5,6,5,5,4,6,6,5,6,5,7,6,6,5,5,5,3,6,6,7,7,6,6,5,6,5,7,7,6,6,5,6,7,6,6,5,6,6,5,6,5,6,6,6,5,6,5,6,7,5,5,4,5,6,5,5,6,5,5,6,7,5,6,5,7,5,5,5,4,6,5,5,6,6,5,5,6,4,5,5,4,7,6,6,7,7,5,6,5,5,6,6,7,5,6,5,7,4,5,6,6,6,6,5,6,4,5,6,6,6,5,6,7,5,6,5,5,5,6,5,7,5,6,5,5,6,6,6,5,6,6,5,5,6,6,4,5,5,5,5,6,5,5,5,4,7,6,5,6,5,6,5,7,5,6,6,6,5,7,6,6,5,5,6,5,5,5,7,5,5,5,4,6,5,6,5,6,6,5,4,4,6,5,5,6,6,6,5,6,5,5,6,6,5,5,5,3,5,5,5,5,5,4,4,6,4,5,4,7,7,7,5,8,6,6,5,6,5,7,6,4,6,6,5,6,5,6,6,6,6,5,7,6,5,6,3,5,6,5,5,6,5,6,5,6,5,6,5,7,7,5,6,4,4,6,5,6,5,6,4,4,4,4,5,6,5,6,5,6,5,4,4,6,8,7,6,6,7,5,7,7,8,7,7,6,6,5,6,7,4,7,7,6,7,4,6,7,6,7,6,6,6,6,5,6,6,7,6,6,6,6,6,7,6,6,6,5,7,6,5,7,7,7,6,7,5,6,5,6,7,6,6,6,5,6,5,4,8,7,5,9,7,6,8,7,8,7,7,6,7,7,7,8,6,7,6,8,7,6,5,5,6,7,5,7,7,6,6,7,8,7,6,7,7,6,6,6,7,6,5,8,5,3,7,9,5,8,7,7,5,5,5,6,6,6,5,7,6,7,5,5,7,7,6,8,5,7,7,5,6,6,6,6,5,5,7,7,7,4,7,7,6,6,6,5,5,5,5,6,4,7,6,7,6,5,5,6,5,5,6,8,5,6,6,4,4,5,5,6,6,6,4,4,6,4,5,7,5,6,5,5,5,6,5,7,7,6,7,7,7,7,7,8,7,7,7,7,7,6,6,8,5,7,6,6,7,6,7,6,6,6,6,6,7,6,6,7,7,7,5,5,7,6,5,8,7,6,5,6,7,6,5,7,7,8,5,5,6,6,6,6,6,7,5,6,5,6,5,8,7,7,5,7,7,7,7,7,7,7,5,5,6,7,6,8,7,5,7,6,6,5,6,6,6,7,6,7,6,7,6,6,6,7,6,7,6,5,6,7,6,6,5,5,6,7,6,6,6,6,6,5,5,6,5,6,6,6,4,6,4,6,5,7,6,7,6,7,6,7,7,7,7,6,5,7,6,6,5,7,7,6,5,6,4,7,6,5,6,6,5,5,7,6,6,7,7,7,5,6,7,6,5,6,6,6,5,6,6,6,5,8,7,6,5,5,6,6,5,6,6,6,5,6,6,4,6,8,7,8,7,8,8,6,7,7,7,7,5,7,6,6,5,7,7,8,7,7,5,6,7,7,7,7,6,6,7,6,6,8,5,6,5,7,6,6,6,7,6,7,5,5,6,6,4,6,6,6,6,4,6,6,6,7,5,7,5,6,6,7,6,4,6,6,7,7,6,6,7,7,6,7,6,5,5,6,6,7,7,7,5,7,6,6,5,5,6,5,7,6,5,6,6,8,6,6,5,6,5,6,6,7,7,5,5,5,5,5,6,6,5,5,5,5,6,5,4,7,5,4,6,5,4,4,5,5,7,7,6,8,8,8,7,8,8,8,7,7,7,7,6,8,6,7,7,8,7,7,6,8,7,8,6,6,5,7,7,8,7,8,7,8,7,5,7,7,8,7,7,6,5,7,4,7,6,6,6,7,5,6,6,7,4,7,6,5,6,7,5,7,8,7,7,7,5,8,7,6,7,7,7,7,6,8,7,7,8,5,8,8,7,7,8,8,7,7,6,7,7,7,7,7,7,6,7,7,7,7,7,7,7,5,7,8,6,7,6,5,7,5,7,8,6,7,5,5,7,7,5,6,5,7,6,6,7,7,6,8,5,7,6,6,5,5,6,6,7,6,4,7,7,6,6,5,6,7,7,6,6,7,5,6,6,4,6,7,7,5,5,6,7,6,4,7,7,7,6,4,5,5,4,6,5,6,5,6,4,5,4,6,5,5,6,7,5,6,5,8,8,6,7,7,8,7,5,7,6,7,7,7,6,7,5,7,8,6,7,6,6,6,6,7,6,6,6,6,5,6,6,8,7,5,7,7,7,6,5,7,7,5,7,6,5,6,5,7,6,7,5,6,5,7,5,7,7,6,6,6,6,6,6,4,7,5,5,7,6,7,6,6,6,7,6,4,6,6,4,7,6,4,7,6,7,5,5,7,5,5,5,6,6,6,6,6,7,7,4,6,5,6,6,7,6,6,6,6,6,6,4,6,6,6,5,3,5,6,6,7,6,6,6,6,4,6,5,4,7,6,6,7,6,6,6,7,7,6,6,7,7,6,7,6,7,6,5,6,4,6,6,4,6,6,5,7,6,5,5,6,6,6,4,6,5,7,5,6,6,5,5,7,6,7,6,6,6,6,5,4,6,4,4,6,6,5,5,6,5,5,5,4,7,7,7,7,7,6,7,7,6,7,6,8,7,6,7,7,6,7,7,7,7,6,5,7,3,6,7,7,6,6,6,9,6,7,6,8,6,7,5,6,6,6,6,6,7,5,6,4,5,7,6,6,6,6,5,7,6,6,4,6,5,5,5,7,5,8,6,7,7,8,5,8,7,7,6,7,7,7,7,7,6,7,7,6,6,6,6,7,6,7,6,5,6,6,5,7,7,7,6,5,5,6,6,7,5,7,7,6,4,6,5,6,7,5,6,5,6,6,5,6,7,6,6,5,3,5,5,7,8,7,7,7,8,8,7,9,7,8,8,7,7,8,6,8,8,8,6,8,6,6,7,8,7,5,6,7,7,7,6,8,6,7,7,8,4,7,6,7,7,7,7,8,7,8,6,7,7,5,7,6,6,7,5,7,7,6,7,6,5,6,6,5,7,8,6,8,6,6,7,7,7,8,6,6,7,6,6,8,7,7,6,8,7,7,6,7,8,5,7,7,7,6,7,9,8,8,7,8,6,7,6,8,7,6,7,6,7,7,5,8,7,6,6,7,6,6,5,8,6,6,6,6,7,6,6,4,7,5,7,7,8,8,5,8,5,7,7,7,6,6,6,8,5,6,7,6,6,6,5,6,5,6,6,6,6,7,6,7,6,6,6,7,7,4,6,6,6,5,5,5,6,6,4,6,5,7,6,6,6,6,5,5,3,5,6,6,6,7,5,5,6,7,6,7,6,6,6,7,7,6,6,7,5,6,5,6,7,7,6,6,6,7,6,7,7,7,6,7,6,6,6,6,7,7,4,6,6,6,5,7,7,6,5,7,4,5,4,6,7,6,6,5,4,6,5,7,6,6,6,6,5,4,6,4,7,7,7,7,6,7,6,6,7,7,7,7,6,4,7,7,6,7,7,7,5,6,6,7,6,7,7,7,6,7,6,8,6,6,5,7,7,7,6,6,6,6,6,5,5,7,5,4,7,5,7,5,6,6,5,6,6,6,6,6,5,6,5,8,6,6,7,7,7,7,7,7,7,7,7,6,7,8,7,7,8,8,6,7,6,6,6,6,6,6,6,7,7,5,6,8,5,7,4,6,6,6,6,6,6,6,6,7,7,6,7,7,6,6,5,5,7,6,6,5,7,6,6,6,5,5,4,8,5,7,5,7,7,8,5,8,6,7,7,7,7,7,6,7,6,7,7,6,5,5,7,6,5,7,6,6,5,7,6,6,6,6,5,7,6,6,5,7,5,7,6,7,6,7,6,6,7,6,6,5,6,5,6,5,6,6,3,6,4,6,5,5,7,7,7,7,6,5,6,7,7,6,6,8,7,7,7,7,5,7,6,7,7,7,6,6,4,7,6,6,6,6,5,7,6,7,5,7,7,7,4,6,7,6,6,5,7,4,5,5,5,5,6,6,5,5,4,7,6,6,4,6,6,6,5,4,8,7,6,8,7,8,6,7,9,7,7,7,5,6,7,8,7,5,7,7,7,7,5,4,7,6,5,7,6,7,5,7,8,6,7,8,4,7,6,8,7,7,7,7,7,7,6,6,7,5,7,7,6,4,5,5,6,7,5,6,5,6,5,5,7,7,7,8,9,6,7,6,7,8,6,8,7,6,5,8,6,5,6,8,8,6,6,8,7,7,5,6,7,6,6,8,6,8,7,7,7,7,6,7,7,6,7,7,6,5,6,8,7,6,7,7,6,6,5,6,7,6,5,7,7,6,6,5,6,8,6,7,7,7,5,7,6,5,6,6,7,6,5,7,5,7,7,7,4,7,6,6,6,6,4,6,6,6,6,7,6,7,6,6,5,6,5,7,7,7,7,5,6,7,6,8,6,6,6,7,6,5,5,7,5,6,6,6,6,7,5,4,7,7,7,7,7,7,6,8,6,7,6,6,6,5,5,6,7,7,6,5,6,6,6,6,6,6,7,6,6,5,6,7,6,6,4,6,7,5,6,5,5,6,5,6,6,6,5,5,5,7,6,5,6,6,5,5,6,7,6,6,6,6,5,5,6,7,5,6,7,7,7,7,6,8,6,6,6,6,4,7,7,7,6,6,6,5,7,7,5,7,7,7,6,6,6,6,5,7,5,4,5,7,6,7,7,6,6,6,3,6,3,7,7,6,5,5,5,5,5,6,6,7,7,6,4,5,5,3,7,7,7,7,6,8,6,7,6,5,7,8,7,7,6,6,7,6,6,6,6,7,6,7,6,6,5,7,6,6,6,7,6,5,4,7,5,6,5,7,6,7,5,7,6,6,6,7,7,6,5,5,6,6,6,7,5,3,4,6,5,4,5,4,7,6,7,6,7,6,6,6,7,5,6,7,6,7,7,7,6,7,6,6,5,6,6,7,4,6,6,6,7,6,6,8,7,5,5,6,7,6,5,6,6,5,6,5,7,7,6,7,5,6,6,5,5,6,5,5,6,5,5,6,4,5,6,5,7,8,5,6,6,8,7,6,7,7,6,7,7,7,7,7,7,6,6,6,5,7,6,6,6,4,6,7,6,7,5,7,7,7,6,8,7,6,6,6,7,7,6,7,6,6,4,7,6,6,6,7,6,6,5,4,7,6,5,5,5,6,6,5,8,6,7,7,7,8,7,7,8,8,7,7,4,7,7,8,8,5,7,8,6,7,6,6,7,7,7,6,6,7,5,8,7,7,7,8,4,5,6,7,7,7,7,7,6,7,6,6,6,6,7,7,5,7,6,6,5,5,5,5,5,6,5,9,8,9,7,8,8,8,8,9,9,9,6,9,8,7,7,9,9,8,8,8,9,8,7,8,8,7,7,8,8,7,7,8,9,8,8,7,8,7,6,7,8,7,6,8,7,7,7,9,8,7,6,7,6,6,8,8,7,7,5,7,7,7,7,7,7,7,6,6,6,7,6,7,7,7,5,6,7,6,6,6,7,5,6,6,5,6,6,6,6,7,6,7,6,6,6,6,7,7,7,7,6,6,5,6,5,7,6,6,6,7,6,6,7,5,6,6,4,4,5,4,7,6,4,5,4,6,5,7,7,8,6,6,7,5,6,6,7,6,6,5,7,8,7,7,5,8,7,6,6,6,7,7,5,7,7,6,6,6,6,7,5,6,6,7,6,6,5,6,5,5,6,4,6,5,5,6,6,5,5,7,6,6,4,6,6,7,6,6,5,6,5,6,6,8,5,7,5,8,5,6,6,6,6,7,7,5,6,6,6,4,7,6,5,7,7,7,6,5,5,7,5,6,6,7,7,5,4,6,7,6,5,7,5,6,6,5,5,6,5,7,7,6,5,3,6,5,5,7,5,6,6,6,5,6,4,4,6,7,6,8,7,5,7,7,7,7,7,7,5,7,6,7,6,7,5,6,7,6,6,6,6,6,6,7,6,6,6,7,7,7,4,5,5,6,5,7,6,6,6,6,4,5,6,7,5,5,5,4,5,6,5,6,6,5,5,5,5,5,5,3,7,6,7,7,5,7,5,7,5,7,6,6,5,5,6,6,7,6,7,6,6,6,6,6,5,6,7,6,5,6,7,7,7,6,6,7,6,4,6,6,6,6,6,7,6,6,5,5,5,6,5,6,6,6,5,6,7,5,5,6,5,6,5,6,7,8,6,6,7,6,7,9,7,7,5,7,6,6,4,7,7,7,6,7,4,7,5,5,7,6,6,6,5,6,6,6,7,8,6,7,5,6,5,7,7,7,7,6,6,5,6,7,6,6,5,6,3,6,5,7,6,5,6,6,6,6,5,10,9,9,7,7,8,8,8,9,7,8,7,8,8,9,7,9,7,7,7,8,8,7,8,7,7,8,8,8,7,8,7,8,8,7,9,8,8,9,7,8,8,9,6,8,7,7,8,6,8,6,7,8,6,8,6,8,7,9,7,7,7,7,7,7,8,6,8,9,9,8,7,7,8,5,7,8,8,7,7,9,8,9,7,8,7,7,7,9,6,8,7,7,8,7,7,9,7,7,7,5,7,5,7,6,7,7,7,5,7,7,6,7,5,7,7,8,7,8,5,7,7,7,7,6,5,8,6,10,8,8,8,8,8,8,7,9,9,8,8,8,8,7,7,9,9,8,9,7,7,6,8,8,9,7,7,8,7,7,7,9,9,7,7,9,8,6,7,8,8,7,6,8,7,7,7,9,8,9,6,8,7,8,7,8,5,8,7,8,6,7,7,7,9,8,6,8,7,8,6,9,9,8,9,6,8,8,6,9,9,8,7,7,8,4,8,9,8,8,7,7,7,8,5,6,9,8,8,6,7,8,6,7,8,8,6,6,7,8,6,8,6,8,5,8,7,7,5,8,7,7,7,7,6,5,5,9,8,8,7,9,8,7,8,9,8,8,8,8,8,8,8,8,6,8,6,8,8,8,7,9,8,8,8,7,8,6,8,9,7,9,8,7,8,8,7,9,8,8,7,8,8,7,7,8,7,8,8,9,6,7,7,8,8,7,7,7,8,7,6,9,9,8,8,7,9,9,9,8,8,8,8,8,8,8,7,9,8,7,9,7,8,8,8,9,6,7,8,7,8,8,7,8,9,8,8,9,8,8,6,8,7,8,7,8,8,8,8,9,8,8,5,8,7,7,7,7,8,7,7,7,6,7,7,8,9,9,8,9,8,8,6,9,9,9,7,7,8,8,8,7,9,9,8,7,7,8,7,7,8,8,8,7,7,7,8,9,8,8,7,9,7,7,7,9,7,9,8,8,7,7,7,8,6,8,7,7,8,6,7,8,7,8,7,7,7,7,7,8,9,8,8,8,8,7,8,7,6,8,8,8,7,8,8,8,8,9,6,7,7,7,7,8,6,6,7,8,7,7,7,8,5,8,8,9,6,7,6,8,5,7,8,6,6,7,7,7,7,7,5,7,6,7,6,8,7,7,5,7,3,5,6,9,7,8,8,9,9,5,7,7,8,7,8,8,9,7,8,8,8,8,7,9,8,6,7,8,8,8,7,6,7,6,7,9,6,9,8,8,8,8,7,8,7,8,7,8,7,8,7,7,7,8,7,7,7,7,6,7,7,8,8,8,7,7,6,10,8,9,8,9,8,7,8,9,9,8,8,8,8,8,8,8,8,9,8,8,9,7,8,8,9,7,8,6,8,6,8,9,8,8,9,7,8,7,6,9,8,8,6,8,8,7,7,8,8,8,7,9,7,7,7,8,8,8,7,9,8,7,7,9,8,8,7,8,8,7,7,8,8,8,6,8,8,7,7,8,7,8,7,8,6,8,6,7,8,7,6,7,8,7,6,8,8,8,6,8,7,7,7,8,8,8,6,8,7,7,6,8,6,8,7,5,7,6,7,9,7,7,7,6,6,6,7,6,6,8,6,7,6,8,6,8,7,7,7,6,6,6,6,8,7,7,5,6,6,8,6,7,7,6,5,6,6,5,6,7,7,6,4,8,7,6,6,8,7,7,5,7,6,5,6,7,7,6,6,4,7,6,4,8,7,6,6,6,5,5,5,7,8,8,8,8,8,9,7,7,8,8,8,8,8,9,5,7,8,9,8,8,8,7,7,8,6,9,6,8,8,7,7,8,6,8,8,8,8,5,7,8,6,8,7,8,8,7,7,6,6,6,7,8,8,7,6,8,5,7,7,8,8,7,6,8,8,7,8,7,8,9,8,9,7,7,7,8,8,7,8,8,4,8,7,7,7,8,8,8,8,8,6,7,6,7,7,9,7,7,8,6,7,7,7,9,7,7,7,7,7,6,7,9,7,8,7,7,6,7,6,8,8,8,5,7,6,6,6,6,8,7,6,8,7,7,7,8,6,6,6,8,7,7,7,7,8,6,7,7,7,7,7,6,7,6,7,6,7,7,6,8,7,8,4,7,6,5,7,9,7,7,7,7,6,7,6,7,7,7,6,3,6,6,6,6,6,7,6,7,5,6,6,8,8,7,6,9,7,7,7,8,7,8,7,6,7,7,8,8,7,7,7,5,8,6,7,4,6,7,5,6,7,6,5,7,8,8,7,6,6,7,7,8,7,8,7,7,5,7,6,8,7,7,7,7,6,5,6,8,6,6,7,5,6,7,4,9,8,8,8,10,8,7,8,8,9,8,8,7,8,8,7,7,9,8,8,8,9,9,7,9,6,8,7,8,8,7,6,9,9,8,7,8,7,7,7,9,7,8,7,9,7,8,7,8,8,8,7,7,5,6,7,7,8,6,7,7,8,8,7,6,7,7,6,8,6,7,6,8,8,7,5,6,7,4,4,8,6,6,7,6,6,5,6,6,3,7,6,6,7,7,6,7,7,7,5,7,6,7,6,7,7,7,4,7,7,7,6,7,7,5,5,6,7,5,5,6,6,6,6,6,6,6,5,6,6,7,5,6,7,5,6,7,5,6,6,7,6,6,4,6,4,6,5,5,5,6,7,5,5,5,6,6,6,5,6,7,7,5,4,7,6,6,5,7,6,6,5,5,5,5,6,7,6,7,5,6,5,5,5,7,4,5,4,5,5,5,5,7,7,5,6,7,6,7,6,7,5,7,6,7,7,6,6,7,6,7,6,6,6,6,6,7,5,7,6,6,5,7,6,7,7,7,6,6,6,6,5,7,6,5,6,5,5,5,5,7,6,5,6,6,5,5,5,6,6,6,5,4,5,4,5,6,7,8,7,6,7,7,6,7,5,7,6,6,5,7,7,7,7,5,6,7,8,5,7,6,7,7,6,6,7,6,5,7,6,6,7,6,6,6,6,7,6,6,6,5,4,6,6,8,7,6,5,6,7,6,4,7,6,5,6,5,6,6,4,6,8,7,6,7,7,7,6,8,7,5,5,7,5,6,7,8,6,7,7,6,5,7,6,6,6,6,5,5,7,5,5,6,6,6,5,6,6,6,6,8,6,6,5,7,4,6,5,7,4,5,6,4,4,4,6,6,6,6,6,6,5,6,4,5,6,6,7,6,6,6,6,7,5,6,7,7,5,6,6,7,7,5,7,5,7,6,4,7,6,7,6,5,6,6,5,6,6,5,6,6,6,6,6,6,5,6,6,7,5,5,4,6,6,6,4,6,5,6,5,4,5,3,5,6,5,5,5,4,6,8,7,7,7,7,5,8,5,6,6,5,5,6,4,8,7,6,5,7,7,5,4,6,3,5,7,6,5,5,5,7,7,6,6,6,5,7,5,7,7,6,4,6,5,5,5,6,6,5,5,6,4,5,5,7,6,4,6,5,5,5,5,6,7,6,8,8,7,8,8,8,8,7,7,7,4,6,7,8,8,6,6,7,7,7,7,6,6,6,6,7,6,6,4,7,6,7,6,7,5,5,7,8,8,7,7,7,5,7,6,6,7,6,7,6,5,7,6,5,5,5,5,5,5,6,5,1,8,7,7,8,7,7,6,7,7,7,5,7,7,5,7,7,6,7,6,6,6,7,6,7,5,7,7,7,7,7,6,8,7,7,7,7,7,7,6,7,6,7,6,7,5,6,6,8,6,7,6,7,6,6,6,5,6,5,6,7,6,7,6,7,9,8,7,9,6,7,7,7,8,7,8,8,8,6,7,8,8,8,8,7,8,7,7,8,7,8,6,5,5,6,6,7,6,9,4,7,8,8,6,7,7,7,6,8,6,5,5,7,5,7,5,7,6,6,7,7,7,6,6,6,7,6,5,6,6,6,7,7,7,4,7,7,7,7,6,6,7,5,5,8,6,8,6,5,6,4,6,7,3,7,6,6,7,6,4,7,7,6,6,6,6,6,6,8,6,6,6,7,4,5,6,8,7,7,7,7,6,6,4,6,7,6,6,6,6,6,5,5,8,9,7,7,8,7,8,7,7,8,6,8,7,3,8,8,7,7,8,8,6,7,6,7,7,7,7,7,7,6,5,9,6,8,6,7,6,6,6,8,7,8,6,7,6,7,6,7,6,8,7,6,7,6,5,7,7,7,7,5,6,6,6,8,8,8,6,8,7,8,7,7,5,7,6,7,6,7,7,8,7,7,6,7,7,6,6,7,4,7,6,6,6,6,5,7,7,6,6,7,7,5,6,7,6,6,7,6,6,7,6,6,6,7,6,5,6,6,6,5,6,6,6,6,6,5,6,8,9,7,8,8,8,8,5,9,6,6,8,9,5,6,7,8,9,7,7,7,8,7,7,6,7,6,7,7,6,6,6,6,9,7,6,8,6,8,7,7,8,7,7,7,7,7,6,8,8,8,5,7,8,8,7,5,7,6,7,7,5,7,7,5,8,7,6,8,6,6,7,7,6,7,7,5,6,7,6,5,6,7,6,6,7,7,5,8,5,7,7,6,6,6,5,7,7,6,5,6,6,7,6,7,6,6,4,5,6,6,6,7,7,7,6,7,5,6,6,7,6,6,6,7,5,5,5,10,8,9,8,6,8,9,9,9,7,8,7,8,9,8,7,9,7,7,7,8,8,8,8,7,7,8,8,8,7,8,8,8,8,8,9,9,9,8,6,8,8,8,7,8,7,7,7,7,8,5,8,8,7,8,7,8,7,8,7,6,7,7,6,1,8,7,7,8,7,6,7,8,7,7,7,7,6,6,7,8,7,7,6,7,7,7,5,6,6,6,6,7,6,5,5,9,7,6,5,7,6,3,5,7,6,7,6,7,6,6,6,5,7,6,7,7,7,5,6,6,4,6,6,6,6,7,5,4,7,4,5,6,4,6,5,6,5,5,4,6,2,5,5,6,4,4,4,6,6,4,5,5,4,4,6,5,5,5,5,7,5,5,5,6,6,5,5,6,6,5,4,5,5,5,3,6,6,5,4,4,4,6,6,5,5,4,4,5,4,6,5,6,6,6,6,6,6,6,6,7,5,7,6,6,6,5,4,8,6,7,6,6,5,7,5,7,6,5,6,5,6,6,5,7,6,5,7,4,5,5,5,6,7,5,4,5,5,5,5,7,6,6,6,5,5,5,6,7,5,6,5,6,5,6,5,4,6,7,6,6,6,7,6,7,4,7,6,5,7,4,5,7,7,7,6,6,6,6,7,6,5,6,5,5,5,6,5,5,5,6,6,5,6,5,5,6,6,5,6,5,4,5,4,6,6,6,6,6,5,5,5,6,5,6,6,6,4,6,5,5,6,6,6,7,6,6,5,8,6,6,6,7,6,5,5,6,5,4,5,3,4,5,6,6,6,6,3,6,5,6,5,7,4,5,5,6,6,6,6,6,5,5,5,6,6,6,6,5,6,5,4,7,6,5,4,5,5,5,5,5,4,5,5,6,8,7,5,8,7,7,6,8,7,7,6,7,6,7,6,7,7,6,6,5,7,5,6,5,4,6,5,5,6,6,5,5,7,7,7,7,6,7,6,8,6,7,6,7,5,6,7,7,7,5,6,5,6,5,6,7,7,6,6,7,5,6,5,6,6,6,7,7,7,6,7,8,7,8,5,6,6,7,7,6,6,7,6,6,7,6,7,5,4,7,6,6,6,6,5,7,6,7,6,6,6,7,4,7,6,7,5,6,4,4,6,5,6,6,6,4,6,5,5,6,6,5,5,6,5,5,4,10,7,8,9,8,8,6,8,7,7,8,8,8,8,7,7,8,8,8,8,9,9,7,8,8,9,9,6,7,7,7,7,8,6,9,7,7,8,7,8,8,6,9,8,8,7,8,7,8,8,8,7,6,7,7,7,8,7,8,8,8,7,6,5,6,7,8,6,8,7,6,7,8,7,7,5,5,7,7,6,7,6,6,7,6,7,7,6,6,6,4,4,6,6,5,5,7,7,7,4,6,6,4,5,7,7,7,6,6,3,6,6,6,7,4,5,6,6,5,6,6,5,7,6,6,5,6,5,6,6,7,7,8,7,6,7,8,5,7,7,5,7,6,7,7,8,6,7,6,6,5,7,7,5,5,5,6,5,5,7,8,7,4,5,6,6,6,5,7,5,6,5,4,4,4,4,6,4,7,5,5,6,4,6,6,6,7,5,6,4,6,5,4,6,6,5,7,4,5,5,7,5,5,4,6,3,6,5,7,6,6,5,4,4,4,5,6,4,4,6,5,5,5,6,6,6,6,5,7,6,5,4,6,6,5,5,6,5,6,4,6,6,6,6,4,5,5,5,7,5,6,6,5,5,5,4,7,5,8,6,7,7,5,7,7,6,7,6,7,6,7,5,6,7,6,5,7,7,6,6,7,6,7,6,6,6,6,6,7,7,8,4,5,6,6,6,8,7,7,6,7,5,7,6,6,7,6,7,5,6,5,4,7,6,7,5,5,6,6,5,3,6,7,5,7,7,7,6,7,6,5,6,6,4,6,6,7,7,6,4,6,5,6,4,5,6,6,5,5,5,6,5,6,7,6,4,5,5,7,5,6,6,4,6,7,5,6,5,5,6,5,5,6,6,5,5,5,5,6,5,5,5,4,4,6,6,6,7,7,7,6,6,8,6,5,7,7,6,6,6,7,6,7,6,6,7,5,5,6,4,6,7,6,6,6,4,7,6,7,7,7,6,5,5,7,4,6,6,5,6,6,6,6,6,6,6,3,7,6,5,5,5,7,5,6,5,6,5,7,6,6,6,8,7,7,7,8,7,7,6,7,5,7,6,7,7,7,7,7,6,7,7,5,6,5,6,7,6,6,6,6,6,8,7,5,6,6,6,8,7,7,6,5,4,6,6,7,7,6,5,4,6,5,6,7,6,6,6,7,5,4,5,10,9,9,7,9,7,7,7,9,9,8,8,8,8,8,8,8,9,9,8,7,9,8,8,9,7,8,7,8,7,7,7,8,8,8,7,8,6,8,7,9,8,8,8,9,6,8,6,7,7,8,7,8,6,6,7,7,8,7,6,7,7,7,6,6,8,7,4,5,6,5,5,8,6,8,6,5,4,7,6,6,7,3,5,5,7,6,7,6,6,7,6,6,5,5,5,7,6,6,6,6,7,6,6,6,6,6,5,6,6,7,5,7,6,5,6,6,6,5,6,5,6,6,6,6,6,6,5,6,5,7,4,5,5,6,4,6,7,6,5,6,4,5,6,7,3,5,5,5,5,6,7,4,6,5,4,5,4,5,6,6,7,5,6,7,5,5,6,6,6,6,5,4,5,6,5,7,5,7,5,6,5,5,5,5,5,6,6,6,5,5,5,5,5,6,6,6,5,5,5,8,6,7,5,5,6,4,4,7,6,6,6,5,3,4,6,6,4,6,5,5,6,5,5,6,6,5,6,6,4,6,5,7,6,6,6,6,6,6,6,7,6,7,5,3,5,5,5,7,4,4,6,5,4,5,4,7,6,5,6,7,7,7,6,7,6,6,5,5,5,6,5,7,7,6,5,4,7,6,5,5,5,6,5,5,6,6,5,5,7,6,4,5,6,5,5,6,6,7,6,5,4,6,6,6,6,6,5,5,5,6,6,7,6,6,6,5,4,5,4,4,8,7,6,7,6,7,5,7,7,5,6,6,6,6,6,6,7,7,7,6,5,7,5,6,6,5,6,6,6,6,5,6,6,5,4,7,6,6,4,7,5,6,6,6,4,6,6,6,6,5,4,7,6,6,5,6,5,5,5,5,6,5,4,2,7,6,7,7,6,6,6,7,5,5,6,6,6,4,5,6,7,7,6,6,6,4,5,6,4,6,5,5,5,5,5,6,4,6,6,3,7,6,5,5,5,6,6,6,5,6,5,6,5,6,5,3,6,6,5,3,5,6,4,6,4,5,5,7,8,6,6,6,7,7,7,8,7,6,6,6,6,6,6,7,6,7,6,7,7,7,7,4,6,7,6,6,5,6,6,7,5,7,6,7,6,6,5,7,7,6,5,6,5,6,6,5,6,6,5,3,6,6,6,6,4,5,6,6,3,4,6,6,8,7,7,7,7,6,7,7,8,7,6,6,7,5,6,7,5,7,6,6,7,5,7,7,6,7,6,7,6,6,5,5,7,7,6,5,7,5,7,8,6,7,6,5,6,6,5,6,6,7,6,6,5,5,6,7,6,5,6,5,5,6,5,1,8,7,5,7,6,4,5,7,7,7,5,6,6,6,6,6,7,6,6,7,6,6,5,6,6,6,6,6,6,5,5,8,6,7,7,6,6,6,5,6,7,7,6,7,6,6,5,6,6,6,6,6,6,6,6,5,6,6,4,6,6,6,4,3,7,8,6,7,6,6,6,8,6,7,6,7,6,6,6,8,7,7,6,6,6,7,5,4,5,7,5,7,6,6,5,7,7,7,5,7,3,7,4,6,7,7,5,7,6,5,6,5,7,6,5,4,5,6,7,5,6,6,6,5,5,6,5,4,6,6,7,7,7,7,7,7,5,7,6,7,6,2,6,8,5,7,6,5,6,6,5,7,6,7,6,6,5,6,5,7,6,6,6,6,6,6,6,6,5,6,6,7,5,6,6,8,5,6,6,6,4,5,5,5,6,6,5,6,5,3,6,5,8,7,7,6,7,7,7,7,8,8,7,7,7,6,6,7,7,6,6,7,7,6,5,7,6,7,6,6,7,7,6,8,6,8,6,7,5,5,5,7,5,6,7,4,4,7,6,6,7,6,7,7,7,6,6,7,5,6,6,6,6,5,6,6,7,6,5,7,6,7,5,6,6,5,4,7,4,7,6,6,6,6,5,5,5,6,4,6,3,4,5,5,5,5,6,7,6,4,5,6,6,5,4,7,7,6,5,7,3,4,6,6,6,4,5,5,6,4,5,6,6,5,5,5,5,5,5,8,8,6,7,7,6,6,6,6,7,7,5,7,5,7,6,7,8,7,8,8,6,6,7,5,7,6,6,5,7,6,6,8,6,6,6,7,6,5,7,7,6,7,6,6,6,6,5,5,6,6,6,4,6,7,6,5,7,7,5,5,6,6,4,6,5,8,6,6,6,6,6,7,6,7,6,4,4,6,7,6,6,7,5,7,6,7,7,6,5,4,4,6,6,5,4,7,7,6,6,5,5,6,5,7,6,6,6,6,3,5,5,6,6,6,6,4,5,5,6,5,5,5,5,6,3,4,5,6,6,7,6,8,8,8,8,8,8,8,8,6,7,7,5,8,6,7,8,7,8,7,7,8,6,7,7,7,5,6,7,8,7,7,6,8,7,6,6,8,8,7,7,6,5,6,5,7,7,6,7,7,5,7,6,7,4,6,5,5,5,6,4,0,7,7,5,6,7,5,4,7,7,8,4,6,6,6,6,7,6,6,5,7,7,5,6,7,6,7,5,6,6,6,6,7,7,7,6,7,6,6,5,6,6,7,5,6,6,5,5,6,7,6,5,6,5,6,5,6,7,6,3,6,6,6,6,5,7,5,4,6,6,7,6,7,7,5,4,6,7,4,5,7,4,7,5,7,4,6,6,5,4,6,5,5,5,6,6,7,6,6,6,6,7,6,6,7,7,6,6,5,6,6,4,6,6,6,6,7,6,5,6,6,5,6,6,6,5,6,5,3,7,5,6,7,6,5,6,7,5,5,5,6,7,6,4,7,5,7,6,5,6,3,5,8,3,6,6,7,6,6,5,6,6,6,7,6,7,4,6,7,6,5,6,4,6,6,4,8,6,6,6,4,5,5,5,6,6,6,5,6,4,6,5,3,5,7,7,7,7,7,6,6,5,7,6,6,5,5,6,8,7,7,6,6,6,5,4,6,6,4,6,5,4,6,5,7,4,4,5,5,5,6,5,6,5,6,6,6,4,6,6,5,6,6,5,5,6,5,5,7,5,5,6,5,5,5,5,5,6,6,6,8,7,5,7,6,7,6,6,6,6,6,6,7,7,7,5,5,7,6,6,6,1,6,5,6,6,6,6,8,5,5,7,7,6,6,6,7,6,6,6,6,5,6,7,6,7,7,7,6,5,5,7,7,5,6,6,5,2,6,5,4,5,8,8,8,6,6,7,8,7,8,5,8,7,7,7,7,7,6,7,6,5,7,5,6,6,7,5,6,6,7,6,8,6,6,5,7,7,7,6,7,6,6,6,7,6,5,6,3,6,6,6,6,7,7,5,6,5,5,5,6,4,6,6,5,7,8,7,8,8,8,6,7,7,8,6,6,7,8,6,7,7,7,6,8,7,7,5,6,6,7,7,7,6,7,6,7,7,8,5,7,7,7,7,8,6,7,5,8,6,6,6,7,6,7,5,6,5,5,6,6,6,7,6,7,5,6,6,7,7,7,7,8,8,8,7,9,6,7,7,8,6,8,6,7,7,7,7,7,7,7,7,7,6,6,7,6,7,6,7,7,6,8,7,7,5,7,6,7,6,8,7,7,7,7,6,7,6,6,7,6,6,7,6,6,7,6,7,6,4,6,5,5,6,7,5,6,5,5,5,8,6,7,5,6,5,6,5,6,5,4,4,6,5,5,6,7,5,2,6,6,5,4,5,8,7,6,6,7,6,6,5,7,6,6,4,7,6,6,6,6,6,7,6,6,7,6,5,6,6,6,5,7,6,5,4,7,7,7,6,8,7,6,6,8,7,7,6,6,7,6,6,6,7,7,6,6,6,7,7,7,6,6,7,6,6,6,6,7,8,7,4,7,6,6,5,6,7,7,5,7,5,5,6,6,7,5,4,7,5,6,5,5,6,6,4,6,5,5,6,7,7,7,6,6,6,7,6,7,7,6,6,7,7,6,5,6,5,7,6,8,6,6,6,6,5,6,6,5,5,6,5,7,6,6,5,6,6,6,6,6,6,6,6,6,6,5,5,4,7,6,6,6,5,4,5,6,5,6,5,6,6,5,5,6,5,8,6,7,6,6,7,7,7,6,6,4,6,7,6,7,7,5,6,6,7,5,7,7,6,5,6,6,6,5,6,5,5,6,6,6,6,7,4,6,4,6,6,4,4,6,6,6,6,5,6,6,6,5,5,7,6,6,4,6,3,5,4,5,7,6,6,8,7,7,7,7,7,7,6,7,6,4,5,8,4,5,5,3,5,4,6,6,5,6,4,6,5,7,5,7,6,7,7,6,7,6,6,7,4,7,6,6,6,7,6,7,7,6,6,6,5,6,6,7,6,7,6,4,5,5,6,6,6,8,7,8,8,6,6,6,7,6,6,7,6,5,7,6,6,7,7,7,6,6,6,7,7,6,7,5,6,6,6,7,5,7,7,8,7,7,6,8,6,6,5,7,6,6,6,6,6,6,6,6,4,5,4,5,5,6,6,5,5,6,6,4,5,8,7,5,7,7,5,8,8,6,5,7,6,4,6,8,6,7,6,7,4,7,4,6,5,5,5,5,5,6,5,7,7,7,6,7,6,6,5,7,5,7,7,7,6,5,6,6,7,6,6,6,6,6,6,7,5,7,5,4,3,6,5,5,7,7,7,8,8,8,7,8,8,6,7,8,5,5,7,8,6,6,7,8,8,7,6,4,7,5,5,6,5,7,5,7,7,6,7,8,4,7,6,7,7,7,7,6,6,6,6,5,7,5,7,7,7,5,6,6,5,8,6,7,5,6,6,6,5,6,6,7,7,6,6,6,6,7,4,5,6,7,5,7,7,5,6,6,6,6,7,6,4,5,4,6,5,6,5,6,7,6,6,6,6,5,5,7,6,6,6,6,4,6,6,4,7,6,5,5,6,5,6,6,5,6,5,5,4,5,5,5,7,5,5,5,6,6,6,7,6,6,6,5,3,6,4,6,5,3,5,5,5,6,6,6,6,5,5,5,5,5,5,6,5,4,5,5,6,5,5,6,5,6,5,5,4,4,5,6,6,6,5,5,5,5,5,5,5,4,5,6,4,6,4,5,6,7,4,7,6,5,6,7,6,6,6,6,3,6,5,7,6,6,6,5,6,5,6,6,4,5,4,5,6,6,4,5,6,6,5,6,6,5,6,7,5,6,5,5,5,5,5,6,6,6,5,5,6,5,6,5,5,6,5,5,5,4,4,5,5,7,5,7,5,6,5,7,6,6,5,5,5,6,5,6,6,5,6,3,5,6,5,6,6,6,5,6,5,6,5,6,7,5,5,6,6,6,6,8,6,5,5,5,5,6,5,6,6,5,5,4,6,5,5,6,6,5,5,6,4,5,4,3,7,5,6,6,6,7,6,7,5,6,4,5,4,6,6,6,6,6,5,6,7,6,4,6,4,5,5,5,5,5,4,5,6,6,6,5,6,5,5,6,5,6,6,5,4,5,5,5,6,5,5,4,5,6,6,4,5,5,3,6,4,5,4,3,7,7,6,6,6,6,5,7,6,6,6,6,6,6,6,7,6,7,6,7,5,6,3,7,6,6,6,6,5,6,6,7,6,5,5,7,6,5,6,5,5,5,5,6,6,5,5,6,6,6,5,5,6,5,5,6,5,5,4,6,5,6,5,6,6,6,7,7,6,6,7,7,6,6,6,5,5,7,5,7,6,7,6,7,7,4,6,6,3,6,6,6,6,6,5,7,5,7,6,7,6,6,5,7,6,7,5,6,3,5,5,7,6,6,5,6,6,5,5,6,5,6,6,6,4,6,5,5,7,5,6,6,7,7,6,7,8,7,7,7,5,7,6,7,4,6,6,7,6,6,6,5,7,6,5,7,6,7,5,8,7,6,7,7,5,4,6,7,7,6,6,4,6,6,5,6,6,5,6,6,5,4,5,6,5,5,6,5,5,6,4,4,7,5,6,7,7,7,6,7,7,7,5,6,5,2,4,7,5,7,6,5,5,5,6,5,4,5,5,6,5,7,5,7,6,7,6,5,6,7,5,7,6,6,5,7,5,6,6,7,6,6,5,6,7,7,6,6,6,6,5,6,5,5,5,6,6,6,7,8,7,7,6,8,7,6,7,7,4,6,6,7,6,7,7,7,7,6,6,5,6,6,6,6,6,6,5,7,5,6,6,8,5,6,5,7,4,6,5,6,4,7,5,6,6,6,6,7,5,5,6,7,4,7,6,6,6,6,6,3,6,5,6,6,6,7,6,8,7,6,6,7,6,5,6,7,6,6,6,5,5,5,3,5,4,6,5,4,5,5,5,6,6,7,5,6,5,6,5,6,5,5,6,5,5,5,5,6,6,6,6,6,5,5,6,6,5,6,4,5,4,3,5,2,7,5,7,8,7,6,6,6,5,5,7,8,7,4,6,8,7,7,6,6,7,5,4,5,5,5,7,6,6,6,5,7,6,7,6,7,5,7,6,7,6,7,5,5,5,6,6,7,6,6,5,4,6,7,4,6,6,5,6,6,5,5,4,5,6,6,6,7,6,7,6,6,5,5,5,5,3,5,6,5,7,6,5,5,5,6,6,6,4,2,5,6,5,6,5,6,6,5,6,6,6,6,6,6,5,5,5,5,4,6,5,4,6,6,6,5,6,5,5,4,6,5,4,6,5,5,4,8,6,7,7,8,7,7,6,6,6,7,6,7,6,6,6,6,7,6,7,7,6,7,7,7,6,6,7,6,6,5,7,7,8,6,5,6,7,7,6,7,6,7,7,6,7,5,5,6,7,5,4,5,7,6,5,6,5,6,5,6,5,5,5,5,5,7,6,6,6,6,5,8,6,8,5,4,5,6,4,6,5,5,4,6,4,5,4,6,4,6,6,6,5,4,5,7,7,6,5,6,5,5,4,7,6,6,5,6,4,4,6,6,6,4,5,5,4,5,5,6,6,4,5,5,5,5,5,6,8,8,6,7,7,5,6,9,7,7,7,8,8,8,7,8,7,7,6,6,6,4,6,7,7,7,7,7,6,7,7,8,7,8,7,7,7,8,5,8,8,7,7,4,7,7,6,7,7,6,6,7,6,7,7,6,6,7,7,6,6,6,6,3,5,7,5,5,7,7,6,7,6,5,5,5,5,3,5,6,5,6,6,7,5,6,6,5,4,5,5,6,6,6,5,6,7,4,5,4,6,5,6,6,6,4,5,5,5,5,5,6,7,6,5,6,7,6,6,5,5,5,5,6,5,6,5,4,6,6,6,7,7,6,5,7,6,6,3,6,5,5,4,7,5,6,5,6,7,3,5,7,2,4,5,5,5,5,5,6,6,6,4,5,6,7,4,6,6,6,4,6,4,6,4,6,6,6,6,6,4,6,6,6,5,5,5,6,5,5,5,5,7,4,6,6,6,7,6,7,6,6,5,6,2,6,5,6,6,5,6,7,6,7,6,6,6,5,5,6,5,6,6,6,6,6,5,6,6,5,5,6,6,5,6,6,5,6,5,6,7,6,6,4,5,6,5,6,5,6,5,6,5,6,5,2,8,6,6,5,6,6,5,7,4,5,5,6,6,5,5,6,6,6,6,6,6,6,4,7,6,5,6,6,5,5,5,6,5,6,6,6,6,4,6,6,5,6,5,5,5,6,3,6,6,6,6,5,5,4,5,5,5,5,6,5,4,6,5,7,7,7,7,7,7,7,6,6,6,7,7,8,7,7,7,7,7,6,5,6,5,8,7,5,6,5,4,6,7,6,6,7,7,8,3,6,6,6,5,7,7,7,5,7,7,6,7,7,7,7,5,7,6,6,5,6,7,6,6,6,5,6,5,6,7,6,4,7,6,6,5,7,6,6,7,7,6,7,7,6,6,5,5,4,6,6,6,5,4,7,5,5,5,6,5,6,6,7,5,7,6,6,5,8,6,7,5,7,6,6,6,7,7,6,5,6,6,5,4,6,7,6,6,6,4,6,5,5,5,6,6,6,8,5,7,9,7,7,7,8,6,6,7,8,5,6,5,5,7,5,6,6,6,7,6,7,6,6,6,7,6,7,6,6,6,7,5,7,6,7,6,6,4,6,7,7,7,6,6,6,7,6,5,7,5,6,5,5,4,6,4,7,6,8,7,7,7,6,7,8,8,8,7,7,8,6,7,8,5,6,6,6,5,7,6,8,6,7,5,6,7,7,5,7,7,6,7,7,7,6,5,7,7,8,6,7,6,6,6,8,8,6,6,7,6,6,6,7,7,7,5,4,5,6,5,5,7,5,5,6,6,6,6,7,5,6,5,6,6,7,5,5,6,7,6,6,7,7,7,5,4,6,4,5,5,5,5,7,6,7,4,6,6,6,6,7,6,5,6,6,6,5,5,6,6,6,6,6,6,7,6,7,6,5,6,6,4,5,5,6,6,6,7,7,7,7,5,7,7,7,7,6,4,7,5,8,6,7,6,7,7,5,7,6,5,6,5,5,5,7,6,6,7,6,5,7,6,5,4,6,6,6,6,6,3,5,5,5,6,6,5,7,6,4,6,6,4,6,3,6,5,5,5,6,5,7,6,7,7,6,5,7,6,5,5,6,4,6,6,7,7,5,6,6,7,5,6,7,6,4,5,5,5,5,4,6,6,5,6,6,6,5,5,7,6,7,4,6,5,5,5,6,7,6,6,5,6,6,4,6,6,5,5,6,5,4,5,6,8,6,6,8,7,8,5,7,6,6,7,7,5,7,6,7,7,7,7,6,7,7,7,5,6,5,7,7,6,6,5,7,8,6,3,6,6,6,6,5,7,6,6,7,6,6,5,6,7,7,6,5,5,7,5,4,6,6,5,7,5,5,3,2,6,7,6,7,7,4,6,7,6,7,7,7,5,6,6,6,6,6,6,6,6,5,4,6,2,6,5,6,6,5,5,7,7,7,5,6,6,7,5,6,6,7,5,7,6,6,6,7,6,6,5,6,5,5,5,5,6,6,4,5,5,4,5,4,7,7,6,6,7,6,7,8,7,6,7,7,7,7,7,7,7,5,5,5,7,6,6,7,6,7,6,6,6,6,6,7,6,8,6,6,5,8,4,6,5,7,7,5,6,5,6,7,7,7,6,3,6,6,6,5,6,5,5,5,5,6,5,7,7,7,6,8,7,7,5,8,7,7,5,6,6,7,7,7,6,6,6,5,5,7,6,5,6,5,6,6,7,5,6,8,6,7,6,5,6,6,5,7,6,7,6,6,5,6,6,7,6,7,6,5,6,6,5,5,6,6,5,7,5,5,3,8,8,8,8,8,7,6,8,8,9,7,7,8,8,7,7,8,8,7,7,7,8,8,8,9,7,7,7,6,6,7,7,7,8,8,5,8,7,8,6,8,8,7,7,7,7,6,7,8,6,8,6,8,6,6,6,7,7,7,6,6,7,7,5,7,8,5,6,8,7,7,7,7,5,8,6,7,6,6,5,5,8,7,7,5,8,7,7,5,6,6,5,5,5,6,7,8,7,8,5,7,7,6,6,7,8,7,6,8,6,6,6,7,7,7,7,5,7,7,6,7,7,5,5,6,7,6,6,5,6,6,6,6,6,6,5,7,6,6,4,6,5,4,5,7,6,6,5,5,4,5,6,6,1,5,3,6,6,5,6,7,4,6,6,6,6,6,5,6,6,6,6,6,6,5,5,5,6,5,5,6,6,6,5,5,5,6,5,5,5,5,5,5,6,7,6,6,6,6,6,7,6,6,5,6,6,6,6,6,4,5,6,5,6,5,6,6,6,6,5,5,4,6,6,6,7,6,6,7,5,6,6,7,5,6,6,5,5,5,6,6,6,7,6,6,4,6,6,5,5,6,5,5,4,5,4,6,5,5,5,6,7,6,6,7,6,6,5,5,5,7,5,7,7,6,5,5,6,6,6,6,5,6,6,5,6,5,6,6,6,7,4,6,6,6,5,6,6,5,5,6,6,6,6,5,6,7,6,6,4,6,5,7,6,6,6,6,3,5,5,4,7,7,6,7,7,7,6,6,5,6,6,6,4,7,5,5,5,6,5,6,6,5,5,7,5,3,6,5,4,7,6,5,5,6,5,6,7,6,5,6,5,6,4,6,4,5,6,5,5,6,6,6,5,6,6,5,5,6,4,5,5,6,6,1,7,6,6,7,7,7,6,7,7,4,6,7,7,5,6,7,5,7,6,7,6,6,5,5,5,6,6,5,5,6,4,7,6,6,6,5,6,7,6,6,6,5,5,5,5,6,6,6,4,6,5,2,5,5,6,7,4,6,5,5,3,5,4,5,6,7,6,7,7,5,6,7,6,8,6,6,5,4,6,7,6,7,6,7,7,5,6,5,6,5,4,6,5,5,5,7,6,7,6,6,6,5,5,7,6,6,5,5,4,5,5,5,5,6,5,5,5,5,5,5,4,4,5,5,6,4,4,9,8,9,6,8,7,6,6,8,7,7,6,8,7,7,7,8,7,7,6,7,8,7,6,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,8,7,7,6,7,7,8,5,8,6,7,7,7,7,7,7,6,7,7,6,8,5,7,5,5,7,8,6,8,7,5,7,5,6,6,6,7,6,6,4,8,7,7,6,6,7,6,5,7,5,6,6,8,8,7,6,7,7,6,6,8,7,6,7,7,4,6,6,7,7,6,6,5,6,7,6,6,6,7,6,5,5,7,6,5,7,7,7,7,7,6,5,7,7,8,7,7,7,3,7,7,7,7,7,7,7,4,5,6,6,7,6,6,7,6,5,7,5,7,6,8,6,7,6,6,3,7,6,7,7,6,5,5,5,7,6,6,7,6,6,6,6,6,6,6,5,5,5,2,7,6,7,8,7,6,6,7,6,6,6,6,3,3,6,8,4,6,6,4,6,6,5,7,4,5,5,5,5,5,4,6,6,7,6,4,5,7,7,6,4,6,6,5,5,6,6,7,6,6,5,3,5,5,5,7,4,6,6,6,5,6,5,7,8,7,7,8,7,6,7,6,7,7,7,7,7,6,6,6,6,7,5,7,7,6,6,7,5,7,7,7,6,7,6,7,5,7,6,7,7,5,6,7,5,7,6,6,5,7,5,6,5,6,6,6,6,6,5,6,5,6,6,5,6,5,5,5,7,6,5,7,6,6,6,7,7,6,4,6,5,7,5,8,7,6,6,4,6,5,6,7,4,7,5,4,5,5,5,6,6,6,4,7,7,6,5,7,6,6,4,6,5,5,4,6,7,6,5,7,5,5,5,6,5,6,6,6,4,5,5,7,5,7,7,7,6,5,7,7,6,6,6,4,6,6,6,7,6,5,5,7,7,5,6,7,6,5,6,6,6,6,6,6,6,5,6,6,6,7,6,7,5,6,5,5,5,4,6,6,5,6,6,5,5,5,6,6,6,7,4,6,2,5,5,7,8,6,5,7,7,7,6,8,6,7,6,6,6,7,6,8,6,6,6,7,7,7,6,7,3,7,6,7,7,7,5,7,7,6,6,7,7,5,4,7,6,7,5,6,6,6,6,7,7,7,6,5,5,6,6,6,6,7,5,6,4,6,6,10,8,7,8,9,8,7,8,9,8,9,7,8,7,8,7,8,9,8,7,8,8,7,8,8,7,7,7,7,8,7,7,9,8,9,8,8,8,6,7,8,8,8,7,8,6,7,5,7,7,6,8,8,7,7,7,7,8,8,6,8,6,7,6,5,8,4,5,8,4,8,6,7,7,7,5,7,6,7,6,6,8,7,7,8,6,7,6,4,7,3,6,7,6,5,6,7,7,7,7,8,7,7,7,7,8,5,6,7,7,6,5,8,6,7,7,6,7,7,7,8,7,7,7,8,7,6,5,7,8,6,7,8,7,7,6,7,7,6,6,6,7,5,4,7,6,7,7,7,7,8,5,7,7,7,6,6,6,6,6,7,5,7,7,5,6,6,5,7,7,6,6,6,6,5,6,6,7,6,6,6,6,7,6,6,6,6,5,7,4,6,4,5,7,8,6,8,7,6,7,7,5,6,6,7,6,5,6,6,7,7,7,6,7,6,6,5,4,5,7,7,5,5,5,7,5,6,7,3,6,6,5,5,5,6,6,4,5,6,4,6,7,6,7,6,6,5,6,6,6,6,5,5,5,6,5,7,8,9,6,5,8,8,8,8,8,7,6,7,7,6,6,8,7,7,7,7,7,8,7,8,6,7,6,6,7,5,7,9,7,8,6,8,7,6,5,8,7,7,7,6,5,6,6,6,7,7,8,8,7,7,6,7,7,5,5,5,5,6,6,9,8,8,9,9,9,8,8,9,9,8,7,8,7,8,6,9,8,9,7,9,7,7,7,8,8,8,7,8,6,7,6,9,7,7,8,7,7,8,7,8,7,8,6,8,6,8,7,8,8,6,7,7,7,8,6,8,7,8,7,7,6,8,6,8,4,8,7,8,6,7,7,8,7,7,6,8,8,7,6,8,7,8,7,5,4,7,7,7,6,7,6,6,6,8,7,8,8,7,7,6,6,7,7,7,6,7,7,7,6,8,7,7,8,7,7,6,6,7,6,6,6,7,7,5,3,7,6,6,8,8,6,7,6,7,4,8,7,8,6,7,8,5,7,7,6,7,7,7,4,8,5,7,6,5,5,5,4,7,5,7,6,7,7,7,6,7,7,7,8,6,7,6,7,6,7,7,8,6,7,6,5,7,6,7,7,6,5,5,6,7,6,6,8,7,8,8,8,7,8,9,8,8,8,8,8,7,5,8,7,7,8,8,7,8,7,8,8,6,7,8,7,7,6,8,7,7,8,9,5,7,5,8,8,8,6,9,7,8,7,8,8,8,7,5,6,7,6,7,6,5,6,7,5,6,6,7,4,7,5,8,5,7,8,8,7,8,6,4,5,7,5,7,8,6,7,6,5,7,7,7,7,6,6,5,6,6,7,8,8,6,8,8,7,6,5,8,7,6,6,8,5,6,7,7,6,7,6,6,7,7,5,6,6,7,7,7,4,7,6,9,8,7,7,7,7,7,7,7,7,7,6,8,5,7,7,8,8,8,8,7,7,7,6,8,7,8,7,6,6,7,7,8,9,7,6,8,7,7,7,7,7,8,7,7,6,7,6,5,7,7,6,6,6,7,4,7,6,7,6,6,6,6,6,5,8,8,7,8,7,8,5,7,6,6,6,7,3,7,7,8,8,6,6,7,7,7,6,6,7,4,5,5,7,5,6,6,5,7,7,7,5,8,6,7,7,7,7,6,4,7,7,8,7,7,7,7,7,6,6,7,7,6,6,7,6,6,6,8,8,8,7,9,6,7,8,7,6,8,6,8,8,7,7,6,7,5,7,7,7,7,8,8,8,7,6,6,6,6,7,8,8,6,6,7,8,7,7,8,7,6,7,6,5,7,4,8,8,6,7,5,6,7,7,8,6,7,6,6,6,7,5,9,9,8,7,7,8,8,7,9,7,8,6,8,8,8,8,8,8,8,7,8,8,8,6,9,7,8,7,7,8,7,7,9,6,9,8,8,8,8,7,7,8,8,9,9,7,7,8,8,7,7,7,8,8,7,7,8,6,7,7,7,7,8,7,9,9,8,8,9,8,8,8,8,9,9,9,9,8,9,8,9,9,7,8,8,8,6,6,7,8,9,7,7,7,8,7,9,7,8,8,8,8,8,7,8,9,8,7,8,7,7,7,8,7,8,7,6,7,8,7,7,6,8,7,7,5,7,7,9,9,9,8,9,8,7,8,9,9,8,7,7,8,9,7,8,8,8,8,8,8,8,7,8,7,8,7,8,6,6,5,9,6,8,8,9,9,8,7,7,8,8,7,7,8,8,8,5,6,8,8,8,9,6,6,8,7,6,7,6,8,7,6,5,8,8,8,9,8,8,7,9,8,7,8,8,6,7,8,8,7,6,8,8,7,7,6,3,7,6,8,7,7,8,6,8,7,8,6,8,3,8,6,7,8,6,7,7,7,7,6,5,6,7,7,8,6,7,7,7,6,7,7,6,6,7,7,4,8,8,8,8,7,8,6,8,7,7,6,8,5,5,6,6,8,7,7,7,7,7,7,6,6,6,7,6,5,6,6,6,8,7,6,7,6,7,7,7,7,6,6,6,6,5,5,6,6,7,6,7,5,7,6,6,6,3,5,5,4,6,5,6,8,6,7,6,7,6,5,7,6,6,6,7,4,6,5,7,6,6,6,7,7,4,6,6,3,5,6,6,5,6,5,7,6,5,6,6,6,5,6,6,6,6,5,6,6,6,4,5,6,6,5,7,5,6,6,5,4,6,5,6,5,5,4,4,7,8,7,6,7,7,7,8,4,7,4,6,5,6,7,7,6,7,5,7,5,6,4,6,5,5,5,7,6,5,5,6,6,6,6,6,6,7,5,7,6,6,5,6,5,6,5,8,7,5,6,4,6,5,5,7,5,6,5,5,5,4,4,8,7,7,7,8,7,7,7,7,7,6,7,6,8,7,5,7,7,8,7,7,6,7,7,7,6,7,6,5,6,6,6,7,6,6,6,6,6,6,5,6,7,6,5,7,6,6,5,6,5,7,6,7,6,6,6,6,6,6,5,7,5,6,4,7,8,8,6,8,6,7,7,7,6,6,6,8,7,7,5,8,7,7,6,6,7,7,6,7,4,7,6,5,5,6,6,6,6,7,4,7,7,5,6,7,6,6,5,6,5,5,6,7,6,5,5,6,5,6,6,7,6,6,6,5,6,5,6,2,7,7,7,6,7,6,6,7,5,7,6,5,5,5,6,6,7,5,6,5,7,6,4,6,5,6,6,6,6,6,5,7,6,6,6,6,6,6,5,5,6,6,5,4,5,4,5,8,5,6,5,5,6,5,4,6,5,4,5,6,5,5,3,5,7,7,6,8,6,7,6,7,6,7,5,6,7,4,6,7,6,7,7,7,6,7,7,6,6,7,6,6,6,5,6,7,6,7,6,6,5,5,5,8,6,7,6,5,6,5,5,7,7,6,5,5,6,5,5,7,6,6,6,6,6,5,5,6,7,7,6,7,9,8,7,8,8,7,7,6,7,5,7,8,5,8,6,7,6,8,8,6,7,7,6,8,7,7,4,8,8,6,8,6,7,6,6,8,7,7,7,6,6,6,6,7,7,6,6,7,6,6,6,7,7,7,7,6,6,7,5,4,7,8,6,7,7,7,6,8,8,7,6,7,5,7,6,8,6,8,6,8,7,7,6,7,8,7,7,8,6,6,7,8,7,8,6,7,6,8,7,8,7,6,6,6,6,6,6,6,7,7,7,7,6,7,6,7,5,2,7,6,6,6,5,8,7,9,8,8,8,9,8,9,8,7,7,6,8,6,8,7,8,8,7,7,8,8,8,6,7,6,6,7,8,8,7,9,7,5,8,9,7,6,8,9,7,7,7,8,7,5,7,6,6,7,8,5,5,6,6,7,6,7,6,8,5,7,6,7,6,8,7,8,7,8,8,8,8,8,6,6,7,8,6,8,8,7,7,6,7,8,7,7,6,7,7,7,6,6,6,7,8,6,7,7,6,8,6,8,7,6,6,7,7,6,5,7,7,7,6,5,5,5,7,6,7,6,7,6,4,5,5,10,8,8,9,8,9,9,8,8,7,9,9,9,9,8,8,9,8,9,8,9,8,8,7,8,7,8,8,7,7,8,7,8,8,9,8,8,8,7,7,9,7,8,6,8,7,7,7,8,9,7,7,8,7,7,7,9,7,8,8,8,6,8,7,5,7,7,8,8,8,8,7,7,6,7,7,7,8,5,5,8,7,7,8,8,7,6,6,8,7,8,5,6,7,6,5,8,6,8,6,8,7,6,6,7,6,6,7,8,7,6,5,7,6,7,6,7,6,7,6,6,3,6,5,6,6,6,5,9,8,8,8,9,9,9,8,9,9,9,8,8,6,6,8,9,9,9,8,7,6,8,8,7,8,6,8,8,8,8,7,7,7,7,9,8,8,8,6,8,8,8,6,6,8,8,7,9,8,8,7,6,6,7,8,6,7,6,8,8,7,7,5,8,8,7,8,7,7,8,7,8,8,8,7,8,6,6,6,7,8,8,7,8,7,7,7,6,7,7,6,6,6,7,7,8,7,7,7,6,7,7,6,8,8,8,5,7,6,6,6,8,7,6,4,6,7,7,6,7,7,7,6,5,7,5,6,6,7,6,7,8,7,8,8,8,8,9,7,7,8,8,6,7,6,7,7,8,7,8,7,8,7,8,8,6,5,7,7,8,9,8,7,7,6,6,7,7,8,7,6,6,5,7,6,8,8,8,7,8,5,7,5,6,5,7,5,5,7,7,5,7,7,7,6,7,7,7,5,8,6,8,4,6,6,5,4,7,6,6,7,5,7,5,6,5,4,7,6,5,6,6,6,7,7,6,5,7,5,7,6,7,6,6,6,7,6,6,6,5,6,7,6,7,6,6,6,7,5,7,5,7,5,6,5,4,6,5,6,7,5,7,6,7,6,6,3,5,4,4,6,7,6,5,6,6,4,6,5,5,5,5,5,6,6,5,6,6,5,6,5,6,5,6,5,6,6,6,5,6,4,6,4,6,6,6,6,5,5,5,6,6,3,6,5,5,6,5,5,4,6,6,7,7,6,6,6,8,5,6,6,6,5,3,5,7,5,6,5,5,6,6,6,7,4,6,5,6,5,6,5,7,7,6,5,5,6,6,5,7,5,6,5,4,5,2,3,7,6,7,5,4,6,5,6,7,5,6,6,6,5,5,5,3,7,7,6,7,7,7,6,7,5,6,6,6,5,5,4,7,7,6,6,7,7,6,5,6,6,6,6,5,6,6,5,7,7,5,4,6,6,5,4,7,5,5,5,6,5,6,5,6,6,6,6,5,6,6,5,6,6,6,6,6,4,5,5,3,7,7,7,8,7,7,7,7,6,6,5,7,5,7,6,6,6,6,6,6,6,6,3,6,6,6,5,5,5,6,5,7,5,6,5,6,6,6,4,6,5,6,5,6,3,6,6,6,5,6,6,4,6,5,5,6,6,5,4,5,5,5,4,7,5,7,7,7,6,7,6,8,6,5,5,7,6,6,6,7,7,7,6,6,5,7,6,6,6,6,5,6,5,5,5,7,5,6,5,6,6,7,6,7,6,6,5,6,5,7,6,4,6,7,6,5,6,6,6,5,5,6,3,6,4,4,4,6,5,7,6,7,7,6,6,9,7,7,6,7,7,7,6,7,7,7,7,7,6,6,6,6,4,5,6,6,6,5,4,7,5,7,6,6,6,6,5,7,6,6,6,6,5,5,5,6,6,6,4,6,6,5,5,6,6,4,5,6,3,6,5,9,8,9,8,8,9,8,9,8,7,8,7,8,8,8,8,8,8,8,8,8,8,7,7,9,8,8,6,8,7,7,7,9,7,8,7,8,8,7,8,7,8,8,7,8,7,7,7,7,7,6,8,7,7,6,7,8,7,7,7,6,8,7,6,7,7,7,6,8,7,7,7,9,8,8,5,6,6,8,5,8,7,8,8,7,8,8,7,6,7,5,4,7,6,7,7,8,6,8,7,7,5,6,6,8,7,8,6,7,4,7,6,7,7,7,6,5,6,5,7,7,6,6,7,6,5,6,6,9,8,8,7,9,8,8,7,8,6,8,7,8,6,7,7,8,7,7,7,8,7,8,7,7,9,7,8,6,7,6,6,8,8,9,6,7,7,8,7,8,8,8,8,8,6,7,5,8,6,8,8,6,7,6,6,9,7,8,7,7,7,7,7,7,7,6,5,7,5,6,7,7,6,7,6,6,6,6,4,7,5,7,5,7,6,5,6,7,5,6,6,4,5,6,5,6,7,5,7,6,6,7,6,7,6,5,4,6,6,7,4,7,7,7,6,7,5,6,6,7,5,6,6,6,5,3,5,7,7,8,7,7,7,6,8,8,8,7,6,7,6,8,6,8,8,7,7,8,8,7,7,7,7,8,7,7,7,6,7,8,7,6,7,7,7,6,6,8,8,8,5,8,7,7,7,7,7,7,7,4,7,5,6,8,6,7,5,6,6,8,5,6,7,7,7,8,7,7,7,7,5,6,7,7,5,7,5,8,7,7,6,6,7,6,6,6,6,5,5,6,6,5,6,7,6,6,6,7,7,6,5,6,5,7,5,6,4,7,6,7,7,6,6,6,6,6,5,7,7,5,6,6,4,6,4,8,7,7,7,8,7,7,6,8,7,6,7,6,8,7,6,8,7,7,7,7,6,6,7,8,7,6,6,7,6,6,6,7,6,6,6,8,6,7,5,8,5,7,6,6,7,6,6,5,6,7,6,8,6,6,5,7,6,6,6,7,5,6,6,6,7,7,7,8,6,7,5,9,8,7,6,6,7,5,7,8,7,8,7,7,4,5,7,7,3,4,5,6,5,7,6,7,7,8,8,7,7,7,6,7,8,7,7,6,6,6,7,7,7,7,5,6,7,6,6,7,7,7,6,7,6,6,5,9,8,8,8,9,8,8,8,8,9,8,8,8,8,7,7,7,8,7,9,8,8,6,7,8,8,9,7,9,6,8,7,8,9,5,7,8,7,7,7,9,8,8,6,8,7,7,6,7,8,4,8,7,7,6,6,8,6,8,6,7,7,7,6,8,6,8,7,8,6,6,7,8,8,6,6,6,7,7,6,7,7,8,6,7,4,8,7,7,6,8,6,7,7,7,6,6,8,5,7,7,7,7,6,8,7,6,6,7,6,7,6,7,7,7,6,7,6,6,5,5,7,7,3,6,5,6,6,5,7,6,7,7,7,7,6,7,5,6,4,5,5,6,5,6,6,7,5,7,7,7,6,6,6,4,5,4,6,6,5,7,6,6,5,6,5,7,5,7,6,6,4,6,2,6,5,5,5,6,5,6,4,5,6,6,5,5,5,5,6,6,4,7,8,7,6,7,7,6,5,6,6,6,6,6,4,6,6,8,7,6,7,7,6,6,5,6,6,5,5,4,5,5,6,7,5,6,5,7,6,6,5,6,6,7,5,7,5,5,5,5,6,7,6,5,6,6,6,5,6,6,6,6,5,4,4,3,6,6,7,6,6,6,6,7,6,6,6,6,6,5,6,7,7,7,6,6,6,5,3,4,5,5,5,6,5,5,5,6,4,6,5,6,5,6,6,6,5,5,6,6,4,6,5,6,7,7,5,4,6,6,5,5,6,4,5,6,2,5,5,4,7,6,5,7,5,7,6,8,4,6,3,6,6,5,4,7,6,6,6,5,5,6,5,6,5,6,5,6,5,5,5,6,6,5,5,6,6,5,5,7,6,6,5,6,5,5,5,6,6,7,5,4,5,6,6,6,2,6,5,6,5,4,5,7,7,7,8,7,7,7,7,8,7,6,7,5,7,7,5,7,7,7,7,6,6,7,7,6,6,6,5,7,5,5,6,7,5,6,5,4,6,5,6,6,6,5,6,6,6,5,5,6,5,7,6,4,6,6,6,6,5,7,5,6,5,6,4,6,6,6,6,7,7,6,6,8,6,7,6,6,4,7,4,6,6,5,5,6,5,5,6,5,4,6,6,6,5,5,5,7,6,7,5,7,5,6,5,6,6,6,5,5,2,5,5,6,5,5,6,6,6,5,5,5,5,5,5,6,4,4,5,7,8,7,7,7,7,6,8,8,8,7,8,7,7,7,7,8,8,6,7,7,7,5,7,8,6,7,7,6,7,7,6,6,7,8,5,6,6,6,6,8,7,7,7,4,6,7,4,7,7,7,7,7,4,6,6,6,7,6,6,6,5,7,5,5,8,7,6,8,5,8,6,8,8,6,6,5,6,6,7,7,8,7,6,7,5,6,6,8,4,3,6,7,6,6,6,8,8,7,7,7,8,7,7,6,7,6,8,6,6,7,6,7,6,6,6,7,7,6,6,8,7,6,7,7,6,7,5,9,9,9,9,9,8,8,8,9,9,8,8,9,8,7,7,8,9,8,9,8,9,6,8,9,9,9,7,8,6,8,7,9,9,6,8,8,8,7,7,8,8,8,6,9,7,7,7,7,9,4,8,7,8,7,7,9,7,8,6,8,7,7,7,5,7,7,7,8,6,7,7,8,4,5,7,7,5,6,5,7,7,7,7,7,7,6,6,6,7,6,6,6,6,6,6,8,6,6,7,7,7,7,5,6,6,7,5,6,5,7,6,6,6,6,6,5,5,6,6,7,7,6,6,6,5,6,4,7,8,8,6,8,6,7,7,8,7,5,6,5,7,8,6,7,7,6,8,7,6,7,7,7,6,5,7,7,7,7,5,6,7,5,6,7,6,7,6,8,6,6,6,5,6,6,6,6,7,6,5,8,6,6,6,8,7,6,6,7,4,7,6,7,7,7,5,6,6,6,6,7,7,6,6,5,5,6,4,6,5,7,5,6,5,5,6,7,5,5,6,4,5,5,5,5,7,5,7,6,6,6,6,7,6,5,4,6,6,6,5,7,6,6,6,6,6,6,6,7,6,6,5,6,6,3,5,7,8,7,8,8,7,5,7,8,8,8,5,8,7,8,5,9,8,8,7,8,8,7,8,6,7,7,6,6,6,6,6,8,7,6,6,8,6,5,6,7,7,8,5,8,6,7,6,7,8,7,6,3,6,6,7,7,7,6,6,6,7,7,5,8,6,6,7,7,6,8,8,9,7,8,6,5,5,8,6,9,8,7,8,7,8,7,7,7,6,6,5,7,7,6,6,8,7,7,7,7,6,7,5,8,8,7,6,7,5,6,7,6,7,7,6,6,6,6,7,7,7,7,7,7,4,5,6,10,8,8,6,8,8,9,7,8,7,8,7,8,6,8,8,8,7,7,7,8,8,8,7,7,9,8,7,6,7,6,7,9,8,8,7,7,8,8,7,8,8,8,8,9,7,8,6,8,7,8,7,6,8,6,7,9,7,9,8,7,7,7,6,5,8,7,6,8,8,8,7,7,7,6,6,5,7,6,6,6,7,6,5,7,8,7,6,7,5,6,6,6,6,6,6,7,7,7,7,6,7,6,5,5,5,6,6,5,6,6,5,7,7,6,6,6,6,7,6,7,7,6,5,6,5,7,3,5,6,6,6,6,5,7,6,7,6,6,5,6,3,4,5,7,6,4,5,5,5,5,6,5,5,5,4,6,5,5,5,6,6,6,5,7,5,6,5,7,6,6,5,4,1,3,3,7,6,6,5,6,6,4,5,6,6,5,5,6,5,6,5,3,7,7,6,8,7,6,6,7,7,6,5,6,7,5,5,8,7,7,7,7,6,7,4,6,4,7,5,5,5,5,6,7,5,6,6,7,5,5,5,6,7,6,5,7,6,5,5,6,6,6,6,6,5,6,5,5,5,6,5,5,6,6,5,7,7,6,7,6,6,7,5,8,5,7,4,6,5,5,5,7,6,6,8,4,7,6,6,6,5,5,6,5,4,5,6,7,6,7,7,7,5,6,6,7,7,7,5,7,4,6,5,5,5,7,5,5,6,7,6,5,6,7,6,6,4,5,4,5,7,7,7,7,6,5,5,7,6,5,7,7,5,7,6,7,7,6,7,7,6,5,6,5,2,5,7,7,6,6,5,5,7,6,7,7,5,7,6,6,5,6,7,7,6,7,6,6,6,6,6,6,6,6,6,5,6,6,6,6,2,6,5,4,7,8,5,7,7,6,6,8,6,7,6,7,5,6,6,6,7,6,6,6,6,7,4,5,7,6,5,4,5,7,6,6,6,7,5,7,6,6,6,7,5,6,6,8,6,6,6,6,6,6,6,5,5,6,5,7,6,6,5,4,6,5,6,7,6,7,8,8,8,7,7,8,8,7,5,5,6,8,6,7,7,7,7,7,7,6,7,6,3,6,7,5,6,6,6,7,6,7,7,7,5,7,5,7,6,7,5,6,6,6,6,6,5,7,6,5,4,6,6,6,5,6,5,5,5,5,5,10,8,8,8,10,9,8,8,9,7,8,8,8,7,9,8,10,8,7,7,8,8,8,8,7,7,8,7,7,8,8,8,10,7,8,8,8,7,6,7,9,7,9,7,8,8,8,7,8,7,7,7,6,9,7,8,9,9,8,8,7,7,8,7,9,9,8,7,8,7,8,7,8,8,7,7,8,7,6,6,8,8,7,8,7,8,7,7,6,7,7,7,5,7,7,6,8,7,7,7,7,8,6,6,8,8,7,5,7,7,6,6,8,8,6,5,7,7,7,6,7,7,7,6,6,6,6,6,7,8,7,7,8,8,8,7,8,8,8,7,6,8,9,7,6,6,7,7,8,6,8,8,8,7,7,8,7,6,8,8,8,8,8,7,8,6,6,8,7,9,6,6,6,6,7,7,9,7,7,7,7,6,8,6,5,6,8,4,6,6,7,6,6,7,7,7,8,9,7,6,7,6,7,8,7,8,6,6,8,8,7,8,7,8,6,7,7,7,7,4,7,7,7,5,7,6,8,6,9,8,6,6,7,6,7,7,7,7,7,5,6,7,7,7,7,6,7,7,5,4,7,6,6,6,5,5,9,7,8,8,9,9,9,9,9,8,8,8,8,7,7,7,8,8,9,7,7,7,8,7,8,8,6,7,7,9,8,7,7,7,8,9,9,9,9,5,8,8,8,6,7,7,7,7,8,8,8,6,7,6,7,8,7,7,6,8,7,7,6,5,8,7,8,8,9,7,8,8,8,7,8,7,7,8,8,6,8,8,7,7,7,6,8,7,6,7,6,7,7,5,7,6,6,8,6,6,7,6,8,5,8,8,7,6,7,6,7,6,7,7,7,6,6,6,6,7,6,6,6,7,5,3,6,5,9,9,8,8,8,9,9,8,8,7,8,8,8,9,9,8,9,8,9,8,9,9,8,8,8,7,8,8,7,8,7,8,8,8,9,8,8,8,7,8,9,8,8,7,8,7,8,7,9,8,7,6,7,6,8,7,9,8,7,7,8,6,7,7,5,7,8,6,6,7,6,6,8,8,7,7,7,6,6,6,8,6,7,6,8,7,6,6,8,7,8,7,7,6,6,6,8,7,8,6,7,6,7,6,8,7,7,5,7,6,7,6,7,8,7,7,7,7,7,6,8,4,3,7,5,6,6,6,7,8,8,7,8,8,9,7,8,9,7,8,7,8,6,8,8,8,7,6,7,8,8,8,5,7,7,5,8,8,7,6,8,7,6,8,9,8,7,7,8,8,8,6,7,7,6,7,6,7,8,8,6,6,5,6,6,7,7,6,8,4,7,6,7,8,8,5,7,7,7,7,8,7,7,5,7,7,8,6,7,6,7,7,7,8,7,7,5,7,5,3,7,7,6,7,7,8,8,7,7,6,7,6,8,7,8,7,6,4,8,6,7,7,7,6,6,7,4,6,7,6,7,6,6,6,7,6,6,7,5,6,7,6,6,4,7,6,6,4,7,5,5,5,6,6,5,5,6,3,4,6,6,4,5,4,6,4,6,5,6,7,6,5,6,7,5,6,6,7,6,5,6,6,6,5,7,5,7,6,4,6,7,5,6,5,6,6,6,4,6,5,7,6,7,5,7,6,6,5,7,6,6,5,5,6,6,5,7,5,6,6,5,6,6,7,7,7,6,6,5,5,6,6,7,7,7,6,7,7,6,5,7,7,6,7,6,6,5,5,7,6,6,6,6,4,6,5,6,6,6,6,6,5,5,6,3,7,7,5,7,6,7,7,8,6,7,5,5,6,7,5,7,7,8,7,6,5,6,4,6,6,4,6,6,5,6,5,8,7,6,6,6,6,6,7,7,6,7,5,5,5,7,6,6,7,6,5,5,7,5,4,7,6,5,7,6,6,6,5,3,7,8,5,8,5,7,6,6,6,6,6,7,5,6,7,7,6,7,4,6,6,6,5,7,4,5,5,5,4,4,7,8,6,6,6,8,6,5,6,7,7,6,7,7,3,5,6,7,6,6,4,6,6,5,5,7,6,6,6,6,6,5,5,2,7,7,6,7,7,6,4,8,6,7,6,7,7,4,6,7,5,7,6,6,5,5,4,6,6,7,6,6,6,6,5,8,7,6,5,7,7,4,6,6,5,6,5,7,6,4,5,6,6,7,6,6,5,6,5,5,6,6,5,7,5,6,5,7,6,7,7,7,5,5,7,8,7,7,7,5,5,7,6,6,6,6,7,6,7,5,6,7,5,6,6,7,5,7,6,8,6,7,5,7,7,6,6,8,5,6,6,6,6,4,6,6,6,6,6,5,6,6,4,7,6,6,6,6,4,6,5,6,8,7,6,8,7,7,7,8,8,7,6,8,8,7,7,8,6,6,6,8,7,7,7,5,7,6,6,7,7,6,7,7,8,7,8,8,8,7,7,7,8,8,6,7,7,6,7,7,6,7,6,6,6,3,6,6,7,7,6,7,6,5,6,9,8,9,9,8,8,7,7,9,7,8,8,7,8,8,8,8,8,9,7,6,8,8,7,6,7,8,7,7,7,8,7,9,8,8,6,8,6,8,7,8,8,8,8,8,6,8,7,8,7,7,7,7,7,6,7,7,7,8,7,7,7,7,8,10,9,7,7,8,7,8,8,9,8,9,8,8,9,9,8,8,8,6,8,6,8,9,7,9,6,9,7,9,7,8,7,8,7,8,8,8,8,8,6,8,8,7,6,8,7,8,7,8,8,8,7,8,8,7,8,7,7,7,6,8,6,7,7,9,8,8,8,8,8,6,7,8,8,6,7,7,9,7,6,9,8,8,7,8,7,7,6,9,7,9,6,6,7,5,7,9,6,9,7,8,8,7,6,8,7,8,8,7,8,6,7,8,7,8,8,8,6,7,5,7,7,8,8,8,7,7,6,7,9,8,8,9,7,7,8,9,5,8,8,8,7,7,8,9,7,8,7,6,7,8,8,7,8,7,7,7,7,7,7,8,7,9,6,9,5,8,6,8,7,8,8,7,7,6,7,7,8,6,4,8,5,7,6,8,8,6,5,7,5,6,5,9,7,7,9,8,7,8,7,9,8,8,8,9,8,6,6,10,8,7,8,6,6,7,6,7,8,7,8,8,7,6,7,9,8,7,6,7,8,6,8,8,7,6,6,7,7,7,6,8,7,9,5,7,8,7,6,8,7,8,7,7,6,7,7,9,8,7,8,8,9,9,8,8,8,7,8,7,8,7,7,9,8,8,8,8,8,6,7,8,6,8,7,8,7,8,7,9,8,7,8,6,8,6,7,8,6,8,6,7,7,7,7,8,6,8,7,7,6,8,4,5,5,8,5,6,5,7,6,10,9,10,7,9,8,8,8,9,8,8,8,7,8,8,7,8,7,7,6,8,8,8,8,9,8,8,8,8,7,6,7,9,7,8,8,7,9,7,7,8,7,8,8,7,7,7,6,8,9,9,7,8,7,8,6,8,8,8,8,7,6,7,7,6,8,8,6,8,6,6,6,9,8,8,8,7,7,9,6,9,8,8,7,6,6,3,7,8,8,7,7,8,8,8,7,7,8,8,8,7,6,7,6,7,8,8,6,5,8,7,6,8,7,7,7,7,7,7,6,7,7,7,7,7,6,5,6,10,9,7,9,10,9,7,7,7,9,9,7,7,7,9,8,9,8,7,9,9,8,8,7,7,9,9,8,8,7,7,8,9,7,7,9,9,8,8,8,7,9,9,7,8,8,7,8,9,8,8,7,8,8,8,7,8,7,7,8,8,7,7,8,7,6,7,6,7,7,7,6,6,6,6,5,6,7,6,6,7,6,4,6,6,7,6,7,6,6,6,4,6,5,7,6,7,7,7,5,7,6,6,6,7,5,6,6,5,5,5,6,7,6,7,6,4,6,6,5,6,7,6,5,7,5,6,5,3,7,7,7,7,7,6,7,8,6,7,7,7,6,3,6,7,5,7,6,5,6,7,4,6,7,7,6,6,6,7,5,7,8,7,5,7,8,5,6,7,5,6,5,5,5,6,4,7,6,7,6,6,6,6,5,6,4,7,7,6,5,6,5,4,7,7,5,7,5,6,6,6,5,6,5,7,6,6,6,6,6,6,6,4,6,6,6,7,5,6,5,6,5,6,6,6,8,6,4,7,7,6,5,7,6,5,6,5,4,5,4,7,6,6,5,6,5,5,5,7,7,6,6,6,4,5,6,3,6,7,7,7,7,8,6,7,7,7,6,7,4,7,6,7,7,5,6,6,6,6,4,5,5,6,5,6,6,6,6,7,7,7,5,6,5,7,6,7,7,6,5,7,5,7,7,7,7,5,5,6,6,6,5,6,7,5,3,6,5,6,5,7,5,7,7,7,6,6,6,8,6,6,6,8,7,6,7,7,6,6,7,6,5,7,6,7,6,7,6,5,5,5,7,8,7,7,4,7,7,7,4,7,7,6,6,6,7,7,5,7,7,5,5,6,6,6,5,6,6,6,6,6,4,5,5,6,7,6,5,6,7,5,5,8,7,7,5,7,7,5,7,8,6,6,4,6,3,5,6,5,6,5,4,6,5,6,6,6,6,7,5,7,5,6,6,7,7,6,5,6,6,7,6,6,6,6,6,5,6,6,4,6,5,5,5,6,4,5,5,10,8,10,8,8,8,8,8,9,8,8,8,7,8,8,8,7,9,7,6,6,9,7,8,8,7,7,8,8,7,7,6,8,8,9,8,7,7,6,6,9,8,8,7,9,7,7,6,8,7,6,8,9,7,8,7,7,7,8,6,5,7,7,5,7,8,9,5,8,9,7,6,9,7,9,5,5,6,5,3,8,6,7,6,6,7,4,7,7,4,8,6,6,7,6,7,7,8,8,8,8,6,7,7,8,7,8,7,8,7,7,7,8,7,8,7,7,7,7,6,8,7,8,7,7,6,7,6,9,9,9,7,9,8,7,7,8,8,6,8,8,7,8,8,9,8,8,8,7,8,7,7,8,8,8,8,7,7,7,7,9,8,7,8,8,8,9,8,9,7,7,7,6,7,7,7,6,8,7,7,8,6,8,7,8,8,8,6,7,7,6,7,7,8,6,7,8,6,7,6,8,7,6,6,8,7,5,5,8,7,7,7,6,7,6,7,8,8,8,7,5,7,4,6,8,7,8,5,8,7,7,4,7,7,6,6,5,7,7,6,7,5,7,6,7,6,6,5,7,5,6,7,6,5,5,6,8,8,5,8,8,7,7,6,8,7,8,7,7,7,8,6,7,8,6,7,6,8,5,7,8,6,8,7,7,5,7,6,9,7,7,6,7,7,7,7,8,7,7,6,6,6,8,5,7,7,7,6,8,7,6,5,7,7,7,6,7,7,6,5,4,7,8,7,7,6,5,6,7,6,6,8,7,8,7,7,9,8,8,7,7,6,6,6,8,2,5,6,6,7,6,5,8,7,8,6,7,5,8,7,7,7,7,7,7,6,8,7,7,6,7,7,7,7,7,5,7,7,6,6,6,5,6,7,3,7,8,8,8,8,7,7,8,8,8,7,7,7,7,7,6,7,5,6,5,7,7,6,8,7,7,6,7,7,5,7,8,8,8,5,7,6,7,6,8,5,7,6,6,6,7,6,7,8,6,7,7,7,6,6,8,6,5,6,7,6,6,6,10,9,8,8,8,8,7,8,9,9,9,8,8,8,8,7,9,8,7,9,7,8,8,7,8,8,8,7,9,7,7,7,8,7,9,8,8,8,8,7,9,8,6,7,7,8,8,8,8,8,8,7,8,8,7,7,8,7,6,8,8,8,7,6,9,8,10,9,8,8,8,7,9,9,8,6,8,9,8,6,8,9,7,7,6,7,8,7,9,8,9,8,7,7,7,8,9,8,8,6,8,7,8,7,9,8,7,8,8,7,7,7,8,7,8,7,8,7,6,7,8,8,6,7,7,7,8,6,4,7,8,6,9,5,7,7,7,7,8,5,5,6,7,5,6,7,6,6,7,5,7,5,7,7,3,6,6,6,6,5,8,8,6,7,9,8,7,6,7,7,6,6,6,6,7,5,6,7,6,7,7,7,6,4,6,7,7,6,6,6,7,6,4,8,6,6,6,7,5,7,8,7,6,4,6,3,6,4,8,6,4,6,7,7,6,5,5,6,6,6,5,6,6,5,7,7,7,5,8,5,6,6,7,7,6,6,6,6,6,5,7,6,6,6,5,3,6,6,6,6,5,5,6,5,6,6,7,7,7,6,7,8,7,4,7,6,6,7,7,4,6,6,6,7,5,6,6,7,5,6,7,5,5,5,5,4,6,6,8,6,6,5,7,6,7,5,8,7,7,5,7,6,6,6,7,6,7,5,5,6,6,5,7,7,6,5,6,6,4,4,7,7,6,5,6,6,5,6,8,6,7,7,7,6,7,6,7,7,6,4,6,7,6,6,6,6,6,6,6,5,6,6,8,7,6,6,7,6,6,6,7,6,6,5,6,5,7,5,7,7,6,6,5,5,6,5,5,6,6,4,5,5,6,5,7,7,7,5,7,6,7,7,7,5,6,4,6,7,7,6,6,6,5,6,5,6,6,6,6,6,6,4,7,6,6,6,7,7,6,5,7,6,6,5,7,7,6,5,6,6,6,5,7,7,7,5,5,6,4,5,6,7,6,5,6,6,5,5,8,6,7,6,6,7,6,6,7,7,7,7,6,6,6,6,7,7,7,7,8,6,6,7,8,6,7,7,7,5,6,6,8,6,7,6,7,6,7,5,7,7,8,5,6,6,5,4,6,6,7,6,5,6,5,4,8,6,7,5,6,4,6,5,4,5,8,5,8,6,5,4,7,7,7,6,6,7,6,5,6,5,6,6,6,4,5,5,7,6,7,7,7,6,6,6,7,7,7,5,6,7,6,6,7,5,7,6,6,5,5,5,8,6,6,6,4,4,6,5,5,6,6,6,6,4,5,4,4,7,8,7,6,8,7,7,8,7,8,8,6,7,8,7,8,4,8,7,7,6,6,5,7,7,7,4,7,6,7,7,7,6,7,8,8,6,5,7,7,6,7,7,4,7,6,6,7,7,5,7,7,7,6,6,7,5,7,7,6,7,6,6,10,9,8,8,8,8,7,8,8,8,8,8,8,8,8,7,9,9,7,9,7,8,8,8,9,8,7,7,9,7,7,7,8,8,8,8,8,8,8,7,8,9,6,7,8,8,7,8,8,8,9,6,8,8,7,7,8,8,6,8,8,8,7,6,8,9,9,8,7,8,8,8,8,8,9,7,9,9,8,6,9,9,8,7,7,7,8,7,9,7,8,7,8,7,8,7,9,8,8,7,8,7,8,7,9,8,7,7,8,7,7,6,8,7,8,7,8,7,6,7,8,8,7,7,7,8,8,7,3,8,8,7,8,6,6,6,7,7,6,7,7,8,6,7,8,8,9,7,8,6,7,5,8,3,6,7,6,6,6,5,8,6,8,7,7,4,7,7,6,7,6,7,7,7,7,6,6,6,7,6,7,7,6,6,7,7,6,7,7,6,7,6,2,8,9,8,8,8,8,7,8,8,8,7,8,7,7,7,7,7,6,6,6,7,7,5,8,6,7,7,7,7,6,7,8,8,8,5,7,6,7,6,8,6,7,6,7,6,7,6,7,8,7,7,6,7,7,7,7,7,4,7,6,6,6,5,8,8,7,6,8,7,7,5,8,7,5,7,8,6,6,6,8,7,7,8,6,7,7,8,8,7,8,6,6,7,5,7,7,6,8,6,8,7,7,5,8,7,7,7,6,8,7,7,8,6,7,6,8,6,7,5,7,6,7,7,7,5,6,6,8,7,6,7,7,7,6,7,8,7,8,6,7,6,7,6,8,8,5,6,7,8,6,7,8,7,8,6,6,6,7,6,8,7,8,6,7,7,7,7,9,8,7,5,7,6,8,5,7,7,8,6,7,7,5,5,7,8,7,6,7,7,6,6,7,7,10,6,7,8,7,6,9,7,8,6,6,5,6,3,8,6,6,5,6,8,4,8,6,4,8,7,7,8,5,6,6,9,7,9,8,5,8,7,7,8,8,7,8,7,7,6,8,8,7,7,7,7,7,5,7,8,7,8,7,6,8,6,10,9,9,7,9,7,7,6,9,7,6,7,9,8,7,8,8,9,8,8,7,8,8,8,9,8,8,8,7,8,7,8,9,8,8,8,8,8,8,8,9,7,8,8,7,6,8,7,7,8,7,7,8,7,8,6,7,7,7,7,6,7,7,7,8,8,8,9,8,9,9,7,8,9,8,8,8,7,9,5,8,9,8,7,8,8,7,6,9,7,8,6,8,7,7,7,9,7,8,7,7,8,5,7,8,7,8,7,8,8,7,7,7,7,7,7,8,8,7,6,7,6,8,6,7,8,7,6,6,6,8,5,6,5,8,6,8,7,7,6,6,5,5,6,8,6,6,4,6,5,7,6,8,7,6,4,6,6,4,6,7,7,6,5,9,7,6,6,8,7,7,6,8,7,4,6,7,7,6,6,5,7,6,4,7,6,6,5,6,5,6,6,9,8,7,7,7,8,7,7,8,8,7,6,7,8,7,6,8,7,8,6,8,7,7,7,8,7,8,7,7,7,6,7,8,8,8,7,9,7,7,8,8,7,8,7,8,7,6,7,8,7,8,6,6,7,6,7,8,7,7,6,6,7,7,6,10,8,9,8,9,9,7,8,9,9,8,8,8,8,8,8,9,8,8,8,7,9,6,8,7,8,8,8,7,8,7,7,9,8,8,9,8,8,8,6,9,8,7,6,8,7,7,7,8,8,8,7,9,7,7,7,8,8,8,7,9,7,7,7,9,8,7,7,10,9,8,7,8,8,8,8,7,8,9,6,7,8,7,8,8,9,8,7,9,6,8,7,7,7,6,7,8,9,8,7,7,8,7,8,9,8,7,7,9,7,9,8,8,8,8,7,7,5,7,8,6,7,6,7,8,7,8,7,8,8,8,5,8,7,7,6,8,7,8,6,7,6,8,7,8,6,6,6,4,7,6,6,4,7,6,4,5,6,6,6,6,8,9,8,7,6,7,7,9,6,8,7,7,5,7,7,8,7,6,7,7,6,5,6,7,7,7,7,6,7,7,5,7,8,6,6,8,7,8,7,9,7,7,6,8,6,7,7,7,7,6,7,8,7,8,7,6,7,6,7,6,7,6,6,8,7,8,5,7,7,6,6,9,7,8,7,7,6,7,6,7,7,7,7,4,6,7,5,7,5,7,6,7,6,5,6,7,7,7,7,7,8,8,7,8,7,8,7,8,8,6,7,8,4,7,7,6,6,8,7,7,8,8,6,7,6,7,6,8,7,7,7,7,7,7,7,9,7,8,7,7,7,5,7,9,8,8,6,7,6,8,5,7,8,8,6,7,5,6,6,9,8,9,6,9,9,8,8,9,8,8,8,8,8,7,8,8,6,8,5,8,8,8,8,9,8,7,7,7,7,7,7,8,8,8,8,8,8,8,6,9,8,8,7,7,8,7,7,9,8,8,7,8,7,7,7,8,8,8,7,6,7,7,7,6,8,9,7,8,6,7,5,9,9,9,8,7,7,8,7,8,8,7,7,6,7,3,8,9,8,8,8,8,8,7,6,6,9,7,8,7,7,7,6,6,8,8,6,6,8,8,6,8,6,8,6,8,7,7,5,7,7,7,7,8,6,5,5,10,8,8,9,9,8,9,7,8,9,8,8,9,8,6,7,9,8,8,8,7,7,7,7,7,8,8,7,8,7,6,7,9,9,8,6,8,8,7,8,8,8,7,6,7,7,8,7,8,8,9,5,8,8,7,6,8,6,8,8,8,7,7,7,8,8,7,8,8,9,9,7,8,7,6,8,7,8,8,7,9,8,8,7,8,7,6,7,8,6,8,7,7,7,7,8,10,7,7,7,6,7,6,8,7,7,7,7,6,7,8,6,8,5,8,7,8,7,8,5,6,6,8,6,6,6,8,6,8,7,9,7,8,9,5,6,7,8,6,8,8,8,7,7,8,7,7,7,8,7,6,6,8,7,8,6,6,7,5,8,9,6,8,7,8,8,7,6,8,6,7,7,7,7,7,7,7,7,7,7,8,6,6,5,7,8,7,7,7,7,7,6,8,9,8,7,9,7,7,8,8,6,9,8,8,7,7,8,9,8,8,6,6,8,8,7,8,7,6,7,8,6,7,7,7,6,8,7,9,6,7,5,8,6,8,8,6,6,6,7,8,7,6,5,8,6,8,6,7,8,7,5,6,4,5,5,8,9,8,8,9,8,8,6,9,8,8,8,6,7,8,8,7,9,9,8,7,7,8,7,7,8,9,7,6,7,8,8,9,7,9,7,8,6,7,6,9,7,8,7,7,7,8,8,8,7,8,7,8,8,7,8,7,6,8,7,7,7,8,8,10,9,7,8,8,8,8,8,8,8,9,8,8,8,9,8,8,8,6,8,6,8,9,8,9,7,8,7,8,7,8,7,7,8,8,8,9,8,8,6,8,7,8,7,8,7,8,8,9,8,8,6,8,8,7,7,7,8,7,6,8,6,7,6]};","exports.hash5 = function({p2, p1, p0, o}) { //avg 7.599925518689986    len 373248 373248\r\n\tlet v = o - ((o & 0b1010101010101010) >> 1);\r\n\r\n\treturn (p2&0b111 | (p1&0b11100)<<2 | (p0&0b110001)<<3) * 729 +\r\n\t\t(v&0b11) + \r\n\t\t(v&0b1100)*3/4 + \r\n\t\t(v&0b110000)*9/16 + \r\n\t\t(v&0b11000000)*27/64 + \r\n\t\t(v&0b1100000000)*81/256 + \r\n\t\t(v&0b110000000000)*243/1024;\r\n};\r\n\r\nexports.hash6 = function({p2, p1, p0, o}) { //avg 6.288299560546875    len 32768 32768\r\n\tlet g = ((o & 0b010101010101) * 0b100001 >> 5) & 0b111111;\r\n\r\n\treturn (p2&0b111 | (p1&0b11100)<<2 | (p0&0b110001)<<3)<<6 | g;\r\n};\r\n\r\nexports.hash7 = function({p2, p1, p0, o}) { //avg 3.677734375    len 512 512\r\n\tlet g = ((o & 0b010101010101) * 0b100001 >> 5) & 0b111111;\r\n\r\n\treturn (p2&0b111 | (p1&0b11100)<<2 | (p0&0b110001)<<3);\r\n};\r\n\r\nexports.hash8 = function({p2, p1, p0, o}) {\r\n\tlet v = o - ((o & 0b1010101010101010) >> 1);\r\n\r\n\treturn (p2&0b1111 | (p1&0b11110)<<3 | (p0&0b111100)<<6) * 729 +\r\n\t\t(v&0b11) + \r\n\t\t(v&0b1100)*3/4 + \r\n\t\t(v&0b110000)*9/16 + \r\n\t\t(v&0b11000000)*27/64 + \r\n\t\t(v&0b1100000000)*81/256 + \r\n\t\t(v&0b110000000000)*243/1024;\r\n};\r\n\r\nexports.hash9 = function({p2, p1, p0, o}) {\r\n\t// transform orientation 2 from 11 to 01, leave the rest\r\n\tlet v = o - ((o & 0b1010101010101010) >> 1);\r\n\t\r\n\treturn (p2&0b111 | (p1&0b11100)<<2 | (p0&0b110001)<<3) * 243 +\r\n\t\t((v&0b000000000011)     )     + \r\n\t\t((v&0b000000001100) >> 2) * 3 + \r\n\t\t((v&0b000000110000) >> 4) * 9 + \r\n\t\t((v&0b000011000000) >> 6) * 27+ \r\n\t\t((v&0b001100000000) >> 8) * 81;\r\n};\r\n\r\n","import {hashId, patternDB} from '../tables/pdb-hash6.json';\r\nimport hashes from './hashes.js';\r\n\r\nlet hash = hashes[hashId];\r\n\r\nexport default cubeState => patternDB[hash(cubeState)];\r\n","const expandMoves = {\r\n\t'U': ['F1', 'F2', 'F3', 'R1', 'R2', 'R3'],\r\n\t'F': ['U1', 'U2', 'U3', 'R1', 'R2', 'R3'],\r\n\t'R': ['U1', 'U2', 'U3', 'F1', 'F2', 'F3'],\r\n\t'': ['U1', 'U2', 'U3', 'F1', 'F2', 'F3', 'R1', 'R2', 'R3']\r\n};\r\n\r\nclass SearchState {\r\n\tconstructor(state, prevSearchState, lastMove) {\r\n\t\tthis.state = state;  // this is public variable\r\n\t\tthis.prevSearchState = prevSearchState || null;\r\n\t\tthis.lastMove = lastMove || null;\r\n\t}\r\n\r\n\texpand() {\r\n\t\tlet lastSide = this.lastMove && this.lastMove[0] || '';\r\n\t\treturn expandMoves[lastSide].map(move => \r\n\t\t\tnew SearchState(this.state.generateNextState(move), this, move)\r\n\t\t);\r\n\t}\r\n\r\n\tisGoal() {\r\n\t\treturn this.state.isSolved();\r\n\t}\r\n\r\n\tgetMoves() {\r\n\t\tlet moves = [];\r\n\t\tlet state = this;\r\n\t\twhile(state.prevSearchState) {\r\n\t\t\tmoves.push(state.lastMove);\r\n\t\t\tstate = state.prevSearchState;\r\n\t\t}\r\n\t\treturn moves.reverse();\r\n\t}\r\n}\r\n\r\nmodule.exports = SearchState;\r\n","import heuristics from './heuristics.js';\r\nimport SearchState from './searchstate.js';\r\n\r\nexport default function cubeSearch(startState) {\r\n\tlet startNode = new SearchState(startState);\r\n\tlet maxDepth = heuristics(startState);\r\n\twhile(maxDepth<=11) {  // 11 moves is the worst case solution\r\n\t\tlet t = search(startNode, 0, maxDepth);\r\n\t\tif(typeof t != 'number') return t;  // success!\r\n\t\tmaxDepth++;\r\n\t}\r\n\treturn null;\r\n}\r\n\r\nfunction search(node, depth, maxDepth) {\r\n\tlet h = heuristics(node.state);\r\n\tif(depth + h > maxDepth) return h;\r\n\tif(node.isGoal()) return node.getMoves();\r\n\tlet successors = node.expand();\r\n\tfor(var i=0; i<successors.length; i++) {\r\n\t\tlet t = search(successors[i], depth+1, maxDepth);\r\n\t\tif(typeof t != 'number') return t;  // success!\r\n\t\tif(t-1>h) {\r\n\t\t\th = t-1;\r\n\t\t\t// don't examine other successors if we can already \r\n\t\t\t// conclude that the current node can be pruned\r\n\t\t\tif(depth+h>maxDepth) return h;\r\n\t\t}\r\n\t}\r\n\treturn h;\r\n}\r\n","function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nmodule.exports = _arrayWithHoles;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nmodule.exports = _iterableToArrayLimit;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableRest;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","var arrayWithHoles = require(\"./arrayWithHoles.js\");\n\nvar iterableToArrayLimit = require(\"./iterableToArrayLimit.js\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\n\nvar nonIterableRest = require(\"./nonIterableRest.js\");\n\nfunction _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}\n\nmodule.exports = _slicedToArray;\nmodule.exports[\"default\"] = module.exports, module.exports.__esModule = true;","// This file contains helper functions for alteration of moves.\r\n\r\n\r\nconst rt0 = {'x1': 0, 'x2': 1, 'x3': 2, 'y1': 3, 'y2': 4, 'y3': 5, 'z1': 6, 'z2': 7, 'z3': 8};\r\n\r\nconst rt1 = { // e.g. moves ['x3', 'y2'] can be replaced with 'z2'\r\n\t//      x1    x2    x3    y1    y2    y3    z1    z2    z3\r\n\t'x1': ['x2', 'x3', null, 'z1', 'z2', 'z3', 'y3', 'y2', 'y1'],\r\n\t'x2': ['x3', null, 'x1', 'y3', 'y2', 'y1', 'z3', 'z2', 'z1'],\r\n\t'x3': [null, 'x1', 'x2', 'z3', 'z2', 'z1', 'y1', 'y2', 'y3'],\r\n\t'y1': ['z3', 'z2', 'z1', 'y2', 'y3', null, 'x1', 'x2', 'x3'],\r\n\t'y2': ['x3', 'x2', 'x1', 'y3', null, 'y1', 'z3', 'z2', 'z1'],\r\n\t'y3': ['z1', 'z2', 'z3', null, 'y1', 'y2', 'x3', 'x2', 'x1'],\r\n\t'z1': ['y1', 'y2', 'y3', 'x3', 'x2', 'x1', 'z2', 'z3', null],\r\n\t'z2': ['x3', 'x2', 'x1', 'y3', 'y2', 'y1', 'z3', null, 'z1'],\r\n\t'z3': ['y3', 'y2', 'y1', 'x1', 'x2', 'x3', null, 'z1', 'z2']\r\n};\r\n\r\nconst rt2 = {\r\n\t'x': 'UFDB',  // when 'x1' before 'Fn', replace it with 'Dn' (D is 1 postiion right of F)\r\n\t'y': 'FRBL',\r\n\t'z': 'ULDR'\r\n};\r\n\r\nconst antiFaces = {     // opposite faces\r\n\t'U': 'D', 'D': 'U',\r\n\t'F': 'B', 'B': 'F',\r\n\t'R': 'L', 'L': 'R'\r\n};\r\n\r\nconst face2plane = {\r\n\t'U': 'y', 'D': 'y',\r\n\t'F': 'z', 'B': 'z',\r\n\t'R': 'x', 'L': 'x',\r\n};\r\n\r\n\r\n\r\nexport function removeCubeRotations(moves) {\r\n\tmoves = moves.slice();\r\n\tfor(let i=moves.length; i>=0; i--) {\r\n\t\tmoves = removeCubeRotationAt(moves, i);\r\n\t}\r\n\treturn moves;\r\n}\r\n\r\nexport function addRandomCubeRotations(moves, n) {\r\n\tfor(let i=0; i<n; i++) {\r\n\t\tmoves = replaceWithContra(moves, Math.random() * moves.length | 0);\r\n\t}\r\n\treturn moves;\r\n}\r\n\r\n\r\n\r\n/**\r\nRemove a cube rotation move on index `idx`, otherwise function returns input `moves`.\r\nSubsequent moves will be changed so the final result (to the cube rotation) is preserved.\r\n*/\r\nfunction removeCubeRotationAt(moves, idx) {\r\n\tlet a = moves[idx];\r\n\tif(!(a in rt0)) return moves;\r\n\r\n\tmoves = moves.slice();\r\n\tmoves.splice(idx, 1);\r\n\r\n\tfor(let i=idx; i<moves.length; i++) {\r\n\t\tmoves[i] = replace2to1(a, moves[i]);\r\n\t}\r\n\r\n\treturn moves.filter(x=>x); // remove nulls\r\n}\r\n\r\n\r\n\r\n/**\r\nIf there is a face move on index `idx`, e.g. 'R1', this function will replace that move\r\nwith cotra move 'L1', following by 'x1'. Final cube state will be preserved.\r\nDoes nothing if `moves[idx]` is a cube rotation move.\r\n*/\r\nfunction replaceWithContra(moves, idx) {\r\n\tif(rt1[moves[idx]]) return moves;  // it's a cube rotation move\r\n\tmoves = moves.slice();\r\n\tmoves[idx] = replace1to2(moves[idx]);\r\n\treturn moves.flat();\r\n}\r\n\r\n\r\n\r\n/**\r\nReturns 1 move that the given 2 moves `a` and `b` can be replaced with. (It brings\r\nthe cube to the same state).\r\nFirst move out of the two must be a cube rotation move, there is no input validation.\r\nE.g.: for input ('x1', 'U3'), returns 'F3'.\r\n*/\r\nfunction replace2to1(a, b) {\r\n\t// check if `b` is a cube rotation move\r\n\tlet i = rt0[b];\r\n\tif(i >= 0) return rt1[a][i];\r\n\r\n\t// check if `b` is a regular face move\r\n\tlet t = rt2[a[0]];\r\n\tlet k = t.indexOf(b[0]);\r\n\tif(k > -1) return t[(k + (+a[1])) % 4] + b[1];\r\n\r\n\t// `b` is not influenced by `a`\r\n\treturn b;\r\n}\r\n\r\n\r\n\r\n/**\r\nReturns 2 moves that the given face move can be replaced with. (It brings the cube to the same state).\r\nIf input move is a cube rotation move, function just returns that move.\r\nFirst move out of the two will be a face move, and the second a cube rotation move.\r\nE.g.: for input 'R1', returns ['L1', 'x1'].\r\n*/\r\nfunction replace1to2(move) {\r\n\tif(move in rt0) return move;  // it's a cube rotation move\r\n\tlet [face, step] = move;\r\n\tlet a = antiFaces[face] + step;\r\n\tlet b = face2plane[face] + ('UFR'.includes(face) ? step : 4 - step);\r\n\treturn [a, b];\r\n}\r\n","import CubeState from './cubestate.js'\r\nimport search from './search.js';\r\nimport {removeCubeRotations, addRandomCubeRotations} from './moves-editor.js';\r\n\r\nexport default function(per, ori) {\r\n\tlet [p2, p1, p0, o] = [0, 0, 0, 0];\r\n\tfor(let i=0; i<8; i++) {\r\n\t\tlet p = per[i];\r\n\t\tp0 += (p & 1) << i     // take 1. bit from right and put it to i-th position\r\n\t\tp1 += (p>>1 & 1) << i; // take 2. bit from right and put it to i-th position\r\n\t\tp2 += p >> 2 << i;     // take 3. bit from right and put it to i-th position\r\n\t\tlet oi = ori[i];\r\n\t\to += (oi<2 ? oi : 3) << 2*i // fix 2->0b11 and put it to 2*i-th position\r\n\t}\r\n\r\n\tlet state = new CubeState(p2, p1, p0, o);\r\n\tlet normalize = state.normalize();\r\n\r\n\tconsole.time('search');\r\n\tlet solutionAfterNormalize = search(state);\r\n\tconsole.timeEnd('search');\r\n\r\n\tlet solution = normalize.concat(solutionAfterNormalize);\r\n\tsolution = addRandomCubeRotations(solution, 4);\r\n\tsolution = removeCubeRotations(solution);\r\n\r\n\treturn solution;\r\n};\r\n","import '../page-setup/page-setup.js';\r\nimport '../page-solution/page-solution.js';\r\n\r\nimport solve from '/solve.js';\r\n\r\nconst template = document.createElement('template');\r\ntemplate.innerHTML = require('./app.html');\r\n\r\nexport class App extends HTMLElement {\r\n\tconstructor() {\r\n\t\tsuper();\r\n\t\tthis.attachShadow({mode: 'open'});\r\n\t\tthis.shadowRoot.appendChild(template.content.cloneNode(true));\r\n\t\tthis._el = this.shadowRoot.querySelector('div');\r\n\t\tthis._el_pageSetup = document.createElement('m-page-setup');\r\n\t\tthis._el_pageSolution = document.createElement('m-page-solution');\r\n\t\tthis._el.appendChild(this._el_pageSetup);\r\n\r\n\r\n\t\tthis._el_pageSetup.addEventListener('solve', evt => {\r\n\t\t\tlet po = evt.detail;\r\n\t\t\tlet solution = solve(po.p, po.o);\r\n\r\n\t\t\tthis._el.replaceChild(this._el_pageSolution, this._el_pageSetup);\r\n\t\t\tthis._el_pageSolution.solution = solution;\r\n\t\t\tthis._el_pageSolution.po = po;\t\t\t\r\n\t\t});\r\n\r\n\t\tthis._el_pageSolution.addEventListener('back', evt => {\r\n\t\t\tthis._el.replaceChild(this._el_pageSetup, this._el_pageSolution);\r\n\t\t});\r\n\t}\r\n}\r\n\r\ncustomElements.define('m-app', App);\r\n","var bundleURL = null;\nfunction getBundleURLCached() {\n  if (!bundleURL) {\n    bundleURL = getBundleURL();\n  }\n\n  return bundleURL;\n}\n\nfunction getBundleURL() {\n  // Attempt to find the URL of the current script and use that as the base URL\n  try {\n    throw new Error;\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp|chrome-extension|moz-extension):\\/\\/[^)\\n]+/g);\n    if (matches) {\n      return getBaseURL(matches[0]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp|chrome-extension|moz-extension):\\/\\/.+)?\\/[^/]+(?:\\?.*)?$/, '$1') + '/';\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\n","var getBundleURL = require('./bundle-url').getBundleURL;\n\nfunction loadBundlesLazy(bundles) {\n  if (!Array.isArray(bundles)) {\n    bundles = [bundles]\n  }\n\n  var id = bundles[bundles.length - 1];\n\n  try {\n    return Promise.resolve(require(id));\n  } catch (err) {\n    if (err.code === 'MODULE_NOT_FOUND') {\n      return new LazyPromise(function (resolve, reject) {\n        loadBundles(bundles.slice(0, -1))\n          .then(function () {\n            return require(id);\n          })\n          .then(resolve, reject);\n      });\n    }\n\n    throw err;\n  }\n}\n\nfunction loadBundles(bundles) {\n  return Promise.all(bundles.map(loadBundle));\n}\n\nvar bundleLoaders = {};\nfunction registerBundleLoader(type, loader) {\n  bundleLoaders[type] = loader;\n}\n\nmodule.exports = exports = loadBundlesLazy;\nexports.load = loadBundles;\nexports.register = registerBundleLoader;\n\nvar bundles = {};\nfunction loadBundle(bundle) {\n  var id;\n  if (Array.isArray(bundle)) {\n    id = bundle[1];\n    bundle = bundle[0];\n  }\n\n  if (bundles[bundle]) {\n    return bundles[bundle];\n  }\n\n  var type = (bundle.substring(bundle.lastIndexOf('.') + 1, bundle.length) || bundle).toLowerCase();\n  var bundleLoader = bundleLoaders[type];\n  if (bundleLoader) {\n    return bundles[bundle] = bundleLoader(getBundleURL() + bundle)\n      .then(function (resolved) {\n        if (resolved) {\n          module.bundle.register(id, resolved);\n        }\n\n        return resolved;\n      }).catch(function(e) {\n        delete bundles[bundle];\n        \n        throw e;\n      });\n  }\n}\n\nfunction LazyPromise(executor) {\n  this.executor = executor;\n  this.promise = null;\n}\n\nLazyPromise.prototype.then = function (onSuccess, onError) {\n  if (this.promise === null) this.promise = new Promise(this.executor)\n  return this.promise.then(onSuccess, onError)\n};\n\nLazyPromise.prototype.catch = function (onError) {\n  if (this.promise === null) this.promise = new Promise(this.executor)\n  return this.promise.catch(onError)\n};\n","module.exports = function loadHTMLBundle(bundle) {\n  return fetch(bundle).then(function (res) {\n    return res.text();\n  });\n};\n"]}